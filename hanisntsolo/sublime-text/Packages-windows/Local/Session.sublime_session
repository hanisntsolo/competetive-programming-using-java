{
	"file_history":
	[
		"/D/_code-hanisntsolo/.gitignore",
		"/D/_code-hanisntsolo/.idea/.gitignore",
		"/C/Users/hanisntsolo-boxx/AppData/Roaming/Sublime Text 3/Packages/Terminus/Default.sublime-commands",
		"/C/Users/hanisntsolo-boxx/AppData/Roaming/Sublime Text 3/Packages/User/Default.sublime-commands",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/output.txt",
		"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/primenumberandfactorisation/output.txt",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/input.txt",
		"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/output.txt",
		"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/input.txt",
		"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/primenumberandfactorisation/input.txt",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LexicographicallySmallest.java",
		"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/FindingSubsets.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BinaryExponentiation.java",
		"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/primenumberandfactorisation/Test.java",
		"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/Factors.java",
		"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/PrimeQueries.java",
		"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/PrimeSieve.java",
		"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/PrimeChecker.java",
		"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/Exponentiation.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Round843_A.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/RestoreThePermutation.java",
		"/D/_code-hanisntsolo/src/com/competetive/books/antti_laaksonen/input.txt",
		"/D/_code-hanisntsolo/src/com/competetive/books/antti_laaksonen/output.txt",
		"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/output.txt",
		"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/input.txt",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Humanoid.java",
		"/D/_code-hanisntsolo/src/com/competetive/books/antti_laaksonen/GeneratingSubsets.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/AllPossibleDigits.java",
		"/C/Users/hanisntsolo-boxx/AppData/Roaming/Sublime Text 3/Packages/User/cp.sublime-snippet",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Round141A.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Hello2023B.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Hello2023A.java",
		"/D/_code-hanisntsolo/src/com/competetive/leetcodeDaily/DetectCapitals.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LostPermutation834.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Thermostat.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/MakeItRound.java",
		"/D/_code-hanisntsolo/src/com/competetive/cp.sublime-snippet",
		"/D/_code-hanisntsolo/src/com/competetive/leetcodeDaily/output.txt",
		"/D/_code-hanisntsolo/src/com/competetive/leetcodeDaily/input.txt",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Div3_839_E.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Div3_839_D.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Div3839A.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/AttilasFavProb.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/MidiumNo.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Advantage.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LuckyChains.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/B.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/DivideAndConquer.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BlockTowers.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/CutTheTriangle.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Valleys.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/F.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HamiltonianWall2.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/MaxPermutation.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/AddPlus.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HossamAndCombinatorics.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/NotePad.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/ExRound.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/GCD.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HamiltonianWall.java",
		"/C/Users/hanisntsolo-boxx/AppData/Roaming/Sublime Text 3/Packages/User/op.sublime-snippet",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/\tat java.base/java.lang.StringBuffer.substring(StringBuffer.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Airport.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/YesYes.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HossamAndFriends.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Puzzles.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HossanAndCombinatorics.java",
		"/D/_code-hanisntsolo/src/com/competetive/cd.sublime-snippet",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HossamAndRange.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/SubSets.java",
		"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/BitManipulation.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BitManipulation.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/ChatRoom.java",
		"/D/_code-hanisntsolo/src/com/competetive/TemplateFull.java",
		"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/SubSets.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/ILoveUserNames.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/StringTask.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/FootBall2.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LittleElephantAndFunction.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Dragons.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/NumberOfPositions.java",
		"/D/_code-hanisntsolo/sublime-text/Packages-windows/BitManipulation.java",
		"/D/_code-hanisntsolo/hanisntsolo/sublime-text/ColumnOrganising Steps",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BicycleChain.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BusinessTrip.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Sale.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/DubStep.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/XeniaAndRingRoad.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/FootBall.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Translation.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/SuperCentral.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/JeffAndDigits.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/MagicNumbers.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/SystemOfEquations.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/EvenOdds.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LittleElephantAndRozdil.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HexTheorem.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Cupboards.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/DimaAndFriends.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/JuhuChildren.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Reconaissance2.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Parellopiped.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/EffectiveApproach.java",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/PeterAndBook.java"
	],
	"folder_history":
	[
		"/D/_code-hanisntsolo",
		"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300",
		"/D/_code-hanisntsolo/sublime-text",
		"/D/_code-hanisntsolo/hanisntsolo",
		"/D/_code-hanisntsolo/hanisntsolo/sublime-text",
		"/H/My Drive/My Repos/competetive-programming-using-java"
	],
	"last_version": 4143,
	"last_window_id": 33,
	"log_indexing": false,
	"next_update_check": 1692531936,
	"settings":
	{
		"new_window_full_screen": false,
		"new_window_height": 1028.0,
		"new_window_maximized": true,
		"new_window_position":
		[
			0.0,
			43.0
		],
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"a",
						"append"
					],
					[
						"Cha",
						"Character"
					],
					[
						"ch",
						"charList"
					],
					[
						"get",
						"getValue"
					],
					[
						"Ch",
						"Character"
					],
					[
						"syncho",
						"synchronizedMap"
					],
					[
						"Chara",
						"Character"
					],
					[
						"right",
						"rightMostSetBitPos"
					],
					[
						"rig",
						"rightMostSetBitPos"
					],
					[
						"righ",
						"rightMostSetBitPos"
					],
					[
						"Com",
						"Comparator"
					],
					[
						"un",
						"unUsedInt"
					],
					[
						"up",
						"upper_bound"
					],
					[
						"re",
						"recursive_upper_bound"
					],
					[
						"con",
						"contains"
					],
					[
						"as",
						"astronauts"
					],
					[
						"curr",
						"currAstroPower"
					],
					[
						"cos",
						"cosmoNauts"
					],
					[
						"total",
						"totalBalance"
					],
					[
						"toa",
						"totalBalance"
					],
					[
						"tot",
						"totalBalance"
					],
					[
						"hash",
						"HashMap"
					],
					[
						"po",
						"possibleNum"
					],
					[
						"cu",
						"currValue"
					],
					[
						"cur",
						"currValue"
					],
					[
						"pa",
						"parseInt"
					],
					[
						"Array",
						"ArrayIndexOutOfBoundsException"
					],
					[
						"Arr",
						"ArrayIndexOutOfBoundsException"
					],
					[
						"nex",
						"nextInt"
					],
					[
						"p",
						"possibleValley"
					],
					[
						"pu",
						"public"
					],
					[
						"st",
						"strength"
					],
					[
						"ma",
						"matrix"
					],
					[
						"fi",
						"first"
					],
					[
						"num",
						"number"
					],
					[
						"n",
						"number"
					],
					[
						"nu",
						"number"
					],
					[
						"sta",
						"startC"
					],
					[
						"tota",
						"totalSeenB"
					],
					[
						"fina",
						"finalTotalB"
					],
					[
						"next",
						"nextCol"
					],
					[
						"stra",
						"startR"
					],
					[
						"Ne",
						"nextLine"
					],
					[
						"fir",
						"firstNo"
					],
					[
						"sy",
						"System"
					],
					[
						"min",
						"minOddMap"
					],
					[
						"co",
						"compare"
					],
					[
						"Co",
						"Comparator"
					],
					[
						"mun",
						"minRevenue"
					],
					[
						"sea",
						"seatsInPlanesDesc"
					],
					[
						"reme",
						"remainingSeats"
					],
					[
						"to",
						"totalPeople"
					],
					[
						"Has",
						"HashSet"
					],
					[
						"clear",
						"clearBitsInRange"
					],
					[
						"clea",
						"clearBitsInRange"
					],
					[
						"firs",
						"firstNum"
					],
					[
						"thir",
						"thirdNum"
					],
					[
						"sec",
						"secondNum"
					],
					[
						"Ar",
						"ArrayList"
					],
					[
						"Int",
						"Integer"
					],
					[
						"pl",
						"player"
					],
					[
						"da",
						"dangerous1"
					],
					[
						"dan",
						"dangerous1"
					],
					[
						"cha",
						"Character"
					],
					[
						"dra",
						"dragonComparator"
					],
					[
						"Dr",
						"Dragon"
					],
					[
						"dro",
						"dragonList"
					],
					[
						"son",
						"songParts"
					],
					[
						"Coll",
						"Collectors"
					],
					[
						"th",
						"throws"
					],
					[
						"Strnig",
						"StringBuffer"
					],
					[
						"ttoa",
						"totalMoney"
					],
					[
						"by",
						"buyerList"
					],
					[
						"ta",
						"totalTvSets"
					],
					[
						"ratio",
						"ratioNeeded"
					],
					[
						"in",
						"index"
					],
					[
						"ra",
						"ratios"
					],
					[
						"front",
						"frontStarCount"
					],
					[
						"gea",
						"GearRatio"
					],
					[
						"rear",
						"rearStars"
					],
					[
						"fron",
						"frontStars"
					],
					[
						"fro",
						"frontStars"
					],
					[
						"tea",
						"teamName"
					],
					[
						"tes",
						"teams"
					],
					[
						"count",
						"countOf0"
					],
					[
						"coun",
						"countOf0"
					],
					[
						"upp",
						"upperN"
					],
					[
						"lef",
						"leftN"
					],
					[
						"is",
						"isRightNeighbor"
					],
					[
						"ca",
						"calculateEdge"
					],
					[
						"toff",
						"toffee"
					],
					[
						"first",
						"firstToffee"
					],
					[
						"read",
						"Reader"
					],
					[
						"zer",
						"zeroL"
					],
					[
						"one",
						"oneL"
					],
					[
						"zero",
						"zeroL"
					],
					[
						"sho",
						"shortestIndex"
					],
					[
						"tall",
						"tallestIndex"
					],
					[
						"val",
						"valueOf"
					],
					[
						"IOException",
						"InstantiationException"
					],
					[
						"In",
						"Integer"
					],
					[
						"dire",
						"direction"
					],
					[
						"gri",
						"gridRows"
					],
					[
						"sub",
						"subsetsWithDup"
					],
					[
						"BigIn",
						"BigInteger"
					],
					[
						"Bi",
						"BigInteger"
					],
					[
						"second",
						"secondChar"
					],
					[
						"frist",
						"firstChar"
					],
					[
						"uniqNumber",
						"uniqNumberThreeNplusOne"
					],
					[
						"First",
						"FirstUniqueCharInString"
					],
					[
						"for",
						"fore"
					]
				]
			},
			"build_system_choices":
			[
				[
					[
						[
							"Packages/User/JavaC-finalgajeet.sublime-build",
							""
						],
						[
							"Packages/User/JavaC-finalgajeet.sublime-build",
							"CP"
						]
					],
					[
						"Packages/User/JavaC-finalgajeet.sublime-build",
						"CP"
					]
				],
				[
					[
						[
							"Packages/User/JavaScript.sublime-build",
							""
						],
						[
							"Packages/User/JavaScript.sublime-build",
							"CP"
						]
					],
					[
						"Packages/User/JavaScript.sublime-build",
						"CP"
					]
				],
				[
					[
						[
							"Packages/User/sasa.sublime-build",
							""
						],
						[
							"Packages/User/sasa.sublime-build",
							"CP"
						]
					],
					[
						"Packages/User/sasa.sublime-build",
						"CP"
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"terminus",
						"Terminus: Toggle Panel"
					],
					[
						"terninus",
						"Terminus: Open Default Shell in Panel"
					],
					[
						"terminal",
						"Preferences: Terminus Command Palette"
					],
					[
						"termin",
						"Terminus: List Shells"
					],
					[
						"Snippet: ",
						"Snippet: cp"
					],
					[
						"Snippet: cp",
						"Snippet: cp"
					],
					[
						"ter",
						"Terminus: List Shells"
					],
					[
						"terminu",
						"Terminus: List Shells"
					],
					[
						"tern",
						"Terminus: List Shells"
					],
					[
						"termi",
						"Terminus: List Shells"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"packa",
						"Install Package Control"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 0.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/D/_code-hanisntsolo/.gitignore",
				"/D/_code-hanisntsolo/.idea/.gitignore",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/output.txt",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/primenumberandfactorisation/output.txt",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/input.txt",
				"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/output.txt",
				"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/input.txt",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/primenumberandfactorisation/input.txt",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LexicographicallySmallest.java",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/FindingSubsets.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BinaryExponentiation.java",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/primenumberandfactorisation/Test.java",
				"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/Factors.java",
				"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/PrimeQueries.java",
				"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/PrimeSieve.java",
				"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/PrimeChecker.java",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/Exponentiation.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Round843_A.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/RestoreThePermutation.java",
				"/D/_code-hanisntsolo/src/com/competetive/books/antti_laaksonen/input.txt",
				"/D/_code-hanisntsolo/src/com/competetive/books/antti_laaksonen/output.txt",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/output.txt",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/input.txt",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Humanoid.java",
				"/D/_code-hanisntsolo/src/com/competetive/books/antti_laaksonen/GeneratingSubsets.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/AllPossibleDigits.java",
				"/C/Users/hanisntsolo-boxx/AppData/Roaming/Sublime Text 3/Packages/User/cp.sublime-snippet",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Round141A.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Hello2023B.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Hello2023A.java",
				"/D/_code-hanisntsolo/src/com/competetive/leetcodeDaily/DetectCapitals.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LostPermutation834.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Thermostat.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/MakeItRound.java",
				"/D/_code-hanisntsolo/src/com/competetive/cp.sublime-snippet",
				"/D/_code-hanisntsolo/src/com/competetive/leetcodeDaily/output.txt",
				"/D/_code-hanisntsolo/src/com/competetive/leetcodeDaily/input.txt",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Div3_839_E.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Div3_839_D.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Div3839A.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/AttilasFavProb.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/MidiumNo.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Advantage.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LuckyChains.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/B.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/DivideAndConquer.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BlockTowers.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/CutTheTriangle.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Valleys.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/F.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HamiltonianWall2.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/MaxPermutation.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/AddPlus.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HossamAndCombinatorics.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/NotePad.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/ExRound.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/GCD.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HamiltonianWall.java",
				"/C/Users/hanisntsolo-boxx/AppData/Roaming/Sublime Text 3/Packages/User/op.sublime-snippet",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/\tat java.base/java.lang.StringBuffer.substring(StringBuffer.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Airport.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/YesYes.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HossamAndFriends.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Puzzles.java",
				"/D/_code-hanisntsolo/src/com/competetive/cd.sublime-snippet",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HossamAndRange.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/SubSets.java",
				"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/BitManipulation.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BitManipulation.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/ChatRoom.java",
				"/D/_code-hanisntsolo/src/com/competetive/TemplateFull.java",
				"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/SubSets.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/ILoveUserNames.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/StringTask.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/FootBall2.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LittleElephantAndFunction.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Dragons.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/NumberOfPositions.java",
				"/D/_code-hanisntsolo/sublime-text/Packages-windows/BitManipulation.java",
				"/D/_code-hanisntsolo/hanisntsolo/sublime-text/ColumnOrganising Steps",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BicycleChain.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BusinessTrip.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Sale.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/DubStep.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/XeniaAndRingRoad.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/FootBall.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Translation.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/SuperCentral.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/JeffAndDigits.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/MagicNumbers.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/SystemOfEquations.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/EvenOdds.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LittleElephantAndRozdil.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HexTheorem.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Cupboards.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/DimaAndFriends.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/JuhuChildren.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Reconaissance2.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Parellopiped.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/EffectiveApproach.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/PeterAndBook.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HQnine.java",
				"/D/_code-hanisntsolo/src/com/competetive/leetcodeDaily/MinAvgDiff.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/SoftDrinking.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/AmusingJoke.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HorseShoeColor.java",
				"/C/Users/hanisntsolo-boxx/AppData/Roaming/Sublime Text 3/Packages/User/ins.sublime-snippet",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/PerfectPermutation.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/ArrivalOfGeneral.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Drinks.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/InsomniaCure.java",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/DynamicProgramming/output.txt",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/DynamicProgramming/input.txt",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/DynamicProgramming/IncDecNumber.java",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/DynamicProgramming/SortedArray.java",
				"/D/_code-hanisntsolo/src/com/competetive/leetcodeDaily/Solution.java",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/DynamicProgramming/Fibonacci.java",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/DynamicProgramming/PowerFunction.java",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/DynamicProgramming/Factorial.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/NextPrime.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Error",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/\tat java.base/java.lang.Integer.valueOf(Integer.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Caused by",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/UltraFastMathmatician.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BeautifulYear.java",
				"/C/Users/hanisntsolo-boxx/AppData/Roaming/Sublime Text 3/Packages/User/import.sublime-snippet",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LightsOut.java"
			],
			"find":
			{
				"height": 41.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"BigInteger",
					");\n",
					"Collectors",
					");\n",
					"System"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"long"
				],
				"reverse": false,
				"scrollbar_highlights": true,
				"show_context": true,
				"use_buffer2": true,
				"use_gitignore": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 41.0
			},
			"input":
			{
				"height": 68.0
			},
			"menu_visible": true,
			"output.Terminus":
			{
				"height": 45.0
			},
			"output.exec":
			{
				"height": 45.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "Packages/User/JavaC-finalgajeet.sublime-build",
			"replace":
			{
				"height": 78.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 271.0,
			"status_bar_visible": true,
			"template_settings":
			{
				"max_columns": 2
			}
		},
		"new_window_width": 1886.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"a",
						"append"
					],
					[
						"Cha",
						"Character"
					],
					[
						"ch",
						"charList"
					],
					[
						"get",
						"getValue"
					],
					[
						"Ch",
						"Character"
					],
					[
						"syncho",
						"synchronizedMap"
					],
					[
						"Chara",
						"Character"
					],
					[
						"right",
						"rightMostSetBitPos"
					],
					[
						"rig",
						"rightMostSetBitPos"
					],
					[
						"righ",
						"rightMostSetBitPos"
					],
					[
						"Com",
						"Comparator"
					],
					[
						"un",
						"unUsedInt"
					],
					[
						"up",
						"upper_bound"
					],
					[
						"re",
						"recursive_upper_bound"
					],
					[
						"con",
						"contains"
					],
					[
						"as",
						"astronauts"
					],
					[
						"curr",
						"currAstroPower"
					],
					[
						"cos",
						"cosmoNauts"
					],
					[
						"total",
						"totalBalance"
					],
					[
						"toa",
						"totalBalance"
					],
					[
						"tot",
						"totalBalance"
					],
					[
						"hash",
						"HashMap"
					],
					[
						"po",
						"possibleNum"
					],
					[
						"cu",
						"currValue"
					],
					[
						"cur",
						"currValue"
					],
					[
						"pa",
						"parseInt"
					],
					[
						"Array",
						"ArrayIndexOutOfBoundsException"
					],
					[
						"Arr",
						"ArrayIndexOutOfBoundsException"
					],
					[
						"nex",
						"nextInt"
					],
					[
						"p",
						"possibleValley"
					],
					[
						"pu",
						"public"
					],
					[
						"st",
						"strength"
					],
					[
						"ma",
						"matrix"
					],
					[
						"fi",
						"first"
					],
					[
						"num",
						"number"
					],
					[
						"n",
						"number"
					],
					[
						"nu",
						"number"
					],
					[
						"sta",
						"startC"
					],
					[
						"tota",
						"totalSeenB"
					],
					[
						"fina",
						"finalTotalB"
					],
					[
						"next",
						"nextCol"
					],
					[
						"stra",
						"startR"
					],
					[
						"Ne",
						"nextLine"
					],
					[
						"fir",
						"firstNo"
					],
					[
						"sy",
						"System"
					],
					[
						"min",
						"minOddMap"
					],
					[
						"co",
						"compare"
					],
					[
						"Co",
						"Comparator"
					],
					[
						"mun",
						"minRevenue"
					],
					[
						"sea",
						"seatsInPlanesDesc"
					],
					[
						"reme",
						"remainingSeats"
					],
					[
						"to",
						"totalPeople"
					],
					[
						"Has",
						"HashSet"
					],
					[
						"clear",
						"clearBitsInRange"
					],
					[
						"clea",
						"clearBitsInRange"
					],
					[
						"firs",
						"firstNum"
					],
					[
						"thir",
						"thirdNum"
					],
					[
						"sec",
						"secondNum"
					],
					[
						"Ar",
						"ArrayList"
					],
					[
						"Int",
						"Integer"
					],
					[
						"pl",
						"player"
					],
					[
						"da",
						"dangerous1"
					],
					[
						"dan",
						"dangerous1"
					],
					[
						"cha",
						"Character"
					],
					[
						"dra",
						"dragonComparator"
					],
					[
						"Dr",
						"Dragon"
					],
					[
						"dro",
						"dragonList"
					],
					[
						"son",
						"songParts"
					],
					[
						"Coll",
						"Collectors"
					],
					[
						"th",
						"throws"
					],
					[
						"Strnig",
						"StringBuffer"
					],
					[
						"ttoa",
						"totalMoney"
					],
					[
						"by",
						"buyerList"
					],
					[
						"ta",
						"totalTvSets"
					],
					[
						"ratio",
						"ratioNeeded"
					],
					[
						"in",
						"index"
					],
					[
						"ra",
						"ratios"
					],
					[
						"front",
						"frontStarCount"
					],
					[
						"gea",
						"GearRatio"
					],
					[
						"rear",
						"rearStars"
					],
					[
						"fron",
						"frontStars"
					],
					[
						"fro",
						"frontStars"
					],
					[
						"tea",
						"teamName"
					],
					[
						"tes",
						"teams"
					],
					[
						"count",
						"countOf0"
					],
					[
						"coun",
						"countOf0"
					],
					[
						"upp",
						"upperN"
					],
					[
						"lef",
						"leftN"
					],
					[
						"is",
						"isRightNeighbor"
					],
					[
						"ca",
						"calculateEdge"
					],
					[
						"toff",
						"toffee"
					],
					[
						"first",
						"firstToffee"
					],
					[
						"read",
						"Reader"
					],
					[
						"zer",
						"zeroL"
					],
					[
						"one",
						"oneL"
					],
					[
						"zero",
						"zeroL"
					],
					[
						"sho",
						"shortestIndex"
					],
					[
						"tall",
						"tallestIndex"
					],
					[
						"val",
						"valueOf"
					],
					[
						"IOException",
						"InstantiationException"
					],
					[
						"In",
						"Integer"
					],
					[
						"dire",
						"direction"
					],
					[
						"gri",
						"gridRows"
					],
					[
						"sub",
						"subsetsWithDup"
					],
					[
						"BigIn",
						"BigInteger"
					],
					[
						"Bi",
						"BigInteger"
					],
					[
						"second",
						"secondChar"
					],
					[
						"frist",
						"firstChar"
					],
					[
						"uniqNumber",
						"uniqNumberThreeNplusOne"
					],
					[
						"First",
						"FirstUniqueCharInString"
					],
					[
						"for",
						"fore"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/C/Users/hanisntsolo-boxx/AppData/Roaming/Sublime Text 3/Packages/User/cp.sublime-snippet",
					"settings":
					{
						"buffer_size": 12010,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					},
					"undo_stack":
					[
						[
							3,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AQAAAE8KAAAAAAAAUAoAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8KAAAAAAAATwoAAAAAAAAAAAAAAADwvw"
						],
						[
							10,
							1,
							"insert",
							{
								"characters": "\n//MyHe"
							},
							"BwAAAE4KAAAAAAAATwoAAAAAAAAAAAAATwoAAAAAAABQCgAAAAAAAAAAAABQCgAAAAAAAFEKAAAAAAAAAAAAAFEKAAAAAAAAUgoAAAAAAAAAAAAAUgoAAAAAAABTCgAAAAAAAAAAAABTCgAAAAAAAFQKAAAAAAAAAAAAAFQKAAAAAAAAVQoAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4KAAAAAAAATgoAAAAAAAAAAAAAAADwvw"
						],
						[
							11,
							2,
							"left_delete",
							null,
							"AgAAAFQKAAAAAAAAVAoAAAAAAAABAAAAZVMKAAAAAAAAUwoAAAAAAAABAAAASA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUKAAAAAAAAVQoAAAAAAAAAAAAAAADwvw"
						],
						[
							12,
							1,
							"insert",
							{
								"characters": " helper"
							},
							"BwAAAFMKAAAAAAAAVAoAAAAAAAAAAAAAVAoAAAAAAABVCgAAAAAAAAAAAABVCgAAAAAAAFYKAAAAAAAAAAAAAFYKAAAAAAAAVwoAAAAAAAAAAAAAVwoAAAAAAABYCgAAAAAAAAAAAABYCgAAAAAAAFkKAAAAAAAAAAAAAFkKAAAAAAAAWgoAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMKAAAAAAAAUwoAAAAAAAAAAAAAAADwvw"
						],
						[
							13,
							1,
							"insert",
							{
								"characters": " mehod"
							},
							"BgAAAFoKAAAAAAAAWwoAAAAAAAAAAAAAWwoAAAAAAABcCgAAAAAAAAAAAABcCgAAAAAAAF0KAAAAAAAAAAAAAF0KAAAAAAAAXgoAAAAAAAAAAAAAXgoAAAAAAABfCgAAAAAAAAAAAABfCgAAAAAAAGAKAAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoKAAAAAAAAWgoAAAAAAAAAAAAAAADwvw"
						],
						[
							14,
							3,
							"left_delete",
							null,
							"AwAAAF8KAAAAAAAAXwoAAAAAAAABAAAAZF4KAAAAAAAAXgoAAAAAAAABAAAAb10KAAAAAAAAXQoAAAAAAAABAAAAaA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAKAAAAAAAAYAoAAAAAAAAAAAAAAADwvw"
						],
						[
							15,
							1,
							"insert",
							{
								"characters": "thods"
							},
							"BQAAAF0KAAAAAAAAXgoAAAAAAAAAAAAAXgoAAAAAAABfCgAAAAAAAAAAAABfCgAAAAAAAGAKAAAAAAAAAAAAAGAKAAAAAAAAYQoAAAAAAAAAAAAAYQoAAAAAAABiCgAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0KAAAAAAAAXQoAAAAAAAAAAAAAAADwvw"
						],
						[
							16,
							1,
							"insert",
							{
								"characters": " :"
							},
							"AgAAAGIKAAAAAAAAYwoAAAAAAAAAAAAAYwoAAAAAAABkCgAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIKAAAAAAAAYgoAAAAAAAAAAAAAAADwvw"
						],
						[
							17,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AQAAAGQKAAAAAAAAZQoAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQKAAAAAAAAZAoAAAAAAAAAAAAAAADwvw"
						],
						[
							18,
							1,
							"paste",
							null,
							"AQAAAGUKAAAAAAAAsw0AAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUKAAAAAAAAZQoAAAAAAAAAAAAAAADwvw"
						],
						[
							21,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AQAAAGQKAAAAAAAAZQoAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQKAAAAAAAAZAoAAAAAAAAAAAAAAADwvw"
						],
						[
							24,
							22,
							"swap_line_up",
							null,
							"LAAAAE8NAAAAAAAATw0AAAAAAABmAAAAICAgIHN0YXRpYyB2b2lkIHByaW50KEFycmF5TGlzdCBsaXN0KSB7CiAgICAgICAgbGlzdC50b0FycmF5KCk7CiAgICAgICAgb3V0LnByaW50KGxpc3QgKyAiXG4iKTsKICAgIH0KSQ0AAAAAAACvDQAAAAAAAAAAAABJDQAAAAAAAEkNAAAAAAAAZgAAACAgICBzdGF0aWMgdm9pZCBwcmludChBcnJheUxpc3QgbGlzdCkgewogICAgICAgIGxpc3QudG9BcnJheSgpOwogICAgICAgIG91dC5wcmludChsaXN0ICsgIlxuIik7CiAgICB9Cj8NAAAAAAAApQ0AAAAAAAAAAAAAPw0AAAAAAAA/DQAAAAAAAGYAAAAgICAgc3RhdGljIHZvaWQgcHJpbnQoQXJyYXlMaXN0IGxpc3QpIHsKICAgICAgICBsaXN0LnRvQXJyYXkoKTsKICAgICAgICBvdXQucHJpbnQobGlzdCArICJcbiIpOwogICAgfQoaDQAAAAAAAIANAAAAAAAAAAAAABoNAAAAAAAAGg0AAAAAAABmAAAAICAgIHN0YXRpYyB2b2lkIHByaW50KEFycmF5TGlzdCBsaXN0KSB7CiAgICAgICAgbGlzdC50b0FycmF5KCk7CiAgICAgICAgb3V0LnByaW50KGxpc3QgKyAiXG4iKTsKICAgIH0K5QwAAAAAAABLDQAAAAAAAAAAAADlDAAAAAAAAOUMAAAAAAAAZgAAACAgICBzdGF0aWMgdm9pZCBwcmludChBcnJheUxpc3QgbGlzdCkgewogICAgICAgIGxpc3QudG9BcnJheSgpOwogICAgICAgIG91dC5wcmludChsaXN0ICsgIlxuIik7CiAgICB9CtsMAAAAAAAAQQ0AAAAAAAAAAAAA2wwAAAAAAADbDAAAAAAAAGYAAAAgICAgc3RhdGljIHZvaWQgcHJpbnQoQXJyYXlMaXN0IGxpc3QpIHsKICAgICAgICBsaXN0LnRvQXJyYXkoKTsKICAgICAgICBvdXQucHJpbnQobGlzdCArICJcbiIpOwogICAgfQq6DAAAAAAAACANAAAAAAAAAAAAALoMAAAAAAAAugwAAAAAAABmAAAAICAgIHN0YXRpYyB2b2lkIHByaW50KEFycmF5TGlzdCBsaXN0KSB7CiAgICAgICAgbGlzdC50b0FycmF5KCk7CiAgICAgICAgb3V0LnByaW50KGxpc3QgKyAiXG4iKTsKICAgIH0KrAwAAAAAAAASDQAAAAAAAAAAAACsDAAAAAAAAKwMAAAAAAAAZgAAACAgICBzdGF0aWMgdm9pZCBwcmludChBcnJheUxpc3QgbGlzdCkgewogICAgICAgIGxpc3QudG9BcnJheSgpOwogICAgICAgIG91dC5wcmludChsaXN0ICsgIlxuIik7CiAgICB9CpoMAAAAAAAAAA0AAAAAAAAAAAAAmgwAAAAAAACaDAAAAAAAAGYAAAAgICAgc3RhdGljIHZvaWQgcHJpbnQoQXJyYXlMaXN0IGxpc3QpIHsKICAgICAgICBsaXN0LnRvQXJyYXkoKTsKICAgICAgICBvdXQucHJpbnQobGlzdCArICJcbiIpOwogICAgfQp3DAAAAAAAAN0MAAAAAAAAAAAAAHcMAAAAAAAAdwwAAAAAAABmAAAAICAgIHN0YXRpYyB2b2lkIHByaW50KEFycmF5TGlzdCBsaXN0KSB7CiAgICAgICAgbGlzdC50b0FycmF5KCk7CiAgICAgICAgb3V0LnByaW50KGxpc3QgKyAiXG4iKTsKICAgIH0KQwwAAAAAAACpDAAAAAAAAAAAAABDDAAAAAAAAEMMAAAAAAAAZgAAACAgICBzdGF0aWMgdm9pZCBwcmludChBcnJheUxpc3QgbGlzdCkgewogICAgICAgIGxpc3QudG9BcnJheSgpOwogICAgICAgIG91dC5wcmludChsaXN0ICsgIlxuIik7CiAgICB9CiEMAAAAAAAAhwwAAAAAAAAAAAAAIQwAAAAAAAAhDAAAAAAAAGYAAAAgICAgc3RhdGljIHZvaWQgcHJpbnQoQXJyYXlMaXN0IGxpc3QpIHsKICAgICAgICBsaXN0LnRvQXJyYXkoKTsKICAgICAgICBvdXQucHJpbnQobGlzdCArICJcbiIpOwogICAgfQr/CwAAAAAAAGUMAAAAAAAAAAAAAP8LAAAAAAAA/wsAAAAAAABmAAAAICAgIHN0YXRpYyB2b2lkIHByaW50KEFycmF5TGlzdCBsaXN0KSB7CiAgICAgICAgbGlzdC50b0FycmF5KCk7CiAgICAgICAgb3V0LnByaW50KGxpc3QgKyAiXG4iKTsKICAgIH0KzQsAAAAAAAAzDAAAAAAAAAAAAADNCwAAAAAAAM0LAAAAAAAAZgAAACAgICBzdGF0aWMgdm9pZCBwcmludChBcnJheUxpc3QgbGlzdCkgewogICAgICAgIGxpc3QudG9BcnJheSgpOwogICAgICAgIG91dC5wcmludChsaXN0ICsgIlxuIik7CiAgICB9CpQLAAAAAAAA+gsAAAAAAAAAAAAAlAsAAAAAAACUCwAAAAAAAGYAAAAgICAgc3RhdGljIHZvaWQgcHJpbnQoQXJyYXlMaXN0IGxpc3QpIHsKICAgICAgICBsaXN0LnRvQXJyYXkoKTsKICAgICAgICBvdXQucHJpbnQobGlzdCArICJcbiIpOwogICAgfQpTCwAAAAAAALkLAAAAAAAAAAAAAFMLAAAAAAAAUwsAAAAAAABmAAAAICAgIHN0YXRpYyB2b2lkIHByaW50KEFycmF5TGlzdCBsaXN0KSB7CiAgICAgICAgbGlzdC50b0FycmF5KCk7CiAgICAgICAgb3V0LnByaW50KGxpc3QgKyAiXG4iKTsKICAgIH0KDgsAAAAAAAB0CwAAAAAAAAAAAAAOCwAAAAAAAA4LAAAAAAAAZgAAACAgICBzdGF0aWMgdm9pZCBwcmludChBcnJheUxpc3QgbGlzdCkgewogICAgICAgIGxpc3QudG9BcnJheSgpOwogICAgICAgIG91dC5wcmludChsaXN0ICsgIlxuIik7CiAgICB9CgQLAAAAAAAAagsAAAAAAAAAAAAABAsAAAAAAAAECwAAAAAAAGYAAAAgICAgc3RhdGljIHZvaWQgcHJpbnQoQXJyYXlMaXN0IGxpc3QpIHsKICAgICAgICBsaXN0LnRvQXJyYXkoKTsKICAgICAgICBvdXQucHJpbnQobGlzdCArICJcbiIpOwogICAgfQroCgAAAAAAAE4LAAAAAAAAAAAAAOgKAAAAAAAA6AoAAAAAAABmAAAAICAgIHN0YXRpYyB2b2lkIHByaW50KEFycmF5TGlzdCBsaXN0KSB7CiAgICAgICAgbGlzdC50b0FycmF5KCk7CiAgICAgICAgb3V0LnByaW50KGxpc3QgKyAiXG4iKTsKICAgIH0KwwoAAAAAAAApCwAAAAAAAAAAAADDCgAAAAAAAMMKAAAAAAAAZgAAACAgICBzdGF0aWMgdm9pZCBwcmludChBcnJheUxpc3QgbGlzdCkgewogICAgICAgIGxpc3QudG9BcnJheSgpOwogICAgICAgIG91dC5wcmludChsaXN0ICsgIlxuIik7CiAgICB9CqMKAAAAAAAACQsAAAAAAAAAAAAAowoAAAAAAACjCgAAAAAAAGYAAAAgICAgc3RhdGljIHZvaWQgcHJpbnQoQXJyYXlMaXN0IGxpc3QpIHsKICAgICAgICBsaXN0LnRvQXJyYXkoKTsKICAgICAgICBvdXQucHJpbnQobGlzdCArICJcbiIpOwogICAgfQqHCgAAAAAAAO0KAAAAAAAAAAAAAIcKAAAAAAAAhwoAAAAAAABmAAAAICAgIHN0YXRpYyB2b2lkIHByaW50KEFycmF5TGlzdCBsaXN0KSB7CiAgICAgICAgbGlzdC50b0FycmF5KCk7CiAgICAgICAgb3V0LnByaW50KGxpc3QgKyAiXG4iKTsKICAgIH0KZgoAAAAAAADMCgAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQNAAAAAAAAUw0AAAAAAAAAAAAAAADwvw"
						],
						[
							28,
							1,
							"left_delete",
							null,
							"AQAAALUNAAAAAAAAtQ0AAAAAAAABAAAACg",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYNAAAAAAAAtg0AAAAAAAAAAAAAAADwvw"
						],
						[
							31,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAEoNAAAAAAAASw0AAAAAAAAAAAAASw0AAAAAAABTDQAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoNAAAAAAAASg0AAAAAAAAAAAAAAADwvw"
						],
						[
							32,
							1,
							"paste",
							null,
							"AQAAAFMNAAAAAAAAMg4AAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMNAAAAAAAAUw0AAAAAAAAAAAAAAADwvw"
						],
						[
							3,
							1,
							"reindent",
							null,
							"AQAAAOcEAAAAAAAA6wQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcEAAAAAAAA5wQAAAAAAAAAAAAAAADwvw"
						],
						[
							4,
							1,
							"insert",
							{
								"characters": "//#"
							},
							"AwAAAOsEAAAAAAAA7AQAAAAAAAAAAAAA7AQAAAAAAADtBAAAAAAAAAAAAADtBAAAAAAAAO4EAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsEAAAAAAAA6wQAAAAAAAAAAAAAAADwvw"
						],
						[
							5,
							1,
							"insert",
							{
								"characters": "String"
							},
							"BgAAAO4EAAAAAAAA7wQAAAAAAAAAAAAA7wQAAAAAAADwBAAAAAAAAAAAAADwBAAAAAAAAPEEAAAAAAAAAAAAAPEEAAAAAAAA8gQAAAAAAAAAAAAA8gQAAAAAAADzBAAAAAAAAAAAAADzBAAAAAAAAPQEAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO4EAAAAAAAA7gQAAAAAAAAAAAAAAADwvw"
						],
						[
							6,
							1,
							"insert",
							{
								"characters": " Manipul"
							},
							"CAAAAPQEAAAAAAAA9QQAAAAAAAAAAAAA9QQAAAAAAAD2BAAAAAAAAAAAAAD2BAAAAAAAAPcEAAAAAAAAAAAAAPcEAAAAAAAA+AQAAAAAAAAAAAAA+AQAAAAAAAD5BAAAAAAAAAAAAAD5BAAAAAAAAPoEAAAAAAAAAAAAAPoEAAAAAAAA+wQAAAAAAAAAAAAA+wQAAAAAAAD8BAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQEAAAAAAAA9AQAAAAAAAAAAAAAAADwvw"
						],
						[
							7,
							1,
							"insert",
							{
								"characters": "ations:"
							},
							"BwAAAPwEAAAAAAAA/QQAAAAAAAAAAAAA/QQAAAAAAAD+BAAAAAAAAAAAAAD+BAAAAAAAAP8EAAAAAAAAAAAAAP8EAAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAABBQAAAAAAAAAAAAABBQAAAAAAAAIFAAAAAAAAAAAAAAIFAAAAAAAAAwUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwEAAAAAAAA/AQAAAAAAAAAAAAAAADwvw"
						],
						[
							8,
							1,
							"insert",
							{
								"characters": "\n/"
							},
							"AwAAAAMFAAAAAAAABAUAAAAAAAAAAAAABAUAAAAAAAAIBQAAAAAAAAAAAAAIBQAAAAAAAAkFAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMFAAAAAAAAAwUAAAAAAAAAAAAAAADwvw"
						],
						[
							9,
							1,
							"insert",
							{
								"characters": "/"
							},
							"AQAAAAkFAAAAAAAACgUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkFAAAAAAAACQUAAAAAAAAAAAAAAADwvw"
						],
						[
							10,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAAoFAAAAAAAACwUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoFAAAAAAAACgUAAAAAAAAAAAAAAADwvw"
						],
						[
							11,
							3,
							"left_delete",
							null,
							"AwAAAAoFAAAAAAAACgUAAAAAAAABAAAAIAkFAAAAAAAACQUAAAAAAAABAAAALwgFAAAAAAAACAUAAAAAAAABAAAALw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsFAAAAAAAACwUAAAAAAAAAAAAAAADwvw"
						],
						[
							12,
							1,
							"insert",
							{
								"characters": "\t:"
							},
							"AgAAAAgFAAAAAAAADAUAAAAAAAAAAAAADAUAAAAAAAANBQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAgFAAAAAAAACAUAAAAAAAAAAAAAAADwvw"
						],
						[
							13,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAA0FAAAAAAAADgUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0FAAAAAAAADQUAAAAAAAAAAAAAAADwvw"
						],
						[
							14,
							2,
							"left_delete",
							null,
							"AgAAAA0FAAAAAAAADQUAAAAAAAABAAAAIAwFAAAAAAAADAUAAAAAAAABAAAAOg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4FAAAAAAAADgUAAAAAAAAAAAAAAADwvw"
						],
						[
							15,
							1,
							"insert",
							{
								"characters": "1:"
							},
							"AgAAAAwFAAAAAAAADQUAAAAAAAAAAAAADQUAAAAAAAAOBQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwFAAAAAAAADAUAAAAAAAAAAAAAAADwvw"
						],
						[
							16,
							1,
							"insert",
							{
								"characters": " Use"
							},
							"BAAAAA4FAAAAAAAADwUAAAAAAAAAAAAADwUAAAAAAAAQBQAAAAAAAAAAAAAQBQAAAAAAABEFAAAAAAAAAAAAABEFAAAAAAAAEgUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4FAAAAAAAADgUAAAAAAAAAAAAAAADwvw"
						],
						[
							17,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAABIFAAAAAAAAEwUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABIFAAAAAAAAEgUAAAAAAAAAAAAAAADwvw"
						],
						[
							18,
							1,
							"insert",
							{
								"characters": "deleteC"
							},
							"BwAAABMFAAAAAAAAFAUAAAAAAAAAAAAAFAUAAAAAAAAVBQAAAAAAAAAAAAAVBQAAAAAAABYFAAAAAAAAAAAAABYFAAAAAAAAFwUAAAAAAAAAAAAAFwUAAAAAAAAYBQAAAAAAAAAAAAAYBQAAAAAAABkFAAAAAAAAAAAAABkFAAAAAAAAGgUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMFAAAAAAAAEwUAAAAAAAAAAAAAAADwvw"
						],
						[
							19,
							1,
							"insert",
							{
								"characters": "hatAt"
							},
							"BQAAABoFAAAAAAAAGwUAAAAAAAAAAAAAGwUAAAAAAAAcBQAAAAAAAAAAAAAcBQAAAAAAAB0FAAAAAAAAAAAAAB0FAAAAAAAAHgUAAAAAAAAAAAAAHgUAAAAAAAAfBQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoFAAAAAAAAGgUAAAAAAAAAAAAAAADwvw"
						],
						[
							20,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAB8FAAAAAAAAIAUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8FAAAAAAAAHwUAAAAAAAAAAAAAAADwvw"
						],
						[
							21,
							1,
							"left_delete",
							null,
							"AQAAAB8FAAAAAAAAHwUAAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACAFAAAAAAAAIAUAAAAAAAAAAAAAAADwvw"
						],
						[
							22,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAB8FAAAAAAAAIQUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8FAAAAAAAAHwUAAAAAAAAAAAAAAADwvw"
						],
						[
							24,
							1,
							"insert",
							{
								"characters": " on"
							},
							"AwAAACEFAAAAAAAAIgUAAAAAAAAAAAAAIgUAAAAAAAAjBQAAAAAAAAAAAAAjBQAAAAAAACQFAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEFAAAAAAAAIQUAAAAAAAAAAAAAAADwvw"
						],
						[
							25,
							1,
							"insert",
							{
								"characters": " sb"
							},
							"AwAAACQFAAAAAAAAJQUAAAAAAAAAAAAAJQUAAAAAAAAmBQAAAAAAAAAAAAAmBQAAAAAAACcFAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQFAAAAAAAAJAUAAAAAAAAAAAAAAADwvw"
						],
						[
							26,
							1,
							"left_delete",
							null,
							"AQAAACYFAAAAAAAAJgUAAAAAAAABAAAAYg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcFAAAAAAAAJwUAAAAAAAAAAAAAAADwvw"
						],
						[
							27,
							1,
							"insert",
							{
								"characters": "string"
							},
							"BgAAACYFAAAAAAAAJwUAAAAAAAAAAAAAJwUAAAAAAAAoBQAAAAAAAAAAAAAoBQAAAAAAACkFAAAAAAAAAAAAACkFAAAAAAAAKgUAAAAAAAAAAAAAKgUAAAAAAAArBQAAAAAAAAAAAAArBQAAAAAAACwFAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYFAAAAAAAAJgUAAAAAAAAAAAAAAADwvw"
						],
						[
							28,
							6,
							"left_delete",
							null,
							"BgAAACsFAAAAAAAAKwUAAAAAAAABAAAAZyoFAAAAAAAAKgUAAAAAAAABAAAAbikFAAAAAAAAKQUAAAAAAAABAAAAaSgFAAAAAAAAKAUAAAAAAAABAAAAcicFAAAAAAAAJwUAAAAAAAABAAAAdCYFAAAAAAAAJgUAAAAAAAABAAAAcw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwFAAAAAAAALAUAAAAAAAAAAAAAAADwvw"
						],
						[
							29,
							1,
							"insert",
							{
								"characters": "tringBil"
							},
							"CAAAACYFAAAAAAAAJwUAAAAAAAAAAAAAJwUAAAAAAAAoBQAAAAAAAAAAAAAoBQAAAAAAACkFAAAAAAAAAAAAACkFAAAAAAAAKgUAAAAAAAAAAAAAKgUAAAAAAAArBQAAAAAAAAAAAAArBQAAAAAAACwFAAAAAAAAAAAAACwFAAAAAAAALQUAAAAAAAAAAAAALQUAAAAAAAAuBQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYFAAAAAAAAJgUAAAAAAAAAAAAAAADwvw"
						],
						[
							30,
							2,
							"left_delete",
							null,
							"AgAAAC0FAAAAAAAALQUAAAAAAAABAAAAbCwFAAAAAAAALAUAAAAAAAABAAAAaQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4FAAAAAAAALgUAAAAAAAAAAAAAAADwvw"
						],
						[
							31,
							1,
							"insert",
							{
								"characters": "uilder"
							},
							"BgAAACwFAAAAAAAALQUAAAAAAAAAAAAALQUAAAAAAAAuBQAAAAAAAAAAAAAuBQAAAAAAAC8FAAAAAAAAAAAAAC8FAAAAAAAAMAUAAAAAAAAAAAAAMAUAAAAAAAAxBQAAAAAAAAAAAAAxBQAAAAAAADIFAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwFAAAAAAAALAUAAAAAAAAAAAAAAADwvw"
						],
						[
							32,
							1,
							"insert",
							{
								"characters": " to"
							},
							"AwAAADIFAAAAAAAAMwUAAAAAAAAAAAAAMwUAAAAAAAA0BQAAAAAAAAAAAAA0BQAAAAAAADUFAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIFAAAAAAAAMgUAAAAAAAAAAAAAAADwvw"
						],
						[
							33,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAADUFAAAAAAAANgUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUFAAAAAAAANQUAAAAAAAAAAAAAAADwvw"
						],
						[
							34,
							3,
							"left_delete",
							null,
							"AwAAADUFAAAAAAAANQUAAAAAAAABAAAAIDQFAAAAAAAANAUAAAAAAAABAAAAbzMFAAAAAAAAMwUAAAAAAAABAAAAdA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYFAAAAAAAANgUAAAAAAAAAAAAAAADwvw"
						],
						[
							35,
							1,
							"insert",
							{
								"characters": "with"
							},
							"BAAAADMFAAAAAAAANAUAAAAAAAAAAAAANAUAAAAAAAA1BQAAAAAAAAAAAAA1BQAAAAAAADYFAAAAAAAAAAAAADYFAAAAAAAANwUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMFAAAAAAAAMwUAAAAAAAAAAAAAAADwvw"
						],
						[
							36,
							1,
							"insert",
							{
								"characters": " loc"
							},
							"BAAAADcFAAAAAAAAOAUAAAAAAAAAAAAAOAUAAAAAAAA5BQAAAAAAAAAAAAA5BQAAAAAAADoFAAAAAAAAAAAAADoFAAAAAAAAOwUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcFAAAAAAAANwUAAAAAAAAAAAAAAADwvw"
						],
						[
							37,
							1,
							"insert",
							{
								"characters": " 2"
							},
							"AgAAADsFAAAAAAAAPAUAAAAAAAAAAAAAPAUAAAAAAAA9BQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsFAAAAAAAAOwUAAAAAAAAAAAAAAADwvw"
						],
						[
							38,
							1,
							"insert",
							{
								"characters": " to"
							},
							"AwAAAD0FAAAAAAAAPgUAAAAAAAAAAAAAPgUAAAAAAAA/BQAAAAAAAAAAAAA/BQAAAAAAAEAFAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0FAAAAAAAAPQUAAAAAAAAAAAAAAADwvw"
						],
						[
							39,
							1,
							"insert",
							{
								"characters": " remove"
							},
							"BwAAAEAFAAAAAAAAQQUAAAAAAAAAAAAAQQUAAAAAAABCBQAAAAAAAAAAAABCBQAAAAAAAEMFAAAAAAAAAAAAAEMFAAAAAAAARAUAAAAAAAAAAAAARAUAAAAAAABFBQAAAAAAAAAAAABFBQAAAAAAAEYFAAAAAAAAAAAAAEYFAAAAAAAARwUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAFAAAAAAAAQAUAAAAAAAAAAAAAAADwvw"
						],
						[
							40,
							1,
							"insert",
							{
								"characters": " newL"
							},
							"BQAAAEcFAAAAAAAASAUAAAAAAAAAAAAASAUAAAAAAABJBQAAAAAAAAAAAABJBQAAAAAAAEoFAAAAAAAAAAAAAEoFAAAAAAAASwUAAAAAAAAAAAAASwUAAAAAAABMBQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcFAAAAAAAARwUAAAAAAAAAAAAAAADwvw"
						],
						[
							41,
							1,
							"insert",
							{
								"characters": "ine"
							},
							"AwAAAEwFAAAAAAAATQUAAAAAAAAAAAAATQUAAAAAAABOBQAAAAAAAAAAAABOBQAAAAAAAE8FAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwFAAAAAAAATAUAAAAAAAAAAAAAAADwvw"
						],
						[
							42,
							1,
							"insert",
							{
								"characters": " extra"
							},
							"BgAAAE8FAAAAAAAAUAUAAAAAAAAAAAAAUAUAAAAAAABRBQAAAAAAAAAAAABRBQAAAAAAAFIFAAAAAAAAAAAAAFIFAAAAAAAAUwUAAAAAAAAAAAAAUwUAAAAAAABUBQAAAAAAAAAAAABUBQAAAAAAAFUFAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8FAAAAAAAATwUAAAAAAAAAAAAAAADwvw"
						],
						[
							43,
							1,
							"insert",
							{
								"characters": " char"
							},
							"BQAAAFUFAAAAAAAAVgUAAAAAAAAAAAAAVgUAAAAAAABXBQAAAAAAAAAAAABXBQAAAAAAAFgFAAAAAAAAAAAAAFgFAAAAAAAAWQUAAAAAAAAAAAAAWQUAAAAAAABaBQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUFAAAAAAAAVQUAAAAAAAAAAAAAAADwvw"
						],
						[
							44,
							1,
							"insert",
							{
								"characters": " while"
							},
							"BgAAAFoFAAAAAAAAWwUAAAAAAAAAAAAAWwUAAAAAAABcBQAAAAAAAAAAAABcBQAAAAAAAF0FAAAAAAAAAAAAAF0FAAAAAAAAXgUAAAAAAAAAAAAAXgUAAAAAAABfBQAAAAAAAAAAAABfBQAAAAAAAGAFAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoFAAAAAAAAWgUAAAAAAAAAAAAAAADwvw"
						],
						[
							45,
							1,
							"insert",
							{
								"characters": " printing."
							},
							"CgAAAGAFAAAAAAAAYQUAAAAAAAAAAAAAYQUAAAAAAABiBQAAAAAAAAAAAABiBQAAAAAAAGMFAAAAAAAAAAAAAGMFAAAAAAAAZAUAAAAAAAAAAAAAZAUAAAAAAABlBQAAAAAAAAAAAABlBQAAAAAAAGYFAAAAAAAAAAAAAGYFAAAAAAAAZwUAAAAAAAAAAAAAZwUAAAAAAABoBQAAAAAAAAAAAABoBQAAAAAAAGkFAAAAAAAAAAAAAGkFAAAAAAAAagUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAFAAAAAAAAYAUAAAAAAAAAAAAAAADwvw"
						],
						[
							46,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAGoFAAAAAAAAawUAAAAAAAAAAAAAawUAAAAAAABzBQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoFAAAAAAAAagUAAAAAAAAAAAAAAADwvw"
						],
						[
							49,
							1,
							"insert",
							{
								"characters": " game"
							},
							"BgAAAGoFAAAAAAAAawUAAAAAAAAAAAAAbAUAAAAAAABsBQAAAAAAAAgAAAAgICAgICAgIGsFAAAAAAAAbAUAAAAAAAAAAAAAbAUAAAAAAABtBQAAAAAAAAAAAABtBQAAAAAAAG4FAAAAAAAAAAAAAG4FAAAAAAAAbwUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoFAAAAAAAAagUAAAAAAAAAAAAAAADwvw"
						],
						[
							50,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAG8FAAAAAAAAcAUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8FAAAAAAAAbwUAAAAAAAAAAAAAAADwvw"
						],
						[
							51,
							3,
							"left_delete",
							null,
							"AwAAAG8FAAAAAAAAbwUAAAAAAAABAAAAIG4FAAAAAAAAbgUAAAAAAAABAAAAZW0FAAAAAAAAbQUAAAAAAAABAAAAbQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAFAAAAAAAAcAUAAAAAAAAAAAAAAADwvw"
						],
						[
							52,
							1,
							"insert",
							{
								"characters": "ve"
							},
							"AgAAAG0FAAAAAAAAbgUAAAAAAAAAAAAAbgUAAAAAAABvBQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0FAAAAAAAAbQUAAAAAAAAAAAAAAADwvw"
						],
						[
							53,
							1,
							"insert",
							{
								"characters": " me"
							},
							"AwAAAG8FAAAAAAAAcAUAAAAAAAAAAAAAcAUAAAAAAABxBQAAAAAAAAAAAABxBQAAAAAAAHIFAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8FAAAAAAAAbwUAAAAAAAAAAAAAAADwvw"
						],
						[
							54,
							1,
							"insert",
							{
								"characters": " a"
							},
							"AgAAAHIFAAAAAAAAcwUAAAAAAAAAAAAAcwUAAAAAAAB0BQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIFAAAAAAAAcgUAAAAAAAAAAAAAAADwvw"
						],
						[
							55,
							1,
							"insert",
							{
								"characters": " PIA"
							},
							"BAAAAHQFAAAAAAAAdQUAAAAAAAAAAAAAdQUAAAAAAAB2BQAAAAAAAAAAAAB2BQAAAAAAAHcFAAAAAAAAAAAAAHcFAAAAAAAAeAUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQFAAAAAAAAdAUAAAAAAAAAAAAAAADwvw"
						],
						[
							57,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"AgAAAHUFAAAAAAAAdQUAAAAAAAADAAAAUElBdQUAAAAAAAB6BQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgFAAAAAAAAdQUAAAAAAAAAAAAAAADwvw"
						],
						[
							59,
							1,
							"insert",
							{
								"characters": "."
							},
							"AQAAAHoFAAAAAAAAewUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHoFAAAAAAAAegUAAAAAAAAAAAAAAADwvw"
						],
						[
							61,
							1,
							"reindent",
							null,
							"AQAAAHwFAAAAAAAAhAUAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwFAAAAAAAAfAUAAAAAAAAAAAAAAOCEQA"
						],
						[
							62,
							1,
							"insert",
							{
								"characters": "2."
							},
							"AgAAAIQFAAAAAAAAhQUAAAAAAAAAAAAAhQUAAAAAAACGBQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIQFAAAAAAAAhAUAAAAAAAAAAAAAAADwvw"
						],
						[
							63,
							2,
							"left_delete",
							null,
							"AgAAAIUFAAAAAAAAhQUAAAAAAAABAAAALoQFAAAAAAAAhAUAAAAAAAABAAAAMg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYFAAAAAAAAhgUAAAAAAAAAAAAAAADwvw"
						]
					]
				},
				{
					"contents": "import java.io.DataInputStream;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\n//Static imports for less code\nimport static java.math.BigInteger.valueOf;\nimport static java.lang.Math.max;\nimport static java.lang.Math.min;\nimport static java.lang.Math.abs;\nimport static java.lang.System.out;\n//Utilities\nimport java.util.Scanner;\nimport java.util.Collections;\nimport java.util.ArrayList;\nimport java.util.Random;\nimport java.util.HashMap;\nimport java.util.AbstractMap;\nimport java.util.Date;\nimport java.util.Comparator;\nimport java.util.Collections;\nimport java.util.Arrays;\nimport java.util.Queue;\nimport java.util.PriorityQueue;\nimport java.util.TreeMap;\nimport java.util.NavigableMap;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.HashSet;\nimport java.math.BigInteger;\nimport java.util.Random;\nimport java.util.StringTokenizer;\n\n\n\npublic class Leena {\n\n    /*                                                     \"Om\"\n                                                    \"\"thou art that\"\"\n    */\n    \n    /* COMMIT TO MEMORY WHILE USING JAVA IN COMPETETIVE PROGRAMMING */\n\n    //# Always use Collections.sort()// merge sort over any other sorting algorithm.\n    //# It will help avoid TLE.\n\n    //# Notes: to keep in mind while coding - the program must run in max 1 sec.\n    // and 1 sec is equivalent to 10^8 instruction at most.\n    //## make sure to utilize fastI/O - Readers implementation and PrintWriters implementation\n    // is already present;\n\n    //## Always try to use BigInteger class while writing contests.\n\n    //## While comparing wrapper class objects please use equals method \n    // or write your own implementation of the equals method.\n    \n    //## When writing comparator and using in sorting the values make sure you do not\n    // break the general contract of writing a comparator.\n    \n    //## while comparing characters make sure to enclose in single quotes.\n\n    public static void main(String[] args) throws IOException {\n        // long test = fs.nextLong();\n        // while(test > 0) {\n            //Write code here;\n            solve();\n            // test--;\n        // }\n\n        out.flush(); // to flush the output\n    }\n    public static void solve() {\n        // code goes here//\n        /*\n         *\n          0\n        0 1 0\n      0 1 2 1 0\n    0 1 2 3 2 1 0\n  0 1 2 3 4 3 2 1 0\n0 1 2 3 4 5 4 3 2 1 0\n  0 1 2 3 4 3 2 1 0\n    0 1 2 3 2 1 0\n      0 1 2 1 0\n        0 1 0\n          0\n\n         */\n    \tint n = fs.nextInt();\n    \tString[][] grid = new String[2 * n + 1][2 * n + 1];\n    \tfor(int i = 0; i <= n * 2; i++) {\n    \t\tfor(int j = 0 ; j <= n * 2; j++) {\n    \t\t\tgrid[i][j] = \" \";\n    \t\t\tif(j == n && i <= n) {\n    \t\t\t\tgrid[i][j] = String.valueOf(i);\n    \t\t\t} else if(j == n && i > n) {\n    \t\t\t\tgrid[i][j] = String.valueOf((2 * n) - i);\n    \t\t\t}\n    \t\t}\n    \t}\n    \t// out.print(\"Debug\" + grid[4][n]  + \"\\n\");\n    \tint k = 0;\n    \tfor(int i = 0; i <= n * 2; i++) {\n    \t\tfor(int j = Integer.valueOf(grid[i][n]); j >= 0 ; j--) {\n    \t\t\t// k = n + j + 1;\n    \t\t\tgrid[i][n - j] = String.valueOf(Integer.valueOf(grid[i][n]) - j);\n    \t\t\tgrid[i][n + j] = String.valueOf(Integer.valueOf(grid[i][n]) - j);\n    \t\t}\n    \t\tfor(k = n + Integer.valueOf(grid[i][n]) + 1 ;k< 2 * n + 1; k++) {\n    \t\t\tgrid[i][k] = null;\n    \t\t}\n    \t}\n    \t//Print\n    \tStringBuilder fb = new StringBuilder();\n    \tfor(int i = 0; i <= n * 2; i++) {\n    \t\tStringBuilder sb = new StringBuilder();\n    \t\tfor(int j = 0 ; j <= n * 2; j++) {\n    \t\t\tif(grid[i][j] == null) {\n    \t\t\t\tsb.append(\"\\n\");\n    \t\t\t\tbreak;\n    \t\t\t}\n    \t\t\telse if(j < n) {\n    \t\t\t\tsb.append(grid[i][j] + \" \");\n    \t\t\t}\n    \t\t\telse if(j >= n && grid[i][j] != \"0\") {\n    \t\t\t\tsb.append(grid[i][j] + \" \");\n    \t\t\t}\n    \t\t\telse if(j >= n && grid[i][j] == \"0\") {\n    \t\t\t\tsb.append(grid[i][j] + \"\\n\");\n    \t\t\t}\n    \t\t\tif(j == 2 * n) {\n    \t\t\t\tsb.append(\"\\n\");\n    \t\t\t}\n    \t\t}\n    \t\tsb.deleteCharAt(sb.length() - 2);\n    \t\tfb.append(sb);\n    \t}\n    \tout.print(fb);\n    }\n\n\nstatic PrintWriter out = new PrintWriter(System.out);\nstatic Reader rd = new Reader();\nstatic FastScanner fs = new FastScanner();\nstatic final Random random=new Random();\nstatic final int mod=1_000_000_007;\nstatic long[][] vals;\n\n//My helper methods :\n\n    static void print(ArrayList list) {\n        list.toArray();\n        out.print(list + \"\\n\");\n    }\n    static void subsets(int n) {\n        // code goes here//\n        int[] set = new int[n];\n        for(int i = 0; i < n; i++) {\n            set[i] = i + 1;\n        }\n        ArrayList<ArrayList<Integer>> listFinal = new ArrayList<>();\n        for(int mask = 0; mask <= Math.pow(2 , n) - 1; mask++) {\n            ArrayList<Integer> list = new ArrayList<>();\n            for(int j = 0; j < set.length; j++) {\n                //process element\n                int ele = set[j];\n                if((mask & (1 << n - 1 - j)) > 0) {\n                    list.add(ele);\n                }\n            }\n            listFinal.add(list);\n        }\n        Collections.sort(listFinal, new Comparator<ArrayList>(){\n            @Override\n            public int compare(ArrayList list1, ArrayList list2) {\n                return list1.size() - list2.size();\n            }\n        });\n        for(int i = 0 ; i < listFinal.size(); i++) {\n            print(listFinal.get(i));\n        }\n    }\n\nstatic void ruffleSort(int[] a) {\n    int n=a.length;//shuffle, then sort \n    for (int i=0; i<n; i++) {\n        int oi=random.nextInt(n), temp=a[oi];\n        a[oi]=a[i]; a[i]=temp;\n    }\n    Arrays.sort(a);\n}\n\nstatic long add(long a, long b) {\n    return (a+b)%mod;\n}\n\nstatic long sub(long a, long b) {\n    return ((a-b)%mod+mod)%mod;\n}\n\nstatic long mul(long a, long b) {\n    return (a*b)%mod;\n}\n\nstatic long exp(long base, long exp) {\n    if (exp==0) return 1;\n    long half=exp(base, exp/2);\n    if (exp%2==0) return mul(half, half);\n    return mul(half, mul(half, base));\n}\n\nstatic long[] factorials=new long[2_000_001];\n    static long[] invFactorials=new long[2_000_001];\n    static void precompFacts() {\n        factorials[0]=invFactorials[0]=1;\n        for (int i=1; i<factorials.length; i++) factorials[i]=mul(factorials[i-1], i);\n        invFactorials[factorials.length-1]=exp(factorials[factorials.length-1], mod-2);\n        for (int i=invFactorials.length-2; i>=0; i--)\n            invFactorials[i]=mul(invFactorials[i+1], i+1);\n    }\n    \nstatic long nCk(int n, int k) {\n    return mul(factorials[n], mul(invFactorials[k], invFactorials[n-k]));\n}\n\nstatic class Pair implements Comparable<Pair> {\n        int i, j;\n        long cost;\n        public Pair(int i, int j, long cost) {\n            this.i=i;\n            this.j=j;\n            this.cost=cost;\n        }\n        public int compareTo(Pair o) {\n            return -Long.compare(cost, o.cost);\n        }\n    }\nstatic void sort(int[] a) {\n        ArrayList<Integer> l=new ArrayList<>();\n        for (int i:a) l.add(i);\n        Collections.sort(l);\n        for (int i=0; i<a.length; i++) a[i]=l.get(i);\n}\nstatic class Node {\n        int index;\n        ArrayList<Node> adj=new ArrayList<>();\n        Node par;\n        long parEdgeVal;\n        int subtreeSize;\n \n        public Node(int i) {\n            this.index=i;\n        }\n        void dfs(Node par) {\n            this.par=par;\n            subtreeSize++;\n            for (Node nn:adj) {\n                if (nn==par) {\n                    continue;\n                }\n                nn.dfs(this);\n                subtreeSize+=nn.subtreeSize;\n            }\n            if (par!=null) {\n                long decreaseToMe=vals[0][par.index]-vals[0][index];\n                if (decreaseToMe%subtreeSize!=0) throw null;\n                parEdgeVal=decreaseToMe/subtreeSize;\n            }\n        }\n    }\n\nstatic class DisjointSet {\n        int[] s;\n        \n        public DisjointSet(int n) {\n            Arrays.fill(s = new int[n], -1);\n        }\n        \n        public int find(int i) {\n            return s[i] < 0 ? i : (s[i] = find(s[i]));\n        }\n        \n        public boolean union(int a, int b) {\n            if ((a = find(a)) == (b = find(b))) return false;\n            if(s[a] == s[b]) s[a]--;\n            if(s[a] <= s[b]) s[b] = a; \n            else s[a] = b;\n            return true;\n        }\n    }\nstatic long gcd(long u, long v) {\n    int shift;\n\n    if (u == 0) return v;\n    if (v == 0) return u;\n\n    for (shift = 0; ((u | v) & 1) == 0; ++shift) {\n        u >>= 1;\n        v >>= 1;\n    }\n\n    while ((u & 1) == 0) {\n        u >>= 1;\n    }\n\n    do {\n        while ((v & 1) == 0) {\n            v >>= 1;\n        }\n\n        if (u > v) {\n            long t = v;\n            v = u;\n            u = t;\n        }\n\n        v = v - u;\n    } while (v != 0);\n\n    return u << shift;\n}\nstatic class FastScanner {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st=new StringTokenizer(\"\");\n        String next() {\n            while (!st.hasMoreTokens())\n                try {\n                    st=new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            return st.nextToken();\n        }\n        \n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n        int[] readArray(int n) {\n            int[] a=new int[n];\n            for (int i=0; i<n; i++) a[i]=nextInt();\n            return a;\n        }\n        long[] readLongArray(int n) {\n            long[] a=new long[n];\n            for (int i=0; i<n; i++) a[i]=nextLong();\n            return a;\n        }\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n}\n\nstatic class IncComp implements Comparator<Integer> {\n    @Override\n    public int compare(Integer a , Integer b) {\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\nstatic class DescComp implements Comparator<Integer> {\n    @Override\n    public int compare(Integer a , Integer b) {\n        return a < b ? 1 : a > b ? -1 : 0;\n    }\n}\nstatic Queue<Integer> ascQ = new PriorityQueue<>(new Comparator<Integer>(){\n        @Override\n        public int compare(Integer a, Integer b) {\n            return a <= b ? -1 : 1;\n        }\n});\nstatic Queue<Integer> descQ = new PriorityQueue<>(new Comparator<Integer>(){\n        @Override\n        public int compare(Integer a, Integer b) {\n            return a >= b ? -1 : 1;\n        }\n});\n\nstatic class Reader {\n    final private int BUFFER_SIZE = 1 << 16;\n    private final DataInputStream din;\n    private final byte[] buffer;\n    private int bufferPointer, bytesRead;\n\n    public Reader() {\n        din = new DataInputStream(System.in);\n        buffer = new byte[BUFFER_SIZE];\n        bufferPointer = bytesRead = 0;\n    }\n\n    public Reader(String file_name) throws IOException {\n        din = new DataInputStream(\n                new FileInputStream(file_name));\n        buffer = new byte[BUFFER_SIZE];\n        bufferPointer = bytesRead = 0;\n    }\n\n    public String readLine() throws IOException {\n        byte[] buf = new byte[101]; // line length\n        int cnt = 0, c;\n        while ((c = read()) != -1) {\n            if (c == '\\n') {\n                if (cnt != 0) {\n                    break;\n                } else {\n                    continue;\n                }\n            }\n            buf[cnt++] = (byte) c;\n        }\n        return new String(buf, 0, cnt - 1);\n    }\n\n    public int nextInt() throws IOException {\n        int ret = 0;\n        byte c = read();\n        while (c <= ' ') {\n            c = read();\n        }\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n        do {\n            ret = ret * 10 + c - '0';\n        } while ((c = read()) >= '0' && c <= '9');\n\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public long nextLong() throws IOException {\n        long ret = 0;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n        do {\n            ret = ret * 10 + c - '0';\n        } while ((c = read()) >= '0' && c <= '9');\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public double nextDouble() throws IOException {\n        double ret = 0, div = 1;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n\n        do {\n            ret = ret * 10 + c - '0';\n        } while ((c = read()) >= '0' && c <= '9');\n\n        if (c == '.') {\n            while ((c = read()) >= '0' && c <= '9') {\n                ret += (c - '0') / (div *= 10);\n            }\n        }\n\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    private void fillBuffer() throws IOException {\n        bytesRead = din.read(buffer, bufferPointer = 0,\n                BUFFER_SIZE);\n        if (bytesRead == -1)\n            buffer[0] = -1;\n    }\n\n    private byte read() throws IOException {\n        if (bufferPointer == bytesRead)\n            fillBuffer();\n        return buffer[bufferPointer++];\n    }\n\n    public void close() throws IOException {\n        if (din == null)\n            return;\n        din.close();\n    }\n\n}\n}",
					"file": "/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Leena.java",
					"file_size": 13815,
					"file_write_time": 133369296321479342,
					"redo_stack":
					[
						[
							3213,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAP8OAAAAAAAA/w4AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAPAAAAAAAAAA8AAAAAAAAAAAAAAADwvw"
						],
						[
							3210,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAKEOAAAAAAAAoQ4AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKIOAAAAAAAAog4AAAAAAAAAAAAAAADwvw"
						],
						[
							3205,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAPwOAAAAAAAA/A4AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0OAAAAAAAA/Q4AAAAAAAAAAAAAAADwvw"
						],
						[
							3200,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAKAOAAAAAAAAoA4AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKEOAAAAAAAAoQ4AAAAAAAAAAAAAAADwvw"
						]
					],
					"settings":
					{
						"buffer_size": 13322,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					},
					"undo_stack":
					[
						[
							1492,
							1,
							"insert",
							{
								"characters": " +"
							},
							"AgAAAPwMAAAAAAAA/QwAAAAAAAAAAAAA/QwAAAAAAAD+DAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwMAAAAAAAA/AwAAAAAAAAAAAAAAADwvw"
						],
						[
							1493,
							1,
							"insert",
							{
								"characters": " 2"
							},
							"AgAAAP4MAAAAAAAA/wwAAAAAAAAAAAAA/wwAAAAAAAAADQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4MAAAAAAAA/gwAAAAAAAAAAAAAAADwvw"
						],
						[
							1494,
							1,
							"left_delete",
							null,
							"AQAAAP8MAAAAAAAA/wwAAAAAAAABAAAAMg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAANAAAAAAAAAA0AAAAAAAAAAAAAAADwvw"
						],
						[
							1495,
							1,
							"insert",
							{
								"characters": "1"
							},
							"AQAAAP8MAAAAAAAAAA0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8MAAAAAAAA/wwAAAAAAAAAAAAAAADwvw"
						],
						[
							1500,
							1,
							"insert",
							{
								"characters": "\n\t"
							},
							"BQAAAAENAAAAAAAAAg0AAAAAAAAAAAAAAg0AAAAAAAAIDQAAAAAAAAAAAAACDQAAAAAAAAINAAAAAAAABgAAACAgICAJCQINAAAAAAAACQ0AAAAAAAAAAAAACQ0AAAAAAAAKDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAENAAAAAAAAAQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							1501,
							1,
							"left_delete",
							null,
							"AQAAAAkNAAAAAAAACQ0AAAAAAAABAAAACQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoNAAAAAAAACg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1502,
							1,
							"insert",
							{
								"characters": "grid"
							},
							"BAAAAAkNAAAAAAAACg0AAAAAAAAAAAAACg0AAAAAAAALDQAAAAAAAAAAAAALDQAAAAAAAAwNAAAAAAAAAAAAAAwNAAAAAAAADQ0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAkNAAAAAAAACQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							1503,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAA0NAAAAAAAADw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0NAAAAAAAADQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							1504,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAAA4NAAAAAAAADw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4NAAAAAAAADg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1506,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAABANAAAAAAAAEg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABANAAAAAAAAEA0AAAAAAAAAAAAAAADwvw"
						],
						[
							1507,
							1,
							"insert",
							{
								"characters": "k"
							},
							"AQAAABENAAAAAAAAEg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABENAAAAAAAAEQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							1509,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAABMNAAAAAAAAFA0AAAAAAAAAAAAAFA0AAAAAAAAVDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMNAAAAAAAAEw0AAAAAAAAAAAAAAADwvw"
						],
						[
							1510,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAABUNAAAAAAAAFg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUNAAAAAAAAFQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							1511,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAABYNAAAAAAAAGA0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYNAAAAAAAAFg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1513,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAABgNAAAAAAAAGQ0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgNAAAAAAAAGA0AAAAAAAAAAAAAAADwvw"
						],
						[
							1520,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAAENAAAAAAAAAg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAENAAAAAAAAAQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							1521,
							1,
							"wrap_block",
							{
								"begin": "{",
								"end": "}"
							},
							"AgAAAAINAAAAAAAAAw0AAAAAAAAAAAAAHA0AAAAAAAAkDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAINAAAAAAAAAg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1529,
							1,
							"insert",
							{
								"characters": "\nk++"
							},
							"BgAAAAMNAAAAAAAABA0AAAAAAAAAAAAABA0AAAAAAAAKDQAAAAAAAAAAAAAKDQAAAAAAAAsNAAAAAAAAAAAAAAsNAAAAAAAADA0AAAAAAAAAAAAADA0AAAAAAAANDQAAAAAAAAAAAAANDQAAAAAAAA4NAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMNAAAAAAAAAw0AAAAAAAAAAAAAAADwvw"
						],
						[
							1530,
							1,
							"insert_snippet",
							{
								"contents": "'$0'"
							},
							"AQAAAA4NAAAAAAAAEA0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4NAAAAAAAADg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1531,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete Left Right.sublime-macro"
							},
							"AgAAAA4NAAAAAAAADg0AAAAAAAABAAAAJw4NAAAAAAAADg0AAAAAAAABAAAAJw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8NAAAAAAAADw0AAAAAAAAAAAAAAADwvw"
						],
						[
							1532,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAA4NAAAAAAAADw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4NAAAAAAAADg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1536,
							1,
							"swap_line_down",
							null,
							"AgAAACgNAAAAAAAANA0AAAAAAAAAAAAABA0AAAAAAAAEDQAAAAAAAAwAAAAgICAgCQkJaysrOwo",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsNAAAAAAAACw0AAAAAAAAAAAAAAMBtQA"
						],
						[
							1539,
							1,
							"right_delete",
							null,
							"AQAAAP4MAAAAAAAA/gwAAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4MAAAAAAAA/gwAAAAAAAAAAAAAAADwvw"
						],
						[
							1540,
							2,
							"left_delete",
							null,
							"AgAAAP0MAAAAAAAA/QwAAAAAAAABAAAAK/wMAAAAAAAA/AwAAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4MAAAAAAAA/gwAAAAAAAAAAAAAAADwvw"
						],
						[
							1541,
							1,
							"right_delete",
							null,
							"AQAAAPwMAAAAAAAA/AwAAAAAAAABAAAAMQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwMAAAAAAAA/AwAAAAAAAAAAAAAAADwvw"
						],
						[
							1544,
							1,
							"insert",
							{
								"characters": "n"
							},
							"AQAAAA8NAAAAAAAAEA0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA8NAAAAAAAADw0AAAAAAAAAAAAAAADwvw"
						],
						[
							1545,
							1,
							"insert",
							{
								"characters": " +"
							},
							"AgAAABANAAAAAAAAEQ0AAAAAAAAAAAAAEQ0AAAAAAAASDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABANAAAAAAAAEA0AAAAAAAAAAAAAAADwvw"
						],
						[
							1546,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAABINAAAAAAAAEw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABINAAAAAAAAEg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1563,
							1,
							"insert",
							{
								"characters": " +"
							},
							"AgAAAPwMAAAAAAAA/QwAAAAAAAAAAAAA/QwAAAAAAAD+DAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwMAAAAAAAA/AwAAAAAAAAAAAAAAADwvw"
						],
						[
							1564,
							1,
							"insert",
							{
								"characters": " 1"
							},
							"AgAAAP4MAAAAAAAA/wwAAAAAAAAAAAAA/wwAAAAAAAAADQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP4MAAAAAAAA/gwAAAAAAAAAAAAAAADwvw"
						],
						[
							1578,
							1,
							"insert",
							{
								"characters": "k"
							},
							"AgAAABMNAAAAAAAAFA0AAAAAAAAAAAAAFA0AAAAAAAAUDQAAAAAAAAUAAABuICsgaw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgNAAAAAAAAEw0AAAAAAAAAAAAAAADwvw"
						],
						[
							1579,
							1,
							"insert",
							{
								"characters": " +"
							},
							"AgAAABQNAAAAAAAAFQ0AAAAAAAAAAAAAFQ0AAAAAAAAWDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQNAAAAAAAAFA0AAAAAAAAAAAAAAADwvw"
						],
						[
							1580,
							1,
							"insert",
							{
								"characters": " 1"
							},
							"AgAAABYNAAAAAAAAFw0AAAAAAAAAAAAAFw0AAAAAAAAYDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYNAAAAAAAAFg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1584,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"AgAAAPcMAAAAAAAA9wwAAAAAAAAFAAAAMiAqIG73DAAAAAAAAP4MAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwMAAAAAAAA9wwAAAAAAAAAAAAAAADwvw"
						],
						[
							1589,
							1,
							"insert_snippet",
							{
								"contents": "(${0:$SELECTION})"
							},
							"AgAAAPcMAAAAAAAA9wwAAAAAAAALAAAAKDIgKiBuKSArIDH3DAAAAAAAAAQNAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcMAAAAAAAAAg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1613,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AgAAAPcMAAAAAAAA+AwAAAAAAAAAAAAA+AwAAAAAAAD4DAAAAAAAAA0AAAAoKDIgKiBuKSArIDEp",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQNAAAAAAAA9wwAAAAAAAAAAAAAAADwvw"
						],
						[
							1614,
							1,
							"insert",
							{
								"characters": " *"
							},
							"AgAAAPgMAAAAAAAA+QwAAAAAAAAAAAAA+QwAAAAAAAD6DAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgMAAAAAAAA+AwAAAAAAAAAAAAAAADwvw"
						],
						[
							1615,
							1,
							"insert",
							{
								"characters": " n"
							},
							"AgAAAPoMAAAAAAAA+wwAAAAAAAAAAAAA+wwAAAAAAAD8DAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoMAAAAAAAA+gwAAAAAAAAAAAAAAADwvw"
						],
						[
							1628,
							1,
							"paste",
							null,
							"AgAAAPcMAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADQAAAAAAAAUAAAAyICogbg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcMAAAAAAAA/AwAAAAAAAAAAAAAAADwvw"
						],
						[
							1659,
							1,
							"right_delete",
							null,
							"AQAAABQNAAAAAAAAFA0AAAAAAAAEAAAAICsgMQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQNAAAAAAAAGA0AAAAAAAAAAAAAAADwvw"
						],
						[
							1660,
							1,
							"insert",
							{
								"characters": "++"
							},
							"AgAAABQNAAAAAAAAFQ0AAAAAAAAAAAAAFQ0AAAAAAAAWDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQNAAAAAAAAFA0AAAAAAAAAAAAAAADwvw"
						],
						[
							1662,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAACUNAAAAAAAAKA0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkNAAAAAAAAKQ0AAAAAAAAAAAAAABB5QA"
						],
						[
							1667,
							1,
							"insert",
							{
								"characters": "for"
							},
							"BAAAAOwMAAAAAAAA7QwAAAAAAAAAAAAA7QwAAAAAAADtDAAAAAAAAEgAAAB3aGlsZShrIDw9IDIgKiBuICsgMSkgewogICAgCQkJZ3JpZFtpXVtrKytdID0gIiI7CiAgICAJCQkvLyBrKys7CiAgICAJCX3tDAAAAAAAAO4MAAAAAAAAAAAAAO4MAAAAAAAA7wwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQNAAAAAAAA7AwAAAAAAAAAAAAAAADwvw"
						],
						[
							1668,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAO8MAAAAAAAA8QwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8MAAAAAAAA7wwAAAAAAAAAAAAAAADwvw"
						],
						[
							1669,
							1,
							"insert",
							{
								"characters": "k;"
							},
							"AgAAAPAMAAAAAAAA8QwAAAAAAAAAAAAA8QwAAAAAAADyDAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAMAAAAAAAA8AwAAAAAAAAAAAAAAADwvw"
						],
						[
							1670,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAPIMAAAAAAAA8wwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIMAAAAAAAA8gwAAAAAAAAAAAAAAADwvw"
						],
						[
							1671,
							3,
							"left_delete",
							null,
							"AwAAAPIMAAAAAAAA8gwAAAAAAAABAAAAIPEMAAAAAAAA8QwAAAAAAAABAAAAO/AMAAAAAAAA8AwAAAAAAAABAAAAaw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMMAAAAAAAA8wwAAAAAAAAAAAAAAADwvw"
						],
						[
							1672,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAPAMAAAAAAAA8QwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPAMAAAAAAAA8AwAAAAAAAAAAAAAAADwvw"
						],
						[
							1673,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAPEMAAAAAAAA8gwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEMAAAAAAAA8QwAAAAAAAAAAAAAAADwvw"
						],
						[
							1674,
							1,
							"left_delete",
							null,
							"AQAAAPEMAAAAAAAA8QwAAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIMAAAAAAAA8gwAAAAAAAAAAAAAAADwvw"
						],
						[
							1675,
							1,
							"insert",
							{
								"characters": "k<"
							},
							"AgAAAPEMAAAAAAAA8gwAAAAAAAAAAAAA8gwAAAAAAADzDAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEMAAAAAAAA8QwAAAAAAAAAAAAAAADwvw"
						],
						[
							1676,
							1,
							"insert",
							{
								"characters": "="
							},
							"AQAAAPMMAAAAAAAA9AwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMMAAAAAAAA8wwAAAAAAAAAAAAAAADwvw"
						],
						[
							1677,
							1,
							"insert",
							{
								"characters": " 2"
							},
							"AgAAAPQMAAAAAAAA9QwAAAAAAAAAAAAA9QwAAAAAAAD2DAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQMAAAAAAAA9AwAAAAAAAAAAAAAAADwvw"
						],
						[
							1678,
							1,
							"insert",
							{
								"characters": " *"
							},
							"AgAAAPYMAAAAAAAA9wwAAAAAAAAAAAAA9wwAAAAAAAD4DAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYMAAAAAAAA9gwAAAAAAAAAAAAAAADwvw"
						],
						[
							1679,
							1,
							"insert",
							{
								"characters": " n"
							},
							"AgAAAPgMAAAAAAAA+QwAAAAAAAAAAAAA+QwAAAAAAAD6DAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgMAAAAAAAA+AwAAAAAAAAAAAAAAADwvw"
						],
						[
							1680,
							1,
							"insert",
							{
								"characters": " +"
							},
							"AgAAAPoMAAAAAAAA+wwAAAAAAAAAAAAA+wwAAAAAAAD8DAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoMAAAAAAAA+gwAAAAAAAAAAAAAAADwvw"
						],
						[
							1681,
							1,
							"insert",
							{
								"characters": " 1;"
							},
							"AwAAAPwMAAAAAAAA/QwAAAAAAAAAAAAA/QwAAAAAAAD+DAAAAAAAAAAAAAD+DAAAAAAAAP8MAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwMAAAAAAAA/AwAAAAAAAAAAAAAAADwvw"
						],
						[
							1682,
							1,
							"insert",
							{
								"characters": " k++"
							},
							"BAAAAP8MAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAABDQAAAAAAAAAAAAABDQAAAAAAAAINAAAAAAAAAAAAAAINAAAAAAAAAw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8MAAAAAAAA/wwAAAAAAAAAAAAAAADwvw"
						],
						[
							1684,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAAQNAAAAAAAABQ0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQNAAAAAAAABA0AAAAAAAAAAAAAAADwvw"
						],
						[
							1685,
							1,
							"insert_snippet",
							{
								"contents": "{$0}"
							},
							"AQAAAAUNAAAAAAAABw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUNAAAAAAAABQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							1686,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
							},
							"BgAAAAYNAAAAAAAABw0AAAAAAAAAAAAABw0AAAAAAAANDQAAAAAAAAAAAAANDQAAAAAAAA4NAAAAAAAAAAAAAA4NAAAAAAAAFA0AAAAAAAAAAAAABw0AAAAAAAAHDQAAAAAAAAYAAAAgICAgCQkHDQAAAAAAAA4NAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYNAAAAAAAABg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1687,
							1,
							"insert",
							{
								"characters": "grid"
							},
							"BAAAAA4NAAAAAAAADw0AAAAAAAAAAAAADw0AAAAAAAAQDQAAAAAAAAAAAAAQDQAAAAAAABENAAAAAAAAAAAAABENAAAAAAAAEg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4NAAAAAAAADg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1688,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAABINAAAAAAAAFA0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABINAAAAAAAAEg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1689,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAABMNAAAAAAAAFA0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMNAAAAAAAAEw0AAAAAAAAAAAAAAADwvw"
						],
						[
							1691,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAABUNAAAAAAAAFw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUNAAAAAAAAFQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							1692,
							1,
							"insert",
							{
								"characters": "k"
							},
							"AQAAABYNAAAAAAAAFw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYNAAAAAAAAFg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1693,
							1,
							"insert",
							{
								"characters": " +"
							},
							"AgAAABcNAAAAAAAAGA0AAAAAAAAAAAAAGA0AAAAAAAAZDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcNAAAAAAAAFw0AAAAAAAAAAAAAAADwvw"
						],
						[
							1694,
							1,
							"insert",
							{
								"characters": " 1"
							},
							"AgAAABkNAAAAAAAAGg0AAAAAAAAAAAAAGg0AAAAAAAAbDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkNAAAAAAAAGQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							1696,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAABwNAAAAAAAAHQ0AAAAAAAAAAAAAHQ0AAAAAAAAeDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwNAAAAAAAAHA0AAAAAAAAAAAAAAADwvw"
						],
						[
							1697,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAB4NAAAAAAAAHw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4NAAAAAAAAHg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1698,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAB8NAAAAAAAAIQ0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8NAAAAAAAAHw0AAAAAAAAAAAAAAADwvw"
						],
						[
							1700,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAACENAAAAAAAAIg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACENAAAAAAAAIQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							1703,
							1,
							"insert",
							{
								"characters": "\nop"
							},
							"BQAAAAYNAAAAAAAABw0AAAAAAAAAAAAABw0AAAAAAAANDQAAAAAAAAAAAAANDQAAAAAAAA4NAAAAAAAAAAAAAA4NAAAAAAAADw0AAAAAAAAAAAAADw0AAAAAAAAQDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYNAAAAAAAABg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1704,
							1,
							"insert_completion",
							{
								"completion": "out.print(  + \"\\n\");",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "op"
							},
							"AgAAAA4NAAAAAAAADg0AAAAAAAACAAAAb3AODQAAAAAAACINAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABANAAAAAAAAEA0AAAAAAAAAAAAAAADwvw"
						],
						[
							1706,
							1,
							"insert",
							{
								"characters": "k"
							},
							"AQAAABkNAAAAAAAAGg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkNAAAAAAAAGQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							1711,
							1,
							"right_delete",
							null,
							"AQAAAPMMAAAAAAAA8wwAAAAAAAABAAAAPQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMMAAAAAAAA8wwAAAAAAAAAAAAAAADwvw"
						],
						[
							1719,
							1,
							"insert",
							{
								"characters": " +"
							},
							"AgAAAEoMAAAAAAAASwwAAAAAAAAAAAAASwwAAAAAAABMDAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoMAAAAAAAASgwAAAAAAAAAAAAAAADwvw"
						],
						[
							1720,
							1,
							"insert",
							{
								"characters": " 1"
							},
							"AgAAAEwMAAAAAAAATQwAAAAAAAAAAAAATQwAAAAAAABODAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwMAAAAAAAATAwAAAAAAAAAAAAAAADwvw"
						],
						[
							1726,
							1,
							"right_delete",
							null,
							"AQAAADgNAAAAAAAAOA0AAAAAAAADAAAAKyAx",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgNAAAAAAAAOw0AAAAAAAAAAAAAAADwvw"
						],
						[
							1727,
							1,
							"left_delete",
							null,
							"AQAAADcNAAAAAAAANw0AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgNAAAAAAAAOA0AAAAAAAAAAAAAAADwvw"
						],
						[
							1764,
							1,
							"paste",
							null,
							"AQAAAPQMAAAAAAAAEw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPQMAAAAAAAA9AwAAAAAAAAAAAAAAADwvw"
						],
						[
							1775,
							1,
							"insert",
							{
								"characters": "n"
							},
							"AQAAAPgMAAAAAAAA+QwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgMAAAAAAAA+AwAAAAAAAAAAAAAAADwvw"
						],
						[
							1776,
							1,
							"insert",
							{
								"characters": " +"
							},
							"AgAAAPkMAAAAAAAA+gwAAAAAAAAAAAAA+gwAAAAAAAD7DAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkMAAAAAAAA+QwAAAAAAAAAAAAAAADwvw"
						],
						[
							1777,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAPsMAAAAAAAA/AwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPsMAAAAAAAA+wwAAAAAAAAAAAAAAADwvw"
						],
						[
							1780,
							1,
							"insert",
							{
								"characters": " +"
							},
							"AgAAABcNAAAAAAAAGA0AAAAAAAAAAAAAGA0AAAAAAAAZDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcNAAAAAAAAFw0AAAAAAAAAAAAAAADwvw"
						],
						[
							1781,
							1,
							"insert",
							{
								"characters": " 1"
							},
							"AgAAABkNAAAAAAAAGg0AAAAAAAAAAAAAGg0AAAAAAAAbDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkNAAAAAAAAGQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							1782,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAABsNAAAAAAAAHA0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsNAAAAAAAAGw0AAAAAAAAAAAAAAADwvw"
						],
						[
							1785,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAEEMAAAAAAAARAwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8MAAAAAAAATwwAAAAAAAAAAAAAAADwvw"
						],
						[
							1790,
							1,
							"left_delete",
							null,
							"AQAAAPcMAAAAAAAA9wwAAAAAAAABAAAAag",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgMAAAAAAAA+AwAAAAAAAAAAAAAAADwvw"
						],
						[
							1791,
							1,
							"insert",
							{
								"characters": "k"
							},
							"AQAAAPcMAAAAAAAA+AwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcMAAAAAAAA9wwAAAAAAAAAAAAAAADwvw"
						],
						[
							1804,
							1,
							"left_delete",
							null,
							"AQAAADUNAAAAAAAANQ0AAAAAAAAdAAAAICAgIAkJCW91dC5wcmludCggayArICJcbiIpOwo",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUNAAAAAAAAUg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1908,
							1,
							"insert",
							{
								"characters": "null"
							},
							"BQAAAEkNAAAAAAAASg0AAAAAAAAAAAAASg0AAAAAAABKDQAAAAAAAAIAAAAiIkoNAAAAAAAASw0AAAAAAAAAAAAASw0AAAAAAABMDQAAAAAAAAAAAABMDQAAAAAAAE0NAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkNAAAAAAAASw0AAAAAAAAAAAAAAADwvw"
						],
						[
							1915,
							1,
							"insert",
							{
								"characters": "\nif"
							},
							"BQAAALoNAAAAAAAAuw0AAAAAAAAAAAAAuw0AAAAAAADBDQAAAAAAAAAAAADBDQAAAAAAAMINAAAAAAAAAAAAAMINAAAAAAAAww0AAAAAAAAAAAAAww0AAAAAAADEDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoNAAAAAAAAug0AAAAAAAAAAAAAAADwvw"
						],
						[
							1916,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAMQNAAAAAAAAxg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQNAAAAAAAAxA0AAAAAAAAAAAAAAADwvw"
						],
						[
							1917,
							1,
							"insert",
							{
								"characters": "fri"
							},
							"AwAAAMUNAAAAAAAAxg0AAAAAAAAAAAAAxg0AAAAAAADHDQAAAAAAAAAAAADHDQAAAAAAAMgNAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUNAAAAAAAAxQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							1918,
							3,
							"left_delete",
							null,
							"AwAAAMcNAAAAAAAAxw0AAAAAAAABAAAAacYNAAAAAAAAxg0AAAAAAAABAAAAcsUNAAAAAAAAxQ0AAAAAAAABAAAAZg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgNAAAAAAAAyA0AAAAAAAAAAAAAAADwvw"
						],
						[
							1919,
							1,
							"insert",
							{
								"characters": "grid"
							},
							"BAAAAMUNAAAAAAAAxg0AAAAAAAAAAAAAxg0AAAAAAADHDQAAAAAAAAAAAADHDQAAAAAAAMgNAAAAAAAAAAAAAMgNAAAAAAAAyQ0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUNAAAAAAAAxQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							1920,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAMkNAAAAAAAAyw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkNAAAAAAAAyQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							1921,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAAMoNAAAAAAAAyw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoNAAAAAAAAyg0AAAAAAAAAAAAAAADwvw"
						],
						[
							1923,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAMwNAAAAAAAAzg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwNAAAAAAAAzA0AAAAAAAAAAAAAAADwvw"
						],
						[
							1924,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAM0NAAAAAAAAzg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0NAAAAAAAAzQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							1926,
							1,
							"insert",
							{
								"characters": " !="
							},
							"AwAAAM8NAAAAAAAA0A0AAAAAAAAAAAAA0A0AAAAAAADRDQAAAAAAAAAAAADRDQAAAAAAANINAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8NAAAAAAAAzw0AAAAAAAAAAAAAAADwvw"
						],
						[
							1927,
							1,
							"insert",
							{
								"characters": " null"
							},
							"BQAAANINAAAAAAAA0w0AAAAAAAAAAAAA0w0AAAAAAADUDQAAAAAAAAAAAADUDQAAAAAAANUNAAAAAAAAAAAAANUNAAAAAAAA1g0AAAAAAAAAAAAA1g0AAAAAAADXDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANINAAAAAAAA0g0AAAAAAAAAAAAAAADwvw"
						],
						[
							1930,
							1,
							"insert",
							{
								"characters": "\t"
							},
							"AQAAAOANAAAAAAAA4Q0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOANAAAAAAAA4A0AAAAAAAAAAAAAAADwvw"
						],
						[
							1935,
							1,
							"left_delete",
							null,
							"AQAAAOsNAAAAAAAA6w0AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOwNAAAAAAAA7A0AAAAAAAAAAAAAAADwvw"
						],
						[
							1950,
							1,
							"right_delete",
							null,
							"AQAAAPUNAAAAAAAA9Q0AAAAAAAAGAAAAICsgIiAi",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUNAAAAAAAA+w0AAAAAAAAAAAAAAADwvw"
						],
						[
							1958,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAAPUNAAAAAAAA9g0AAAAAAAAAAAAA9g0AAAAAAAD3DQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUNAAAAAAAA9Q0AAAAAAAAAAAAAAADwvw"
						],
						[
							1959,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAPcNAAAAAAAA+A0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcNAAAAAAAA9w0AAAAAAAAAAAAAAADwvw"
						],
						[
							1960,
							2,
							"left_delete",
							null,
							"AgAAAPcNAAAAAAAA9w0AAAAAAAABAAAAIPYNAAAAAAAA9g0AAAAAAAABAAAAPQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgNAAAAAAAA+A0AAAAAAAAAAAAAAADwvw"
						],
						[
							1961,
							1,
							"insert",
							{
								"characters": "+"
							},
							"AQAAAPYNAAAAAAAA9w0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYNAAAAAAAA9g0AAAAAAAAAAAAAAADwvw"
						],
						[
							1962,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAPcNAAAAAAAA+A0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcNAAAAAAAA9w0AAAAAAAAAAAAAAADwvw"
						],
						[
							1963,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAPgNAAAAAAAA+g0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgNAAAAAAAA+A0AAAAAAAAAAAAAAADwvw"
						],
						[
							1964,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAPkNAAAAAAAA+g0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkNAAAAAAAA+Q0AAAAAAAAAAAAAAADwvw"
						],
						[
							1980,
							1,
							"insert",
							{
								"characters": " &&"
							},
							"AwAAANcNAAAAAAAA2A0AAAAAAAAAAAAA2A0AAAAAAADZDQAAAAAAAAAAAADZDQAAAAAAANoNAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcNAAAAAAAA1w0AAAAAAAAAAAAAAADwvw"
						],
						[
							1981,
							1,
							"insert",
							{
								"characters": " grid"
							},
							"BQAAANoNAAAAAAAA2w0AAAAAAAAAAAAA2w0AAAAAAADcDQAAAAAAAAAAAADcDQAAAAAAAN0NAAAAAAAAAAAAAN0NAAAAAAAA3g0AAAAAAAAAAAAA3g0AAAAAAADfDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoNAAAAAAAA2g0AAAAAAAAAAAAAAADwvw"
						],
						[
							1982,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAN8NAAAAAAAA4Q0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8NAAAAAAAA3w0AAAAAAAAAAAAAAADwvw"
						],
						[
							1983,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAAOANAAAAAAAA4Q0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOANAAAAAAAA4A0AAAAAAAAAAAAAAADwvw"
						],
						[
							1985,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAOINAAAAAAAA5A0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOINAAAAAAAA4g0AAAAAAAAAAAAAAADwvw"
						],
						[
							1986,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAOMNAAAAAAAA5A0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMNAAAAAAAA4w0AAAAAAAAAAAAAAADwvw"
						],
						[
							1988,
							1,
							"insert",
							{
								"characters": " !="
							},
							"AwAAAOUNAAAAAAAA5g0AAAAAAAAAAAAA5g0AAAAAAADnDQAAAAAAAAAAAADnDQAAAAAAAOgNAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOUNAAAAAAAA5Q0AAAAAAAAAAAAAAADwvw"
						],
						[
							1989,
							1,
							"insert",
							{
								"characters": " 0"
							},
							"AgAAAOgNAAAAAAAA6Q0AAAAAAAAAAAAA6Q0AAAAAAADqDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgNAAAAAAAA6A0AAAAAAAAAAAAAAADwvw"
						],
						[
							1992,
							1,
							"insert",
							{
								"characters": "\nesle"
							},
							"CAAAABAOAAAAAAAAEQ4AAAAAAAAAAAAAEQ4AAAAAAAAZDgAAAAAAAAAAAAARDgAAAAAAABEOAAAAAAAACAAAACAgICAJCQkJEQ4AAAAAAAAYDgAAAAAAAAAAAAAYDgAAAAAAABkOAAAAAAAAAAAAABkOAAAAAAAAGg4AAAAAAAAAAAAAGg4AAAAAAAAbDgAAAAAAAAAAAAAbDgAAAAAAABwOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAOAAAAAAAAEA4AAAAAAAAAAAAAAHCKQA"
						],
						[
							1993,
							3,
							"left_delete",
							null,
							"AwAAABsOAAAAAAAAGw4AAAAAAAABAAAAZRoOAAAAAAAAGg4AAAAAAAABAAAAbBkOAAAAAAAAGQ4AAAAAAAABAAAAcw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwOAAAAAAAAHA4AAAAAAAAAAAAAAADwvw"
						],
						[
							1994,
							1,
							"insert",
							{
								"characters": "lse"
							},
							"AwAAABkOAAAAAAAAGg4AAAAAAAAAAAAAGg4AAAAAAAAbDgAAAAAAAAAAAAAbDgAAAAAAABwOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkOAAAAAAAAGQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							1996,
							1,
							"insert",
							{
								"characters": "\nout"
							},
							"BwAAABwOAAAAAAAAHQ4AAAAAAAAAAAAAHQ4AAAAAAAAkDgAAAAAAAAAAAAAdDgAAAAAAAB0OAAAAAAAABwAAACAgICAJCQkdDgAAAAAAACUOAAAAAAAAAAAAACUOAAAAAAAAJg4AAAAAAAAAAAAAJg4AAAAAAAAnDgAAAAAAAAAAAAAnDgAAAAAAACgOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwOAAAAAAAAHA4AAAAAAAAAAAAAAADwvw"
						],
						[
							1997,
							1,
							"insert_completion",
							{
								"completion": "OutOfMemoryError",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "OutOfMemoryError"
							},
							"AgAAACUOAAAAAAAAJQ4AAAAAAAADAAAAb3V0JQ4AAAAAAAA1DgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgOAAAAAAAAKA4AAAAAAAAAAAAAAADwvw"
						],
						[
							1998,
							16,
							"left_delete",
							null,
							"EAAAADQOAAAAAAAANA4AAAAAAAABAAAAcjMOAAAAAAAAMw4AAAAAAAABAAAAbzIOAAAAAAAAMg4AAAAAAAABAAAAcjEOAAAAAAAAMQ4AAAAAAAABAAAAcjAOAAAAAAAAMA4AAAAAAAABAAAARS8OAAAAAAAALw4AAAAAAAABAAAAeS4OAAAAAAAALg4AAAAAAAABAAAAci0OAAAAAAAALQ4AAAAAAAABAAAAbywOAAAAAAAALA4AAAAAAAABAAAAbSsOAAAAAAAAKw4AAAAAAAABAAAAZSoOAAAAAAAAKg4AAAAAAAABAAAATSkOAAAAAAAAKQ4AAAAAAAABAAAAZigOAAAAAAAAKA4AAAAAAAABAAAATycOAAAAAAAAJw4AAAAAAAABAAAAdCYOAAAAAAAAJg4AAAAAAAABAAAAdSUOAAAAAAAAJQ4AAAAAAAABAAAATw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUOAAAAAAAANQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							1999,
							1,
							"insert",
							{
								"characters": "op"
							},
							"AgAAACUOAAAAAAAAJg4AAAAAAAAAAAAAJg4AAAAAAAAnDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUOAAAAAAAAJQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2000,
							1,
							"insert_completion",
							{
								"completion": "out.print(  + \"\\n\");",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "op"
							},
							"AgAAACUOAAAAAAAAJQ4AAAAAAAACAAAAb3AlDgAAAAAAADkOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcOAAAAAAAAJw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2003,
							5,
							"left_delete",
							null,
							"BQAAADYOAAAAAAAANg4AAAAAAAABAAAAIjUOAAAAAAAANQ4AAAAAAAABAAAAbjQOAAAAAAAANA4AAAAAAAABAAAAXDMOAAAAAAAAMw4AAAAAAAABAAAAIjIOAAAAAAAAMg4AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcOAAAAAAAANw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2004,
							2,
							"left_delete",
							null,
							"AgAAADEOAAAAAAAAMQ4AAAAAAAABAAAAKzAOAAAAAAAAMA4AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIOAAAAAAAAMg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2005,
							1,
							"left_delete",
							null,
							"AQAAAC8OAAAAAAAALw4AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAOAAAAAAAAMA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2006,
							1,
							"insert",
							{
								"characters": "grid"
							},
							"BAAAAC8OAAAAAAAAMA4AAAAAAAAAAAAAMA4AAAAAAAAxDgAAAAAAAAAAAAAxDgAAAAAAADIOAAAAAAAAAAAAADIOAAAAAAAAMw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8OAAAAAAAALw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2007,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAADMOAAAAAAAANQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMOAAAAAAAAMw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2008,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAADQOAAAAAAAANQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQOAAAAAAAANA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2010,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAADYOAAAAAAAAOA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYOAAAAAAAANg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2011,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAADcOAAAAAAAAOA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcOAAAAAAAANw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2014,
							1,
							"insert",
							{
								"characters": " if"
							},
							"AwAAABwOAAAAAAAAHQ4AAAAAAAAAAAAAHQ4AAAAAAAAeDgAAAAAAAAAAAAAeDgAAAAAAAB8OAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwOAAAAAAAAHA4AAAAAAAAAAAAAAHiDQA"
						],
						[
							2015,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAB8OAAAAAAAAIA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8OAAAAAAAAHw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2016,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAACAOAAAAAAAAIg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACAOAAAAAAAAIA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2017,
							1,
							"insert",
							{
								"characters": "grid"
							},
							"BAAAACEOAAAAAAAAIg4AAAAAAAAAAAAAIg4AAAAAAAAjDgAAAAAAAAAAAAAjDgAAAAAAACQOAAAAAAAAAAAAACQOAAAAAAAAJQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEOAAAAAAAAIQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2018,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAACUOAAAAAAAAJw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUOAAAAAAAAJQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2019,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAACYOAAAAAAAAJw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYOAAAAAAAAJg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2021,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAACgOAAAAAAAAKg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgOAAAAAAAAKA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2022,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAACkOAAAAAAAAKg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkOAAAAAAAAKQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2024,
							1,
							"insert",
							{
								"characters": " !=nu"
							},
							"BQAAACsOAAAAAAAALA4AAAAAAAAAAAAALA4AAAAAAAAtDgAAAAAAAAAAAAAtDgAAAAAAAC4OAAAAAAAAAAAAAC4OAAAAAAAALw4AAAAAAAAAAAAALw4AAAAAAAAwDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACsOAAAAAAAAKw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2025,
							1,
							"insert",
							{
								"characters": "ll"
							},
							"AgAAADAOAAAAAAAAMQ4AAAAAAAAAAAAAMQ4AAAAAAAAyDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAOAAAAAAAAMA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2026,
							1,
							"insert",
							{
								"characters": " &&"
							},
							"AwAAADIOAAAAAAAAMw4AAAAAAAAAAAAAMw4AAAAAAAA0DgAAAAAAAAAAAAA0DgAAAAAAADUOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIOAAAAAAAAMg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2027,
							1,
							"insert",
							{
								"characters": " grid"
							},
							"BQAAADUOAAAAAAAANg4AAAAAAAAAAAAANg4AAAAAAAA3DgAAAAAAAAAAAAA3DgAAAAAAADgOAAAAAAAAAAAAADgOAAAAAAAAOQ4AAAAAAAAAAAAAOQ4AAAAAAAA6DgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUOAAAAAAAANQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2028,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAADoOAAAAAAAAPA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoOAAAAAAAAOg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2029,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAADsOAAAAAAAAPA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsOAAAAAAAAOw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2031,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAD0OAAAAAAAAPw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0OAAAAAAAAPQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2032,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAD4OAAAAAAAAPw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4OAAAAAAAAPg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2034,
							1,
							"insert",
							{
								"characters": " =="
							},
							"AwAAAEAOAAAAAAAAQQ4AAAAAAAAAAAAAQQ4AAAAAAABCDgAAAAAAAAAAAABCDgAAAAAAAEMOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAOAAAAAAAAQA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2035,
							1,
							"insert",
							{
								"characters": " 0"
							},
							"AgAAAEMOAAAAAAAARA4AAAAAAAAAAAAARA4AAAAAAABFDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMOAAAAAAAAQw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2038,
							1,
							"insert",
							{
								"characters": " &&"
							},
							"AwAAAEUOAAAAAAAARg4AAAAAAAAAAAAARg4AAAAAAABHDgAAAAAAAAAAAABHDgAAAAAAAEgOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUOAAAAAAAARQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2039,
							1,
							"insert",
							{
								"characters": " j"
							},
							"AgAAAEgOAAAAAAAASQ4AAAAAAAAAAAAASQ4AAAAAAABKDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgOAAAAAAAASA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2040,
							1,
							"insert",
							{
								"characters": " >"
							},
							"AgAAAEoOAAAAAAAASw4AAAAAAAAAAAAASw4AAAAAAABMDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoOAAAAAAAASg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2041,
							1,
							"insert",
							{
								"characters": " n"
							},
							"AgAAAEwOAAAAAAAATQ4AAAAAAAAAAAAATQ4AAAAAAABODgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwOAAAAAAAATA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2052,
							1,
							"insert_snippet",
							{
								"contents": "\"${0:$SELECTION}\""
							},
							"AgAAAEQOAAAAAAAARA4AAAAAAAABAAAAMEQOAAAAAAAARw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQOAAAAAAAARQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2056,
							1,
							"insert_snippet",
							{
								"contents": "\"${0:$SELECTION}\""
							},
							"AgAAAOkNAAAAAAAA6Q0AAAAAAAABAAAAMOkNAAAAAAAA7A0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkNAAAAAAAA6g0AAAAAAAAAAAAAAADwvw"
						],
						[
							2063,
							1,
							"insert",
							{
								"characters": "="
							},
							"AQAAAFAOAAAAAAAAUQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAOAAAAAAAAUA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2075,
							1,
							"insert",
							{
								"characters": " -"
							},
							"AgAAAFMOAAAAAAAAVA4AAAAAAAAAAAAAVA4AAAAAAABVDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMOAAAAAAAAUw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2076,
							1,
							"insert",
							{
								"characters": " 1"
							},
							"AgAAAFUOAAAAAAAAVg4AAAAAAAAAAAAAVg4AAAAAAABXDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUOAAAAAAAAVQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2110,
							1,
							"left_delete",
							null,
							"AQAAAEcOAAAAAAAARw4AAAAAAAABAAAAMA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgOAAAAAAAASA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2111,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAEcOAAAAAAAASA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcOAAAAAAAARw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2112,
							1,
							"left_delete",
							null,
							"AQAAAEcOAAAAAAAARw4AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgOAAAAAAAASA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2113,
							1,
							"insert",
							{
								"characters": "0"
							},
							"AQAAAEcOAAAAAAAASA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcOAAAAAAAARw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2116,
							1,
							"right_delete",
							null,
							"AQAAAEoOAAAAAAAASg4AAAAAAAANAAAAJiYgaiA+PSBuIC0gMQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoOAAAAAAAAVw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2117,
							1,
							"left_delete",
							null,
							"AQAAAEkOAAAAAAAASQ4AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoOAAAAAAAASg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2119,
							1,
							"insert",
							{
								"characters": "\nelse"
							},
							"CAAAAGkOAAAAAAAAag4AAAAAAAAAAAAAag4AAAAAAAByDgAAAAAAAAAAAABqDgAAAAAAAGoOAAAAAAAACAAAACAgICAJCQkJag4AAAAAAABxDgAAAAAAAAAAAABxDgAAAAAAAHIOAAAAAAAAAAAAAHIOAAAAAAAAcw4AAAAAAAAAAAAAcw4AAAAAAAB0DgAAAAAAAAAAAAB0DgAAAAAAAHUOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGkOAAAAAAAAaQ4AAAAAAAAAAAAAADiNQA"
						],
						[
							2121,
							1,
							"insert",
							{
								"characters": "\ncontinue;"
							},
							"DQAAAHUOAAAAAAAAdg4AAAAAAAAAAAAAdg4AAAAAAAB9DgAAAAAAAAAAAAB2DgAAAAAAAHYOAAAAAAAABwAAACAgICAJCQl2DgAAAAAAAH4OAAAAAAAAAAAAAH4OAAAAAAAAfw4AAAAAAAAAAAAAfw4AAAAAAACADgAAAAAAAAAAAACADgAAAAAAAIEOAAAAAAAAAAAAAIEOAAAAAAAAgg4AAAAAAAAAAAAAgg4AAAAAAACDDgAAAAAAAAAAAACDDgAAAAAAAIQOAAAAAAAAAAAAAIQOAAAAAAAAhQ4AAAAAAAAAAAAAhQ4AAAAAAACGDgAAAAAAAAAAAACGDgAAAAAAAIcOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUOAAAAAAAAdQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2133,
							1,
							"insert",
							{
								"characters": "else"
							},
							"BAAAAMINAAAAAAAAww0AAAAAAAAAAAAAww0AAAAAAADEDQAAAAAAAAAAAADEDQAAAAAAAMUNAAAAAAAAAAAAAMUNAAAAAAAAxg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMINAAAAAAAAwg0AAAAAAAAAAAAAAADwvw"
						],
						[
							2134,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAMYNAAAAAAAAxw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYNAAAAAAAAxg0AAAAAAAAAAAAAAADwvw"
						],
						[
							2137,
							1,
							"right_delete",
							null,
							"AQAAAHYOAAAAAAAAdg4AAAAAAAAWAAAAZWxzZQogICAgCQkJCWNvbnRpbnVlOw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwOAAAAAAAAdg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2138,
							6,
							"left_delete",
							null,
							"BgAAAHUOAAAAAAAAdQ4AAAAAAAABAAAACXQOAAAAAAAAdA4AAAAAAAABAAAACXMOAAAAAAAAcw4AAAAAAAABAAAACXIOAAAAAAAAcg4AAAAAAAABAAAAIHEOAAAAAAAAcQ4AAAAAAAABAAAAIHAOAAAAAAAAcA4AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYOAAAAAAAAdg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2139,
							2,
							"left_delete",
							null,
							"AgAAAG8OAAAAAAAAbw4AAAAAAAABAAAAIG4OAAAAAAAAbg4AAAAAAAABAAAACg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAOAAAAAAAAcA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2142,
							1,
							"insert",
							{
								"characters": "\nif"
							},
							"BQAAALoNAAAAAAAAuw0AAAAAAAAAAAAAuw0AAAAAAADBDQAAAAAAAAAAAADBDQAAAAAAAMINAAAAAAAAAAAAAMINAAAAAAAAww0AAAAAAAAAAAAAww0AAAAAAADEDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoNAAAAAAAAug0AAAAAAAAAAAAAAADwvw"
						],
						[
							2143,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAMQNAAAAAAAAxg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQNAAAAAAAAxA0AAAAAAAAAAAAAAADwvw"
						],
						[
							2144,
							1,
							"insert",
							{
								"characters": "grid"
							},
							"BAAAAMUNAAAAAAAAxg0AAAAAAAAAAAAAxg0AAAAAAADHDQAAAAAAAAAAAADHDQAAAAAAAMgNAAAAAAAAAAAAAMgNAAAAAAAAyQ0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUNAAAAAAAAxQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							2145,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAMkNAAAAAAAAyw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkNAAAAAAAAyQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							2146,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAAMoNAAAAAAAAyw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoNAAAAAAAAyg0AAAAAAAAAAAAAAADwvw"
						],
						[
							2148,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAMwNAAAAAAAAzg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwNAAAAAAAAzA0AAAAAAAAAAAAAAADwvw"
						],
						[
							2149,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAM0NAAAAAAAAzg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0NAAAAAAAAzQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							2151,
							1,
							"insert",
							{
								"characters": " =="
							},
							"AwAAAM8NAAAAAAAA0A0AAAAAAAAAAAAA0A0AAAAAAADRDQAAAAAAAAAAAADRDQAAAAAAANINAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8NAAAAAAAAzw0AAAAAAAAAAAAAAADwvw"
						],
						[
							2152,
							1,
							"insert",
							{
								"characters": " null"
							},
							"BQAAANINAAAAAAAA0w0AAAAAAAAAAAAA0w0AAAAAAADUDQAAAAAAAAAAAADUDQAAAAAAANUNAAAAAAAAAAAAANUNAAAAAAAA1g0AAAAAAAAAAAAA1g0AAAAAAADXDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANINAAAAAAAA0g0AAAAAAAAAAAAAAADwvw"
						],
						[
							2154,
							1,
							"insert",
							{
								"characters": " cib="
							},
							"BQAAANgNAAAAAAAA2Q0AAAAAAAAAAAAA2Q0AAAAAAADaDQAAAAAAAAAAAADaDQAAAAAAANsNAAAAAAAAAAAAANsNAAAAAAAA3A0AAAAAAAAAAAAA3A0AAAAAAADdDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgNAAAAAAAA2A0AAAAAAAAAAAAAAADwvw"
						],
						[
							2155,
							3,
							"left_delete",
							null,
							"AwAAANwNAAAAAAAA3A0AAAAAAAABAAAAPdsNAAAAAAAA2w0AAAAAAAABAAAAYtoNAAAAAAAA2g0AAAAAAAABAAAAaQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0NAAAAAAAA3Q0AAAAAAAAAAAAAAADwvw"
						],
						[
							2156,
							1,
							"insert",
							{
								"characters": "ontnue"
							},
							"BgAAANoNAAAAAAAA2w0AAAAAAAAAAAAA2w0AAAAAAADcDQAAAAAAAAAAAADcDQAAAAAAAN0NAAAAAAAAAAAAAN0NAAAAAAAA3g0AAAAAAAAAAAAA3g0AAAAAAADfDQAAAAAAAAAAAADfDQAAAAAAAOANAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoNAAAAAAAA2g0AAAAAAAAAAAAAAADwvw"
						],
						[
							2157,
							2,
							"left_delete",
							null,
							"AgAAAN8NAAAAAAAA3w0AAAAAAAABAAAAZd4NAAAAAAAA3g0AAAAAAAABAAAAdQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOANAAAAAAAA4A0AAAAAAAAAAAAAAADwvw"
						],
						[
							2158,
							1,
							"insert_completion",
							{
								"completion": "continue",
								"format": "text",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "continue"
							},
							"AgAAANkNAAAAAAAA2Q0AAAAAAAAFAAAAY29udG7ZDQAAAAAAAOENAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4NAAAAAAAA3g0AAAAAAAAAAAAAAADwvw"
						],
						[
							2159,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAOENAAAAAAAA4g0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOENAAAAAAAA4Q0AAAAAAAAAAAAAAADwvw"
						],
						[
							2166,
							1,
							"right_delete",
							null,
							"AQAAAPINAAAAAAAA8g0AAAAAAAAVAAAAZ3JpZFtpXVtqXSAhPSBudWxsICYm",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPINAAAAAAAABw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2167,
							2,
							"left_delete",
							null,
							"AgAAAPENAAAAAAAA8Q0AAAAAAAABAAAAKPANAAAAAAAA8A0AAAAAAAABAAAAZg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPINAAAAAAAA8g0AAAAAAAAAAAAAAADwvw"
						],
						[
							2168,
							1,
							"insert",
							{
								"characters": "f"
							},
							"AQAAAPANAAAAAAAA8Q0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPANAAAAAAAA8A0AAAAAAAAAAAAAAADwvw"
						],
						[
							2169,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAPENAAAAAAAA8w0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPENAAAAAAAA8Q0AAAAAAAAAAAAAAADwvw"
						],
						[
							2170,
							2,
							"right_delete",
							null,
							"AgAAAPINAAAAAAAA8g0AAAAAAAABAAAAKfINAAAAAAAA8g0AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPINAAAAAAAA8g0AAAAAAAAAAAAAAADwvw"
						],
						[
							2411,
							1,
							"insert",
							{
								"characters": "\nString"
							},
							"CAAAAGoNAAAAAAAAaw0AAAAAAAAAAAAAaw0AAAAAAABwDQAAAAAAAAAAAABwDQAAAAAAAHENAAAAAAAAAAAAAHENAAAAAAAAcg0AAAAAAAAAAAAAcg0AAAAAAABzDQAAAAAAAAAAAABzDQAAAAAAAHQNAAAAAAAAAAAAAHQNAAAAAAAAdQ0AAAAAAAAAAAAAdQ0AAAAAAAB2DQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoNAAAAAAAAag0AAAAAAAAAAAAAAADwvw"
						],
						[
							2412,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAHYNAAAAAAAAdw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYNAAAAAAAAdg0AAAAAAAAAAAAAAADwvw"
						],
						[
							2413,
							1,
							"left_delete",
							null,
							"AQAAAHYNAAAAAAAAdg0AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHcNAAAAAAAAdw0AAAAAAAAAAAAAAADwvw"
						],
						[
							2414,
							1,
							"insert",
							{
								"characters": "Bu"
							},
							"AgAAAHYNAAAAAAAAdw0AAAAAAAAAAAAAdw0AAAAAAAB4DQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYNAAAAAAAAdg0AAAAAAAAAAAAAAADwvw"
						],
						[
							2415,
							1,
							"insert_completion",
							{
								"completion": "StringBuilder",
								"format": "text",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "StringBuilder"
							},
							"AgAAAHANAAAAAAAAcA0AAAAAAAAIAAAAU3RyaW5nQnVwDQAAAAAAAH0NAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgNAAAAAAAAeA0AAAAAAAAAAAAAAADwvw"
						],
						[
							2416,
							1,
							"insert",
							{
								"characters": " sb"
							},
							"AwAAAH0NAAAAAAAAfg0AAAAAAAAAAAAAfg0AAAAAAAB/DQAAAAAAAAAAAAB/DQAAAAAAAIANAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH0NAAAAAAAAfQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							2417,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAAIANAAAAAAAAgQ0AAAAAAAAAAAAAgQ0AAAAAAACCDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIANAAAAAAAAgA0AAAAAAAAAAAAAAADwvw"
						],
						[
							2418,
							1,
							"insert",
							{
								"characters": " new"
							},
							"BAAAAIINAAAAAAAAgw0AAAAAAAAAAAAAgw0AAAAAAACEDQAAAAAAAAAAAACEDQAAAAAAAIUNAAAAAAAAAAAAAIUNAAAAAAAAhg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIINAAAAAAAAgg0AAAAAAAAAAAAAAADwvw"
						],
						[
							2419,
							1,
							"insert",
							{
								"characters": " String"
							},
							"BwAAAIYNAAAAAAAAhw0AAAAAAAAAAAAAhw0AAAAAAACIDQAAAAAAAAAAAACIDQAAAAAAAIkNAAAAAAAAAAAAAIkNAAAAAAAAig0AAAAAAAAAAAAAig0AAAAAAACLDQAAAAAAAAAAAACLDQAAAAAAAIwNAAAAAAAAAAAAAIwNAAAAAAAAjQ0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYNAAAAAAAAhg0AAAAAAAAAAAAAAADwvw"
						],
						[
							2420,
							1,
							"insert_completion",
							{
								"completion": "StringBuilder",
								"format": "text",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "StringBuilder"
							},
							"AgAAAIcNAAAAAAAAhw0AAAAAAAAGAAAAU3RyaW5nhw0AAAAAAACUDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0NAAAAAAAAjQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							2421,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAJQNAAAAAAAAlg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQNAAAAAAAAlA0AAAAAAAAAAAAAAADwvw"
						],
						[
							2423,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAJYNAAAAAAAAlw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYNAAAAAAAAlg0AAAAAAAAAAAAAAADwvw"
						],
						[
							2428,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAADoOAAAAAAAAPQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYOAAAAAAAAVg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2431,
							1,
							"insert",
							{
								"characters": "\nsb."
							},
							"BwAAADEOAAAAAAAAMg4AAAAAAAAAAAAAMg4AAAAAAAA5DgAAAAAAAAAAAAAyDgAAAAAAADIOAAAAAAAABwAAACAgICAJCQkyDgAAAAAAADoOAAAAAAAAAAAAADoOAAAAAAAAOw4AAAAAAAAAAAAAOw4AAAAAAAA8DgAAAAAAAAAAAAA8DgAAAAAAAD0OAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEOAAAAAAAAMQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2432,
							1,
							"insert_completion",
							{
								"completion": "append",
								"format": "text",
								"keep_prefix": false,
								"must_insert": true,
								"trigger": "append"
							},
							"AQAAAD0OAAAAAAAAQw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0OAAAAAAAAPQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2433,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAEMOAAAAAAAARQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMOAAAAAAAAQw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2434,
							1,
							"insert",
							{
								"characters": "grid"
							},
							"BAAAAEQOAAAAAAAARQ4AAAAAAAAAAAAARQ4AAAAAAABGDgAAAAAAAAAAAABGDgAAAAAAAEcOAAAAAAAAAAAAAEcOAAAAAAAASA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQOAAAAAAAARA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2435,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAEgOAAAAAAAASg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgOAAAAAAAASA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2436,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAAEkOAAAAAAAASg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkOAAAAAAAASQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2438,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAEsOAAAAAAAATQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsOAAAAAAAASw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2439,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAEwOAAAAAAAATQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwOAAAAAAAATA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2441,
							1,
							"insert",
							{
								"characters": " +"
							},
							"AgAAAE4OAAAAAAAATw4AAAAAAAAAAAAATw4AAAAAAABQDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4OAAAAAAAATg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2442,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAFAOAAAAAAAAUQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAOAAAAAAAAUA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2443,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAFEOAAAAAAAAUw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEOAAAAAAAAUQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2444,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAFIOAAAAAAAAUw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFIOAAAAAAAAUg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2455,
							1,
							"toggle_comment",
							{
								"block": false
							},
							"AQAAAL4OAAAAAAAAwQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQOAAAAAAAA1A4AAAAAAAAAAAAAAADwvw"
						],
						[
							2458,
							1,
							"insert",
							{
								"characters": "\nsb."
							},
							"BwAAALUOAAAAAAAAtg4AAAAAAAAAAAAAtg4AAAAAAAC9DgAAAAAAAAAAAAC2DgAAAAAAALYOAAAAAAAABwAAACAgICAJCQm2DgAAAAAAAL4OAAAAAAAAAAAAAL4OAAAAAAAAvw4AAAAAAAAAAAAAvw4AAAAAAADADgAAAAAAAAAAAADADgAAAAAAAMEOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUOAAAAAAAAtQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2459,
							1,
							"insert_completion",
							{
								"completion": "append",
								"format": "text",
								"keep_prefix": false,
								"must_insert": true,
								"trigger": "append"
							},
							"AQAAAMEOAAAAAAAAxw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEOAAAAAAAAwQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2460,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAMcOAAAAAAAAyQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcOAAAAAAAAxw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2461,
							1,
							"paste",
							null,
							"AQAAAMgOAAAAAAAA0g4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgOAAAAAAAAyA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2463,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAANMOAAAAAAAA1A4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMOAAAAAAAA0w4AAAAAAAAAAAAAAADwvw"
						],
						[
							2468,
							1,
							"right_delete",
							null,
							"AQAAAP8OAAAAAAAA/w4AAAAAAAAWAAAAICAgIAkJb3V0LnByaW50KCJcbiIpOw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUPAAAAAAAA/w4AAAAAAAAAAAAAAADwvw"
						],
						[
							2469,
							1,
							"left_delete",
							null,
							"AQAAAP4OAAAAAAAA/g4AAAAAAAABAAAACg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8OAAAAAAAA/w4AAAAAAAAAAAAAAADwvw"
						],
						[
							2472,
							1,
							"insert",
							{
								"characters": "\nop"
							},
							"BAAAAAUPAAAAAAAABg8AAAAAAAAAAAAABg8AAAAAAAALDwAAAAAAAAAAAAALDwAAAAAAAAwPAAAAAAAAAAAAAAwPAAAAAAAADQ8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUPAAAAAAAABQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							2473,
							1,
							"insert_completion",
							{
								"completion": "out.print(  + \"\\n\");",
								"format": "snippet",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "op"
							},
							"AgAAAAsPAAAAAAAACw8AAAAAAAACAAAAb3ALDwAAAAAAAB8PAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0PAAAAAAAADQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							2476,
							1,
							"insert",
							{
								"characters": "sb"
							},
							"AgAAABYPAAAAAAAAFw8AAAAAAAAAAAAAFw8AAAAAAAAYDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYPAAAAAAAAFg8AAAAAAAAAAAAAAADwvw"
						],
						[
							2478,
							6,
							"right_delete",
							null,
							"BgAAABkPAAAAAAAAGQ8AAAAAAAABAAAAKxkPAAAAAAAAGQ8AAAAAAAABAAAAIBkPAAAAAAAAGQ8AAAAAAAABAAAAIhkPAAAAAAAAGQ8AAAAAAAABAAAAXBkPAAAAAAAAGQ8AAAAAAAABAAAAbhkPAAAAAAAAGQ8AAAAAAAABAAAAIg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkPAAAAAAAAGQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							2479,
							1,
							"left_delete",
							null,
							"AQAAABgPAAAAAAAAGA8AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkPAAAAAAAAGQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							2481,
							1,
							"left_delete",
							null,
							"AQAAABUPAAAAAAAAFQ8AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYPAAAAAAAAFg8AAAAAAAAAAAAAAADwvw"
						],
						[
							2486,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAFUOAAAAAAAAVg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUOAAAAAAAAVQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2491,
							1,
							"insert",
							{
								"characters": " +"
							},
							"AgAAANMOAAAAAAAA1A4AAAAAAAAAAAAA1A4AAAAAAADVDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANMOAAAAAAAA0w4AAAAAAAAAAAAAAADwvw"
						],
						[
							2492,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAANUOAAAAAAAA1g4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANUOAAAAAAAA1Q4AAAAAAAAAAAAAAADwvw"
						],
						[
							2493,
							1,
							"insert_snippet",
							{
								"contents": "'$0'"
							},
							"AQAAANYOAAAAAAAA2A4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYOAAAAAAAA1g4AAAAAAAAAAAAAAADwvw"
						],
						[
							2494,
							1,
							"insert",
							{
								"characters": "\\n"
							},
							"AgAAANcOAAAAAAAA2A4AAAAAAAAAAAAA2A4AAAAAAADZDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcOAAAAAAAA1w4AAAAAAAAAAAAAAADwvw"
						],
						[
							2505,
							1,
							"left_delete",
							null,
							"AQAAANYOAAAAAAAA1g4AAAAAAAABAAAAJw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcOAAAAAAAA1w4AAAAAAAAAAAAAAADwvw"
						],
						[
							2506,
							1,
							"insert",
							{
								"characters": "\""
							},
							"AQAAANYOAAAAAAAA1w4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYOAAAAAAAA1g4AAAAAAAAAAAAAAADwvw"
						],
						[
							2508,
							1,
							"left_delete",
							null,
							"AQAAANkOAAAAAAAA2Q4AAAAAAAABAAAAJw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANoOAAAAAAAA2g4AAAAAAAAAAAAAAADwvw"
						],
						[
							2509,
							1,
							"insert",
							{
								"characters": "\""
							},
							"AQAAANkOAAAAAAAA2g4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkOAAAAAAAA2Q4AAAAAAAAAAAAAAADwvw"
						],
						[
							2515,
							1,
							"insert",
							{
								"characters": " &&"
							},
							"AwAAALUOAAAAAAAAtg4AAAAAAAAAAAAAtg4AAAAAAAC3DgAAAAAAAAAAAAC3DgAAAAAAALgOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUOAAAAAAAAtQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2516,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAALgOAAAAAAAAuQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgOAAAAAAAAuA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2521,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAB8OAAAAAAAAIA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8OAAAAAAAAHw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2522,
							1,
							"insert",
							{
								"characters": " ."
							},
							"AgAAACAOAAAAAAAAIQ4AAAAAAAAAAAAAIQ4AAAAAAAAiDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACAOAAAAAAAAIA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2523,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAACIOAAAAAAAAIw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIOAAAAAAAAIg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2524,
							2,
							"left_delete",
							null,
							"AgAAACIOAAAAAAAAIg4AAAAAAAABAAAAICEOAAAAAAAAIQ4AAAAAAAABAAAALg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMOAAAAAAAAIw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2525,
							1,
							"insert",
							{
								"characters": ">"
							},
							"AQAAACEOAAAAAAAAIg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEOAAAAAAAAIQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2526,
							1,
							"insert",
							{
								"characters": " n"
							},
							"AgAAACIOAAAAAAAAIw4AAAAAAAAAAAAAIw4AAAAAAAAkDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIOAAAAAAAAIg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2527,
							1,
							"insert",
							{
								"characters": " &&"
							},
							"AwAAACQOAAAAAAAAJQ4AAAAAAAAAAAAAJQ4AAAAAAAAmDgAAAAAAAAAAAAAmDgAAAAAAACcOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQOAAAAAAAAJA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2528,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAACcOAAAAAAAAKA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcOAAAAAAAAJw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2530,
							1,
							"left_delete",
							null,
							"AQAAACEOAAAAAAAAIQ4AAAAAAAABAAAAPg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIOAAAAAAAAIg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2531,
							1,
							"insert",
							{
								"characters": "<"
							},
							"AQAAACEOAAAAAAAAIg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEOAAAAAAAAIQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2538,
							21,
							"left_delete",
							null,
							"FQAAAKwOAAAAAAAArA4AAAAAAAABAAAAIKsOAAAAAAAAqw4AAAAAAAABAAAAJqoOAAAAAAAAqg4AAAAAAAABAAAAJqkOAAAAAAAAqQ4AAAAAAAABAAAAIKgOAAAAAAAAqA4AAAAAAAABAAAAbKcOAAAAAAAApw4AAAAAAAABAAAAbKYOAAAAAAAApg4AAAAAAAABAAAAdaUOAAAAAAAApQ4AAAAAAAABAAAAbqQOAAAAAAAApA4AAAAAAAABAAAAPaMOAAAAAAAAow4AAAAAAAABAAAAIaIOAAAAAAAAog4AAAAAAAABAAAAIKEOAAAAAAAAoQ4AAAAAAAABAAAAXaAOAAAAAAAAoA4AAAAAAAABAAAAap8OAAAAAAAAnw4AAAAAAAABAAAAW54OAAAAAAAAng4AAAAAAAABAAAAXZ0OAAAAAAAAnQ4AAAAAAAABAAAAaZwOAAAAAAAAnA4AAAAAAAABAAAAW5sOAAAAAAAAmw4AAAAAAAABAAAAZJoOAAAAAAAAmg4AAAAAAAABAAAAaZkOAAAAAAAAmQ4AAAAAAAABAAAAcpgOAAAAAAAAmA4AAAAAAAABAAAAZw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0OAAAAAAAArQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2539,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAJgOAAAAAAAAmQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgOAAAAAAAAmA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2540,
							1,
							"insert",
							{
								"characters": " >"
							},
							"AgAAAJkOAAAAAAAAmg4AAAAAAAAAAAAAmg4AAAAAAACbDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkOAAAAAAAAmQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2541,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAJsOAAAAAAAAnA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsOAAAAAAAAmw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2542,
							1,
							"left_delete",
							null,
							"AQAAAJsOAAAAAAAAmw4AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwOAAAAAAAAnA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2543,
							1,
							"insert",
							{
								"characters": "="
							},
							"AQAAAJsOAAAAAAAAnA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsOAAAAAAAAmw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2544,
							1,
							"insert",
							{
								"characters": " n"
							},
							"AgAAAJwOAAAAAAAAnQ4AAAAAAAAAAAAAnQ4AAAAAAACeDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwOAAAAAAAAnA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2545,
							1,
							"insert",
							{
								"characters": " &&"
							},
							"AwAAAJ4OAAAAAAAAnw4AAAAAAAAAAAAAnw4AAAAAAACgDgAAAAAAAAAAAACgDgAAAAAAAKEOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ4OAAAAAAAAng4AAAAAAAAAAAAAAADwvw"
						],
						[
							2546,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAKEOAAAAAAAAog4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKEOAAAAAAAAoQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2554,
							1,
							"right_delete",
							null,
							"AQAAALQOAAAAAAAAtA4AAAAAAAADAAAAJiYg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQOAAAAAAAAtw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2555,
							1,
							"left_delete",
							null,
							"AQAAALMOAAAAAAAAsw4AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQOAAAAAAAAtA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2564,
							1,
							"right_delete",
							null,
							"AQAAACUOAAAAAAAAJQ4AAAAAAAAUAAAAJiYgZ3JpZFtpXVtqXSAhPSAiMCI",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUOAAAAAAAAOQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2565,
							1,
							"left_delete",
							null,
							"AQAAACQOAAAAAAAAJA4AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUOAAAAAAAAJQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2577,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"BAAAAMUOAAAAAAAAxg4AAAAAAAAAAAAAxg4AAAAAAADODgAAAAAAAAAAAADGDgAAAAAAAMYOAAAAAAAACAAAACAgICAJCQkJxg4AAAAAAADNDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMUOAAAAAAAAxQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2583,
							1,
							"paste",
							null,
							"AQAAAM0OAAAAAAAAGA8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0OAAAAAAAAzQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2586,
							1,
							"left_delete",
							null,
							"AQAAAJgOAAAAAAAAmA4AAAAAAAABAAAAPQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkOAAAAAAAAmQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2587,
							1,
							"insert",
							{
								"characters": "!"
							},
							"AQAAAJgOAAAAAAAAmQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgOAAAAAAAAmA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2592,
							1,
							"right_delete",
							null,
							"AQAAAMAOAAAAAAAAwA4AAAAAAAACAAAAXG4",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAOAAAAAAAAwg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2593,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAMAOAAAAAAAAwQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAOAAAAAAAAwA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2614,
							1,
							"right_delete",
							null,
							"AQAAAA4PAAAAAAAADg8AAAAAAAADAAAAICsg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4PAAAAAAAAEQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							2615,
							1,
							"insert",
							{
								"characters": ");"
							},
							"AgAAAA4PAAAAAAAADw8AAAAAAAAAAAAADw8AAAAAAAAQDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4PAAAAAAAADg8AAAAAAAAAAAAAAADwvw"
						],
						[
							2616,
							1,
							"insert",
							{
								"characters": "("
							},
							"AQAAABAPAAAAAAAAEQ8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAPAAAAAAAAEA8AAAAAAAAAAAAAAADwvw"
						],
						[
							2618,
							1,
							"insert",
							{
								"characters": "sb.apped"
							},
							"CAAAABAPAAAAAAAAEQ8AAAAAAAAAAAAAEQ8AAAAAAAASDwAAAAAAAAAAAAASDwAAAAAAABMPAAAAAAAAAAAAABMPAAAAAAAAFA8AAAAAAAAAAAAAFA8AAAAAAAAVDwAAAAAAAAAAAAAVDwAAAAAAABYPAAAAAAAAAAAAABYPAAAAAAAAFw8AAAAAAAAAAAAAFw8AAAAAAAAYDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAPAAAAAAAAEA8AAAAAAAAAAAAAAADwvw"
						],
						[
							2619,
							1,
							"insert_completion",
							{
								"completion": "append",
								"format": "text",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "append"
							},
							"AgAAABMPAAAAAAAAEw8AAAAAAAAFAAAAYXBwZWQTDwAAAAAAABkPAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgPAAAAAAAAGA8AAAAAAAAAAAAAAADwvw"
						],
						[
							2622,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAPEOAAAAAAAA8g4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPEOAAAAAAAA8Q4AAAAAAAAAAAAAAADwvw"
						],
						[
							2623,
							1,
							"insert_snippet",
							{
								"contents": "{$0}"
							},
							"AQAAAPIOAAAAAAAA9A4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIOAAAAAAAA8g4AAAAAAAAAAAAAAADwvw"
						],
						[
							2624,
							1,
							"right_delete",
							null,
							"AQAAAPMOAAAAAAAA8w4AAAAAAAABAAAAfQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPMOAAAAAAAA8w4AAAAAAAAAAAAAAADwvw"
						],
						[
							2628,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AQAAAEUPAAAAAAAARg8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUPAAAAAAAARQ8AAAAAAAAAAAAAAAAAAA"
						],
						[
							2630,
							1,
							"insert",
							{
								"characters": "}"
							},
							"AQAAAEUPAAAAAAAARg8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUPAAAAAAAARQ8AAAAAAAAAAAAAAAAAAA"
						],
						[
							2632,
							1,
							"insert",
							{
								"characters": "\t\t\t\t\t"
							},
							"BQAAAEUPAAAAAAAARg8AAAAAAAAAAAAARg8AAAAAAABHDwAAAAAAAAAAAABHDwAAAAAAAEgPAAAAAAAAAAAAAEgPAAAAAAAASQ8AAAAAAAAAAAAASQ8AAAAAAABKDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUPAAAAAAAARQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							2633,
							1,
							"unindent",
							null,
							"AQAAAEUPAAAAAAAARQ8AAAAAAAABAAAACQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoPAAAAAAAASg8AAAAAAAAAAAAAAADwvw"
						],
						[
							2650,
							1,
							"right_delete",
							null,
							"AQAAAO8NAAAAAAAA7w0AAAAAAABbAQAAaWYoZ3JpZFtpXVtqXSA9PSBudWxsKSBjb250aW51ZTsKICAgIAkJCWVsc2UgaWYoaiA8IG4pCiAgICAJCQkJc2IuYXBwZW5kKGdyaWRbaV1bal0gKyAiICIpOwogICAgCQkJCS8vIG91dC5wcmludChncmlkW2ldW2pdICsgIiAiKTsKICAgIAkJCWVsc2UgaWYgKGogPj0gbiAmJiBncmlkW2ldW2pdICE9ICIwIikKICAgIAkJCQlzYi5hcHBlbmQoZ3JpZFtpXVtqXSArICIgIik7CiAgICAJCQllbHNlIGlmIChqID49IG4gJiYgZ3JpZFtpXVtqXSA9PSAiMCIpIHsKICAgIAkJCQlzYi5hcHBlbmQoZ3JpZFtpXVtqXSk7c2IuYXBwZW5kKCJcbiIpOwogICAgCQkJCS8vIG91dC5wcmludChncmlkW2ldW2pdKTsKCQkJCX0",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoPAAAAAAAA7w0AAAAAAAAAAAAAAADwvw"
						],
						[
							2655,
							1,
							"insert",
							{
								"characters": "if"
							},
							"AgAAAO8NAAAAAAAA8A0AAAAAAAAAAAAA8A0AAAAAAADxDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8NAAAAAAAA7w0AAAAAAAAAAAAAAADwvw"
						],
						[
							2656,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAPENAAAAAAAA8w0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPENAAAAAAAA8Q0AAAAAAAAAAAAAAADwvw"
						],
						[
							2657,
							1,
							"insert",
							{
								"characters": "grid"
							},
							"BAAAAPINAAAAAAAA8w0AAAAAAAAAAAAA8w0AAAAAAAD0DQAAAAAAAAAAAAD0DQAAAAAAAPUNAAAAAAAAAAAAAPUNAAAAAAAA9g0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPINAAAAAAAA8g0AAAAAAAAAAAAAAADwvw"
						],
						[
							2658,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAPYNAAAAAAAA+A0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYNAAAAAAAA9g0AAAAAAAAAAAAAAADwvw"
						],
						[
							2659,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAAPcNAAAAAAAA+A0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcNAAAAAAAA9w0AAAAAAAAAAAAAAADwvw"
						],
						[
							2661,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAPkNAAAAAAAA+w0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkNAAAAAAAA+Q0AAAAAAAAAAAAAAADwvw"
						],
						[
							2662,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAPoNAAAAAAAA+w0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoNAAAAAAAA+g0AAAAAAAAAAAAAAADwvw"
						],
						[
							2665,
							1,
							"insert",
							{
								"characters": " =="
							},
							"AwAAAPwNAAAAAAAA/Q0AAAAAAAAAAAAA/Q0AAAAAAAD+DQAAAAAAAAAAAAD+DQAAAAAAAP8NAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPwNAAAAAAAA/A0AAAAAAAAAAAAAAADwvw"
						],
						[
							2666,
							1,
							"insert",
							{
								"characters": " null"
							},
							"BQAAAP8NAAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAABDgAAAAAAAAAAAAABDgAAAAAAAAIOAAAAAAAAAAAAAAIOAAAAAAAAAw4AAAAAAAAAAAAAAw4AAAAAAAAEDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8NAAAAAAAA/w0AAAAAAAAAAAAAAADwvw"
						],
						[
							2668,
							1,
							"insert",
							{
								"characters": " brea;"
							},
							"BgAAAAUOAAAAAAAABg4AAAAAAAAAAAAABg4AAAAAAAAHDgAAAAAAAAAAAAAHDgAAAAAAAAgOAAAAAAAAAAAAAAgOAAAAAAAACQ4AAAAAAAAAAAAACQ4AAAAAAAAKDgAAAAAAAAAAAAAKDgAAAAAAAAsOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUOAAAAAAAABQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2669,
							1,
							"left_delete",
							null,
							"AQAAAAoOAAAAAAAACg4AAAAAAAABAAAAOw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsOAAAAAAAACw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2670,
							1,
							"insert",
							{
								"characters": "k'"
							},
							"AgAAAAoOAAAAAAAACw4AAAAAAAAAAAAACw4AAAAAAAAMDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoOAAAAAAAACg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2671,
							1,
							"left_delete",
							null,
							"AQAAAAsOAAAAAAAACw4AAAAAAAABAAAAJw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwOAAAAAAAADA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2672,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAAsOAAAAAAAADA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsOAAAAAAAACw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2673,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAAwOAAAAAAAADQ4AAAAAAAAAAAAADQ4AAAAAAAAUDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAwOAAAAAAAADA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2674,
							1,
							"insert",
							{
								"characters": "else"
							},
							"BAAAABQOAAAAAAAAFQ4AAAAAAAAAAAAAFQ4AAAAAAAAWDgAAAAAAAAAAAAAWDgAAAAAAABcOAAAAAAAAAAAAABcOAAAAAAAAGA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQOAAAAAAAAFA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2675,
							1,
							"insert",
							{
								"characters": " if"
							},
							"AwAAABgOAAAAAAAAGQ4AAAAAAAAAAAAAGQ4AAAAAAAAaDgAAAAAAAAAAAAAaDgAAAAAAABsOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgOAAAAAAAAGA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2676,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAABsOAAAAAAAAHQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsOAAAAAAAAGw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2677,
							1,
							"insert",
							{
								"characters": "grid"
							},
							"BAAAABwOAAAAAAAAHQ4AAAAAAAAAAAAAHQ4AAAAAAAAeDgAAAAAAAAAAAAAeDgAAAAAAAB8OAAAAAAAAAAAAAB8OAAAAAAAAIA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwOAAAAAAAAHA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2678,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAACAOAAAAAAAAIg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACAOAAAAAAAAIA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2679,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAACEOAAAAAAAAIg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEOAAAAAAAAIQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2680,
							1,
							"left_delete",
							null,
							"AQAAACEOAAAAAAAAIQ4AAAAAAAABAAAAaQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIOAAAAAAAAIg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2681,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Delete Left Right.sublime-macro"
							},
							"AgAAACAOAAAAAAAAIA4AAAAAAAABAAAAWyAOAAAAAAAAIA4AAAAAAAABAAAAXQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEOAAAAAAAAIQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2682,
							4,
							"left_delete",
							null,
							"BAAAAB8OAAAAAAAAHw4AAAAAAAABAAAAZB4OAAAAAAAAHg4AAAAAAAABAAAAaR0OAAAAAAAAHQ4AAAAAAAABAAAAchwOAAAAAAAAHA4AAAAAAAABAAAAZw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACAOAAAAAAAAIA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2683,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAABwOAAAAAAAAHQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwOAAAAAAAAHA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2684,
							1,
							"insert",
							{
								"characters": " <"
							},
							"AgAAAB0OAAAAAAAAHg4AAAAAAAAAAAAAHg4AAAAAAAAfDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0OAAAAAAAAHQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2685,
							1,
							"insert",
							{
								"characters": " n"
							},
							"AgAAAB8OAAAAAAAAIA4AAAAAAAAAAAAAIA4AAAAAAAAhDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8OAAAAAAAAHw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2687,
							1,
							"insert",
							{
								"characters": " sv"
							},
							"AwAAACIOAAAAAAAAIw4AAAAAAAAAAAAAIw4AAAAAAAAkDgAAAAAAAAAAAAAkDgAAAAAAACUOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIOAAAAAAAAIg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2688,
							1,
							"left_delete",
							null,
							"AQAAACQOAAAAAAAAJA4AAAAAAAABAAAAdg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUOAAAAAAAAJQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2689,
							1,
							"insert",
							{
								"characters": "b.append"
							},
							"CAAAACQOAAAAAAAAJQ4AAAAAAAAAAAAAJQ4AAAAAAAAmDgAAAAAAAAAAAAAmDgAAAAAAACcOAAAAAAAAAAAAACcOAAAAAAAAKA4AAAAAAAAAAAAAKA4AAAAAAAApDgAAAAAAAAAAAAApDgAAAAAAACoOAAAAAAAAAAAAACoOAAAAAAAAKw4AAAAAAAAAAAAAKw4AAAAAAAAsDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQOAAAAAAAAJA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2690,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAACwOAAAAAAAALg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwOAAAAAAAALA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2691,
							1,
							"insert",
							{
								"characters": "grid"
							},
							"BAAAAC0OAAAAAAAALg4AAAAAAAAAAAAALg4AAAAAAAAvDgAAAAAAAAAAAAAvDgAAAAAAADAOAAAAAAAAAAAAADAOAAAAAAAAMQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0OAAAAAAAALQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2692,
							4,
							"left_delete",
							null,
							"BAAAADAOAAAAAAAAMA4AAAAAAAABAAAAZC8OAAAAAAAALw4AAAAAAAABAAAAaS4OAAAAAAAALg4AAAAAAAABAAAAci0OAAAAAAAALQ4AAAAAAAABAAAAZw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEOAAAAAAAAMQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2693,
							1,
							"insert",
							{
								"characters": "grid"
							},
							"BAAAAC0OAAAAAAAALg4AAAAAAAAAAAAALg4AAAAAAAAvDgAAAAAAAAAAAAAvDgAAAAAAADAOAAAAAAAAAAAAADAOAAAAAAAAMQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0OAAAAAAAALQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2694,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAADEOAAAAAAAAMw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEOAAAAAAAAMQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2695,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAADIOAAAAAAAAMw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADIOAAAAAAAAMg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2697,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAADQOAAAAAAAANg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQOAAAAAAAANA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2698,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAADUOAAAAAAAANg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUOAAAAAAAANQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2701,
							1,
							"insert",
							{
								"characters": " +"
							},
							"AgAAADcOAAAAAAAAOA4AAAAAAAAAAAAAOA4AAAAAAAA5DgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcOAAAAAAAANw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2702,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAADkOAAAAAAAAOg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkOAAAAAAAAOQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2703,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAADoOAAAAAAAAPA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoOAAAAAAAAOg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2704,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAADsOAAAAAAAAPA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsOAAAAAAAAOw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2706,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAD4OAAAAAAAAPw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4OAAAAAAAAPg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2708,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"BAAAACMOAAAAAAAAJA4AAAAAAAAAAAAAJA4AAAAAAAArDgAAAAAAAAAAAAAkDgAAAAAAACQOAAAAAAAABwAAACAgICAJCQkkDgAAAAAAACwOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMOAAAAAAAAIw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2712,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"BAAAAAYOAAAAAAAABw4AAAAAAAAAAAAABw4AAAAAAAAODgAAAAAAAAAAAAAHDgAAAAAAAAcOAAAAAAAABwAAACAgICAJCQkHDgAAAAAAAA8OAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYOAAAAAAAABg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2715,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAFgOAAAAAAAAWQ4AAAAAAAAAAAAAWQ4AAAAAAABfDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgOAAAAAAAAWA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2717,
							1,
							"insert",
							{
								"characters": "\telse"
							},
							"BQAAAFgOAAAAAAAAWQ4AAAAAAAAAAAAAWQ4AAAAAAABaDgAAAAAAAAAAAABaDgAAAAAAAFsOAAAAAAAAAAAAAFsOAAAAAAAAXA4AAAAAAAAAAAAAXA4AAAAAAABdDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgOAAAAAAAAWA4AAAAAAAAAAAAAAEBmQA"
						],
						[
							2718,
							1,
							"insert",
							{
								"characters": " if"
							},
							"AwAAAF0OAAAAAAAAXg4AAAAAAAAAAAAAXg4AAAAAAABfDgAAAAAAAAAAAABfDgAAAAAAAGAOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0OAAAAAAAAXQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2719,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAGAOAAAAAAAAYg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAOAAAAAAAAYA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2720,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAGEOAAAAAAAAYg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEOAAAAAAAAYQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2721,
							1,
							"insert",
							{
								"characters": " >"
							},
							"AgAAAGIOAAAAAAAAYw4AAAAAAAAAAAAAYw4AAAAAAABkDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIOAAAAAAAAYg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2722,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAGQOAAAAAAAAZQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQOAAAAAAAAZA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2723,
							1,
							"left_delete",
							null,
							"AQAAAGQOAAAAAAAAZA4AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUOAAAAAAAAZQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2724,
							1,
							"insert",
							{
								"characters": "="
							},
							"AQAAAGQOAAAAAAAAZQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGQOAAAAAAAAZA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2725,
							1,
							"insert",
							{
								"characters": " n"
							},
							"AgAAAGUOAAAAAAAAZg4AAAAAAAAAAAAAZg4AAAAAAABnDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUOAAAAAAAAZQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2726,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAGcOAAAAAAAAaA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcOAAAAAAAAZw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2733,
							1,
							"left_delete",
							null,
							"AQAAAGcOAAAAAAAAZw4AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgOAAAAAAAAaA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2752,
							1,
							"wrap_block",
							{
								"begin": "{",
								"end": "}"
							},
							"AgAAAAYOAAAAAAAABw4AAAAAAAAAAAAAFw4AAAAAAAAgDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYOAAAAAAAABg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2753,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AwAAAAcOAAAAAAAACA4AAAAAAAAAAAAACA4AAAAAAAAPDgAAAAAAAAAAAAAPDgAAAAAAABAOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcOAAAAAAAABw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2754,
							1,
							"insert",
							{
								"characters": "sv."
							},
							"AwAAABAOAAAAAAAAEQ4AAAAAAAAAAAAAEQ4AAAAAAAASDgAAAAAAAAAAAAASDgAAAAAAABMOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAOAAAAAAAAEA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2755,
							2,
							"left_delete",
							null,
							"AgAAABIOAAAAAAAAEg4AAAAAAAABAAAALhEOAAAAAAAAEQ4AAAAAAAABAAAAdg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMOAAAAAAAAEw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2756,
							1,
							"insert",
							{
								"characters": "b.appe"
							},
							"BgAAABEOAAAAAAAAEg4AAAAAAAAAAAAAEg4AAAAAAAATDgAAAAAAAAAAAAATDgAAAAAAABQOAAAAAAAAAAAAABQOAAAAAAAAFQ4AAAAAAAAAAAAAFQ4AAAAAAAAWDgAAAAAAAAAAAAAWDgAAAAAAABcOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABEOAAAAAAAAEQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2757,
							1,
							"insert",
							{
								"characters": "nd"
							},
							"AgAAABcOAAAAAAAAGA4AAAAAAAAAAAAAGA4AAAAAAAAZDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcOAAAAAAAAFw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2758,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAABkOAAAAAAAAGw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkOAAAAAAAAGQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2759,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAABoOAAAAAAAAHA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoOAAAAAAAAGg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2760,
							1,
							"insert",
							{
								"characters": "\\n"
							},
							"AgAAABsOAAAAAAAAHA4AAAAAAAAAAAAAHA4AAAAAAAAdDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABsOAAAAAAAAGw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2768,
							1,
							"right_delete",
							null,
							"AQAAAD8OAAAAAAAAPw4AAAAAAABLAAAAZWxzZSBpZihqIDwgbikgCiAgICAJCQkJc2IuYXBwZW5kKGdyaWRbaV1bal0gKyAiICIpOwogICAgCQkJZWxzZSBpZihqID49IG4p",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIoOAAAAAAAAPw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2771,
							1,
							"insert",
							{
								"characters": "esle"
							},
							"BAAAAD8OAAAAAAAAQA4AAAAAAAAAAAAAQA4AAAAAAABBDgAAAAAAAAAAAABBDgAAAAAAAEIOAAAAAAAAAAAAAEIOAAAAAAAAQw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8OAAAAAAAAPw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2772,
							1,
							"insert",
							{
								"characters": " if"
							},
							"AwAAAEMOAAAAAAAARA4AAAAAAAAAAAAARA4AAAAAAABFDgAAAAAAAAAAAABFDgAAAAAAAEYOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMOAAAAAAAAQw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2773,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAEYOAAAAAAAASA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYOAAAAAAAARg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2774,
							1,
							"insert",
							{
								"characters": "grid"
							},
							"BAAAAEcOAAAAAAAASA4AAAAAAAAAAAAASA4AAAAAAABJDgAAAAAAAAAAAABJDgAAAAAAAEoOAAAAAAAAAAAAAEoOAAAAAAAASw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcOAAAAAAAARw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2775,
							4,
							"left_delete",
							null,
							"BAAAAEoOAAAAAAAASg4AAAAAAAABAAAAZEkOAAAAAAAASQ4AAAAAAAABAAAAaUgOAAAAAAAASA4AAAAAAAABAAAAckcOAAAAAAAARw4AAAAAAAABAAAAZw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsOAAAAAAAASw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2776,
							1,
							"insert",
							{
								"characters": "grid"
							},
							"BAAAAEcOAAAAAAAASA4AAAAAAAAAAAAASA4AAAAAAABJDgAAAAAAAAAAAABJDgAAAAAAAEoOAAAAAAAAAAAAAEoOAAAAAAAASw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcOAAAAAAAARw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2777,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAEsOAAAAAAAATQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsOAAAAAAAASw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2778,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAAEwOAAAAAAAATQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwOAAAAAAAATA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2780,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAE4OAAAAAAAAUA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4OAAAAAAAATg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2781,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAE8OAAAAAAAAUA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8OAAAAAAAATw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2790,
							1,
							"insert",
							{
								"characters": "esle"
							},
							"BQAAAD8OAAAAAAAAQA4AAAAAAAAAAAAAQA4AAAAAAABADgAAAAAAAAQAAABlc2xlQA4AAAAAAABBDgAAAAAAAAAAAABBDgAAAAAAAEIOAAAAAAAAAAAAAEIOAAAAAAAAQw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8OAAAAAAAAQw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2791,
							3,
							"left_delete",
							null,
							"AwAAAEIOAAAAAAAAQg4AAAAAAAABAAAAZUEOAAAAAAAAQQ4AAAAAAAABAAAAbEAOAAAAAAAAQA4AAAAAAAABAAAAcw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMOAAAAAAAAQw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2792,
							1,
							"insert",
							{
								"characters": "lse"
							},
							"AwAAAEAOAAAAAAAAQQ4AAAAAAAAAAAAAQQ4AAAAAAABCDgAAAAAAAAAAAABCDgAAAAAAAEMOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAOAAAAAAAAQA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2807,
							1,
							"right_delete",
							null,
							"AQAAAEcOAAAAAAAARw4AAAAAAAAKAAAAZ3JpZFtpXVtqXQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcOAAAAAAAAUQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2808,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAEcOAAAAAAAASA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcOAAAAAAAARw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2809,
							1,
							"insert",
							{
								"characters": " <"
							},
							"AgAAAEgOAAAAAAAASQ4AAAAAAAAAAAAASQ4AAAAAAABKDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgOAAAAAAAASA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2810,
							1,
							"insert",
							{
								"characters": " nb"
							},
							"AwAAAEoOAAAAAAAASw4AAAAAAAAAAAAASw4AAAAAAABMDgAAAAAAAAAAAABMDgAAAAAAAE0OAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoOAAAAAAAASg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2811,
							1,
							"left_delete",
							null,
							"AQAAAEwOAAAAAAAATA4AAAAAAAABAAAAYg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0OAAAAAAAATQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2813,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAE0OAAAAAAAATg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0OAAAAAAAATQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2814,
							1,
							"insert_snippet",
							{
								"contents": "{$0}"
							},
							"AQAAAE4OAAAAAAAAUA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4OAAAAAAAATg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2815,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
							},
							"BgAAAE8OAAAAAAAAUA4AAAAAAAAAAAAAUA4AAAAAAABXDgAAAAAAAAAAAABXDgAAAAAAAFgOAAAAAAAAAAAAAFgOAAAAAAAAXw4AAAAAAAAAAAAAUA4AAAAAAABQDgAAAAAAAAcAAAAgICAgCQkJUA4AAAAAAABYDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8OAAAAAAAATw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2816,
							1,
							"insert",
							{
								"characters": "sb.append"
							},
							"CQAAAFgOAAAAAAAAWQ4AAAAAAAAAAAAAWQ4AAAAAAABaDgAAAAAAAAAAAABaDgAAAAAAAFsOAAAAAAAAAAAAAFsOAAAAAAAAXA4AAAAAAAAAAAAAXA4AAAAAAABdDgAAAAAAAAAAAABdDgAAAAAAAF4OAAAAAAAAAAAAAF4OAAAAAAAAXw4AAAAAAAAAAAAAXw4AAAAAAABgDgAAAAAAAAAAAABgDgAAAAAAAGEOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgOAAAAAAAAWA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2817,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAGEOAAAAAAAAYw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEOAAAAAAAAYQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2818,
							1,
							"insert",
							{
								"characters": "grid"
							},
							"BAAAAGIOAAAAAAAAYw4AAAAAAAAAAAAAYw4AAAAAAABkDgAAAAAAAAAAAABkDgAAAAAAAGUOAAAAAAAAAAAAAGUOAAAAAAAAZg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIOAAAAAAAAYg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2819,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAGYOAAAAAAAAaA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYOAAAAAAAAZg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2820,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAAGcOAAAAAAAAaA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcOAAAAAAAAZw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2822,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAGkOAAAAAAAAaw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGkOAAAAAAAAaQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2823,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAGoOAAAAAAAAaw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoOAAAAAAAAag4AAAAAAAAAAAAAAADwvw"
						],
						[
							2825,
							1,
							"insert",
							{
								"characters": " +"
							},
							"AgAAAGwOAAAAAAAAbQ4AAAAAAAAAAAAAbQ4AAAAAAABuDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGwOAAAAAAAAbA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2826,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAG4OAAAAAAAAbw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4OAAAAAAAAbg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2827,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAG8OAAAAAAAAcQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8OAAAAAAAAbw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2828,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAHAOAAAAAAAAcQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAOAAAAAAAAcA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2830,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAHMOAAAAAAAAdA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMOAAAAAAAAcw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2832,
							1,
							"insert",
							{
								"characters": "\nelse"
							},
							"BgAAAH0OAAAAAAAAfg4AAAAAAAAAAAAAfg4AAAAAAACFDgAAAAAAAAAAAACFDgAAAAAAAIYOAAAAAAAAAAAAAIYOAAAAAAAAhw4AAAAAAAAAAAAAhw4AAAAAAACIDgAAAAAAAAAAAACIDgAAAAAAAIkOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH0OAAAAAAAAfQ4AAAAAAAAAAAAAAEiGQA"
						],
						[
							2833,
							1,
							"insert",
							{
								"characters": " if*"
							},
							"BAAAAIkOAAAAAAAAig4AAAAAAAAAAAAAig4AAAAAAACLDgAAAAAAAAAAAACLDgAAAAAAAIwOAAAAAAAAAAAAAIwOAAAAAAAAjQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIkOAAAAAAAAiQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2834,
							1,
							"left_delete",
							null,
							"AQAAAIwOAAAAAAAAjA4AAAAAAAABAAAAKg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0OAAAAAAAAjQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2835,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAIwOAAAAAAAAjg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwOAAAAAAAAjA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2836,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAI0OAAAAAAAAjg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0OAAAAAAAAjQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2837,
							1,
							"insert",
							{
								"characters": " >"
							},
							"AgAAAI4OAAAAAAAAjw4AAAAAAAAAAAAAjw4AAAAAAACQDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4OAAAAAAAAjg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2838,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAJAOAAAAAAAAkQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJAOAAAAAAAAkA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2839,
							1,
							"left_delete",
							null,
							"AQAAAJAOAAAAAAAAkA4AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJEOAAAAAAAAkQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2840,
							1,
							"insert",
							{
								"characters": "="
							},
							"AQAAAJAOAAAAAAAAkQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJAOAAAAAAAAkA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2841,
							1,
							"insert",
							{
								"characters": " n"
							},
							"AgAAAJEOAAAAAAAAkg4AAAAAAAAAAAAAkg4AAAAAAACTDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJEOAAAAAAAAkQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2847,
							1,
							"insert",
							{
								"characters": " &&"
							},
							"AwAAAJMOAAAAAAAAlA4AAAAAAAAAAAAAlA4AAAAAAACVDgAAAAAAAAAAAACVDgAAAAAAAJYOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJMOAAAAAAAAkw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2848,
							1,
							"insert",
							{
								"characters": " grid"
							},
							"BQAAAJYOAAAAAAAAlw4AAAAAAAAAAAAAlw4AAAAAAACYDgAAAAAAAAAAAACYDgAAAAAAAJkOAAAAAAAAAAAAAJkOAAAAAAAAmg4AAAAAAAAAAAAAmg4AAAAAAACbDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYOAAAAAAAAlg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2849,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAJsOAAAAAAAAnQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsOAAAAAAAAmw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2850,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAAJwOAAAAAAAAnQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwOAAAAAAAAnA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2852,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAJ4OAAAAAAAAoA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ4OAAAAAAAAng4AAAAAAAAAAAAAAADwvw"
						],
						[
							2853,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAJ8OAAAAAAAAoA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8OAAAAAAAAnw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2855,
							1,
							"insert",
							{
								"characters": " !="
							},
							"AwAAAKEOAAAAAAAAog4AAAAAAAAAAAAAog4AAAAAAACjDgAAAAAAAAAAAACjDgAAAAAAAKQOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKEOAAAAAAAAoQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2856,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAKQOAAAAAAAApQ4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKQOAAAAAAAApA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2857,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAKUOAAAAAAAApw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUOAAAAAAAApQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2858,
							1,
							"insert",
							{
								"characters": "0"
							},
							"AQAAAKYOAAAAAAAApw4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKYOAAAAAAAApg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2860,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAKkOAAAAAAAAqg4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkOAAAAAAAAqQ4AAAAAAAAAAAAAAADwvw"
						],
						[
							2861,
							1,
							"insert_snippet",
							{
								"contents": "{$0}"
							},
							"AQAAAKoOAAAAAAAArA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKoOAAAAAAAAqg4AAAAAAAAAAAAAAADwvw"
						],
						[
							2862,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
							},
							"BgAAAKsOAAAAAAAArA4AAAAAAAAAAAAArA4AAAAAAACzDgAAAAAAAAAAAACzDgAAAAAAALQOAAAAAAAAAAAAALQOAAAAAAAAuw4AAAAAAAAAAAAArA4AAAAAAACsDgAAAAAAAAcAAAAgICAgCQkJrA4AAAAAAAC0DgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsOAAAAAAAAqw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2868,
							1,
							"paste",
							null,
							"AQAAALQOAAAAAAAA0A4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALQOAAAAAAAAtA4AAAAAAAAAAAAAAADwvw"
						],
						[
							2872,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAANkOAAAAAAAA2g4AAAAAAAAAAAAA2g4AAAAAAADhDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANkOAAAAAAAA2Q4AAAAAAAAAAAAAAADwvw"
						],
						[
							2873,
							1,
							"insert",
							{
								"characters": "else"
							},
							"BAAAAOEOAAAAAAAA4g4AAAAAAAAAAAAA4g4AAAAAAADjDgAAAAAAAAAAAADjDgAAAAAAAOQOAAAAAAAAAAAAAOQOAAAAAAAA5Q4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEOAAAAAAAA4Q4AAAAAAAAAAAAAAADwvw"
						],
						[
							2874,
							1,
							"insert",
							{
								"characters": " if"
							},
							"AwAAAOUOAAAAAAAA5g4AAAAAAAAAAAAA5g4AAAAAAADnDgAAAAAAAAAAAADnDgAAAAAAAOgOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOUOAAAAAAAA5Q4AAAAAAAAAAAAAAADwvw"
						],
						[
							2875,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAOgOAAAAAAAA6g4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgOAAAAAAAA6A4AAAAAAAAAAAAAAADwvw"
						],
						[
							2876,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAOkOAAAAAAAA6g4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkOAAAAAAAA6Q4AAAAAAAAAAAAAAADwvw"
						],
						[
							2877,
							1,
							"insert",
							{
								"characters": " >="
							},
							"AwAAAOoOAAAAAAAA6w4AAAAAAAAAAAAA6w4AAAAAAADsDgAAAAAAAAAAAADsDgAAAAAAAO0OAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOoOAAAAAAAA6g4AAAAAAAAAAAAAAADwvw"
						],
						[
							2878,
							1,
							"insert",
							{
								"characters": " n"
							},
							"AgAAAO0OAAAAAAAA7g4AAAAAAAAAAAAA7g4AAAAAAADvDgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO0OAAAAAAAA7Q4AAAAAAAAAAAAAAADwvw"
						],
						[
							2879,
							1,
							"insert",
							{
								"characters": " &&"
							},
							"AwAAAO8OAAAAAAAA8A4AAAAAAAAAAAAA8A4AAAAAAADxDgAAAAAAAAAAAADxDgAAAAAAAPIOAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8OAAAAAAAA7w4AAAAAAAAAAAAAAADwvw"
						],
						[
							2880,
							1,
							"insert",
							{
								"characters": " grid"
							},
							"BQAAAPIOAAAAAAAA8w4AAAAAAAAAAAAA8w4AAAAAAAD0DgAAAAAAAAAAAAD0DgAAAAAAAPUOAAAAAAAAAAAAAPUOAAAAAAAA9g4AAAAAAAAAAAAA9g4AAAAAAAD3DgAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIOAAAAAAAA8g4AAAAAAAAAAAAAAADwvw"
						],
						[
							2881,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAPcOAAAAAAAA+Q4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcOAAAAAAAA9w4AAAAAAAAAAAAAAADwvw"
						],
						[
							2882,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAAPgOAAAAAAAA+Q4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgOAAAAAAAA+A4AAAAAAAAAAAAAAADwvw"
						],
						[
							2884,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAPoOAAAAAAAA/A4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoOAAAAAAAA+g4AAAAAAAAAAAAAAADwvw"
						],
						[
							2885,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAPsOAAAAAAAA/A4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPsOAAAAAAAA+w4AAAAAAAAAAAAAAADwvw"
						],
						[
							2887,
							1,
							"insert",
							{
								"characters": " =="
							},
							"AwAAAP0OAAAAAAAA/g4AAAAAAAAAAAAA/g4AAAAAAAD/DgAAAAAAAAAAAAD/DgAAAAAAAAAPAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP0OAAAAAAAA/Q4AAAAAAAAAAAAAAADwvw"
						],
						[
							2888,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAAAPAAAAAAAAAQ8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAPAAAAAAAAAA8AAAAAAAAAAAAAAADwvw"
						],
						[
							2889,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAAEPAAAAAAAAAw8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEPAAAAAAAAAQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							2890,
							1,
							"insert",
							{
								"characters": "0"
							},
							"AQAAAAIPAAAAAAAAAw8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAIPAAAAAAAAAg8AAAAAAAAAAAAAAADwvw"
						],
						[
							2892,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAAUPAAAAAAAABg8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAUPAAAAAAAABQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							2893,
							1,
							"insert_snippet",
							{
								"contents": "{$0}"
							},
							"AQAAAAYPAAAAAAAACA8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYPAAAAAAAABg8AAAAAAAAAAAAAAADwvw"
						],
						[
							2894,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
							},
							"BgAAAAcPAAAAAAAACA8AAAAAAAAAAAAACA8AAAAAAAAPDwAAAAAAAAAAAAAPDwAAAAAAABAPAAAAAAAAAAAAABAPAAAAAAAAFw8AAAAAAAAAAAAACA8AAAAAAAAIDwAAAAAAAAcAAAAgICAgCQkJCA8AAAAAAAAQDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcPAAAAAAAABw8AAAAAAAAAAAAAAADwvw"
						],
						[
							2895,
							1,
							"insert",
							{
								"characters": "sb.appe"
							},
							"BwAAABAPAAAAAAAAEQ8AAAAAAAAAAAAAEQ8AAAAAAAASDwAAAAAAAAAAAAASDwAAAAAAABMPAAAAAAAAAAAAABMPAAAAAAAAFA8AAAAAAAAAAAAAFA8AAAAAAAAVDwAAAAAAAAAAAAAVDwAAAAAAABYPAAAAAAAAAAAAABYPAAAAAAAAFw8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABAPAAAAAAAAEA8AAAAAAAAAAAAAAADwvw"
						],
						[
							2896,
							1,
							"insert",
							{
								"characters": "nd"
							},
							"AgAAABcPAAAAAAAAGA8AAAAAAAAAAAAAGA8AAAAAAAAZDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcPAAAAAAAAFw8AAAAAAAAAAAAAAADwvw"
						],
						[
							2897,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAABkPAAAAAAAAGw8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABkPAAAAAAAAGQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							2898,
							1,
							"insert",
							{
								"characters": "grid"
							},
							"BAAAABoPAAAAAAAAGw8AAAAAAAAAAAAAGw8AAAAAAAAcDwAAAAAAAAAAAAAcDwAAAAAAAB0PAAAAAAAAAAAAAB0PAAAAAAAAHg8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABoPAAAAAAAAGg8AAAAAAAAAAAAAAADwvw"
						],
						[
							2899,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAAB4PAAAAAAAAIA8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4PAAAAAAAAHg8AAAAAAAAAAAAAAADwvw"
						],
						[
							2900,
							1,
							"insert",
							{
								"characters": "i"
							},
							"AQAAAB8PAAAAAAAAIA8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8PAAAAAAAAHw8AAAAAAAAAAAAAAADwvw"
						],
						[
							2902,
							1,
							"insert_snippet",
							{
								"contents": "[$0]"
							},
							"AQAAACEPAAAAAAAAIw8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEPAAAAAAAAIQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							2903,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAACIPAAAAAAAAIw8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIPAAAAAAAAIg8AAAAAAAAAAAAAAADwvw"
						],
						[
							2905,
							1,
							"insert",
							{
								"characters": " +"
							},
							"AgAAACQPAAAAAAAAJQ8AAAAAAAAAAAAAJQ8AAAAAAAAmDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQPAAAAAAAAJA8AAAAAAAAAAAAAAADwvw"
						],
						[
							2906,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAACYPAAAAAAAAJw8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYPAAAAAAAAJg8AAAAAAAAAAAAAAADwvw"
						],
						[
							2907,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAACcPAAAAAAAAKQ8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcPAAAAAAAAJw8AAAAAAAAAAAAAAADwvw"
						],
						[
							2908,
							1,
							"insert",
							{
								"characters": "\\n"
							},
							"AgAAACgPAAAAAAAAKQ8AAAAAAAAAAAAAKQ8AAAAAAAAqDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgPAAAAAAAAKA8AAAAAAAAAAAAAAADwvw"
						],
						[
							2910,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAACwPAAAAAAAALQ8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwPAAAAAAAALA8AAAAAAAAAAAAAAADwvw"
						],
						[
							2913,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAB8OAAAAAAAAIA4AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8OAAAAAAAAHw4AAAAAAAAAAAAAAADwvw"
						],
						[
							2918,
							1,
							"insert",
							{
								"characters": "\nif"
							},
							"BAAAADcPAAAAAAAAOA8AAAAAAAAAAAAAOA8AAAAAAAA/DwAAAAAAAAAAAAA/DwAAAAAAAEAPAAAAAAAAAAAAAEAPAAAAAAAAQQ8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcPAAAAAAAANw8AAAAAAAAAAAAAAADwvw"
						],
						[
							2919,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAEEPAAAAAAAAQw8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEPAAAAAAAAQQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							2920,
							1,
							"insert",
							{
								"characters": "j"
							},
							"AQAAAEIPAAAAAAAAQw8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIPAAAAAAAAQg8AAAAAAAAAAAAAAADwvw"
						],
						[
							2921,
							1,
							"insert",
							{
								"characters": " =="
							},
							"AwAAAEMPAAAAAAAARA8AAAAAAAAAAAAARA8AAAAAAABFDwAAAAAAAAAAAABFDwAAAAAAAEYPAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMPAAAAAAAAQw8AAAAAAAAAAAAAAADwvw"
						],
						[
							2922,
							1,
							"insert",
							{
								"characters": " 2"
							},
							"AgAAAEYPAAAAAAAARw8AAAAAAAAAAAAARw8AAAAAAABIDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYPAAAAAAAARg8AAAAAAAAAAAAAAADwvw"
						],
						[
							2923,
							1,
							"insert",
							{
								"characters": " *"
							},
							"AgAAAEgPAAAAAAAASQ8AAAAAAAAAAAAASQ8AAAAAAABKDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgPAAAAAAAASA8AAAAAAAAAAAAAAADwvw"
						],
						[
							2924,
							1,
							"insert",
							{
								"characters": " b"
							},
							"AgAAAEoPAAAAAAAASw8AAAAAAAAAAAAASw8AAAAAAABMDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoPAAAAAAAASg8AAAAAAAAAAAAAAADwvw"
						],
						[
							2925,
							1,
							"left_delete",
							null,
							"AQAAAEsPAAAAAAAASw8AAAAAAAABAAAAYg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwPAAAAAAAATA8AAAAAAAAAAAAAAADwvw"
						],
						[
							2926,
							1,
							"insert",
							{
								"characters": "n"
							},
							"AQAAAEsPAAAAAAAATA8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsPAAAAAAAASw8AAAAAAAAAAAAAAADwvw"
						],
						[
							2928,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAE0PAAAAAAAATg8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0PAAAAAAAATQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							2929,
							1,
							"insert_snippet",
							{
								"contents": "{$0}"
							},
							"AQAAAE4PAAAAAAAAUA8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4PAAAAAAAATg8AAAAAAAAAAAAAAADwvw"
						],
						[
							2930,
							1,
							"run_macro_file",
							{
								"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
							},
							"BgAAAE8PAAAAAAAAUA8AAAAAAAAAAAAAUA8AAAAAAABXDwAAAAAAAAAAAABXDwAAAAAAAFgPAAAAAAAAAAAAAFgPAAAAAAAAXw8AAAAAAAAAAAAAUA8AAAAAAABQDwAAAAAAAAcAAAAgICAgCQkJUA8AAAAAAABYDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8PAAAAAAAATw8AAAAAAAAAAAAAAADwvw"
						],
						[
							2931,
							1,
							"insert",
							{
								"characters": "sv."
							},
							"AwAAAFgPAAAAAAAAWQ8AAAAAAAAAAAAAWQ8AAAAAAABaDwAAAAAAAAAAAABaDwAAAAAAAFsPAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgPAAAAAAAAWA8AAAAAAAAAAAAAAADwvw"
						],
						[
							2932,
							2,
							"left_delete",
							null,
							"AgAAAFoPAAAAAAAAWg8AAAAAAAABAAAALlkPAAAAAAAAWQ8AAAAAAAABAAAAdg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFsPAAAAAAAAWw8AAAAAAAAAAAAAAADwvw"
						],
						[
							2933,
							1,
							"insert",
							{
								"characters": "b.appedn"
							},
							"CAAAAFkPAAAAAAAAWg8AAAAAAAAAAAAAWg8AAAAAAABbDwAAAAAAAAAAAABbDwAAAAAAAFwPAAAAAAAAAAAAAFwPAAAAAAAAXQ8AAAAAAAAAAAAAXQ8AAAAAAABeDwAAAAAAAAAAAABeDwAAAAAAAF8PAAAAAAAAAAAAAF8PAAAAAAAAYA8AAAAAAAAAAAAAYA8AAAAAAABhDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkPAAAAAAAAWQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							2934,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAGEPAAAAAAAAYw8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEPAAAAAAAAYQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							2935,
							1,
							"insert_snippet",
							{
								"contents": "\"$0\""
							},
							"AQAAAGIPAAAAAAAAZA8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIPAAAAAAAAYg8AAAAAAAAAAAAAAADwvw"
						],
						[
							2936,
							1,
							"insert",
							{
								"characters": "\\n"
							},
							"AgAAAGMPAAAAAAAAZA8AAAAAAAAAAAAAZA8AAAAAAABlDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMPAAAAAAAAYw8AAAAAAAAAAAAAAADwvw"
						],
						[
							2938,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAGcPAAAAAAAAaA8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcPAAAAAAAAZw8AAAAAAAAAAAAAAADwvw"
						],
						[
							2943,
							1,
							"insert",
							{
								"characters": "appe"
							},
							"BQAAAFsPAAAAAAAAXA8AAAAAAAAAAAAAXA8AAAAAAABcDwAAAAAAAAYAAABhcHBlZG5cDwAAAAAAAF0PAAAAAAAAAAAAAF0PAAAAAAAAXg8AAAAAAAAAAAAAXg8AAAAAAABfDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFsPAAAAAAAAYQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							2944,
							1,
							"insert_completion",
							{
								"completion": "append",
								"format": "text",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "append"
							},
							"AgAAAFsPAAAAAAAAWw8AAAAAAAAEAAAAYXBwZVsPAAAAAAAAYQ8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8PAAAAAAAAXw8AAAAAAAAAAAAAAADwvw"
						],
						[
							3062,
							1,
							"insert",
							{
								"characters": "\nString"
							},
							"CAAAAGoNAAAAAAAAaw0AAAAAAAAAAAAAaw0AAAAAAABwDQAAAAAAAAAAAABwDQAAAAAAAHENAAAAAAAAAAAAAHENAAAAAAAAcg0AAAAAAAAAAAAAcg0AAAAAAABzDQAAAAAAAAAAAABzDQAAAAAAAHQNAAAAAAAAAAAAAHQNAAAAAAAAdQ0AAAAAAAAAAAAAdQ0AAAAAAAB2DQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoNAAAAAAAAag0AAAAAAAAAAAAAAADwvw"
						],
						[
							3063,
							1,
							"insert",
							{
								"characters": "Builder"
							},
							"BwAAAHYNAAAAAAAAdw0AAAAAAAAAAAAAdw0AAAAAAAB4DQAAAAAAAAAAAAB4DQAAAAAAAHkNAAAAAAAAAAAAAHkNAAAAAAAAeg0AAAAAAAAAAAAAeg0AAAAAAAB7DQAAAAAAAAAAAAB7DQAAAAAAAHwNAAAAAAAAAAAAAHwNAAAAAAAAfQ0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYNAAAAAAAAdg0AAAAAAAAAAAAAAADwvw"
						],
						[
							3064,
							1,
							"insert",
							{
								"characters": " fb"
							},
							"AwAAAH0NAAAAAAAAfg0AAAAAAAAAAAAAfg0AAAAAAAB/DQAAAAAAAAAAAAB/DQAAAAAAAIANAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH0NAAAAAAAAfQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							3065,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAAIANAAAAAAAAgQ0AAAAAAAAAAAAAgQ0AAAAAAACCDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIANAAAAAAAAgA0AAAAAAAAAAAAAAADwvw"
						],
						[
							3066,
							1,
							"insert",
							{
								"characters": " new"
							},
							"BAAAAIINAAAAAAAAgw0AAAAAAAAAAAAAgw0AAAAAAACEDQAAAAAAAAAAAACEDQAAAAAAAIUNAAAAAAAAAAAAAIUNAAAAAAAAhg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIINAAAAAAAAgg0AAAAAAAAAAAAAAADwvw"
						],
						[
							3067,
							1,
							"insert",
							{
								"characters": " String"
							},
							"BwAAAIYNAAAAAAAAhw0AAAAAAAAAAAAAhw0AAAAAAACIDQAAAAAAAAAAAACIDQAAAAAAAIkNAAAAAAAAAAAAAIkNAAAAAAAAig0AAAAAAAAAAAAAig0AAAAAAACLDQAAAAAAAAAAAACLDQAAAAAAAIwNAAAAAAAAAAAAAIwNAAAAAAAAjQ0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYNAAAAAAAAhg0AAAAAAAAAAAAAAADwvw"
						],
						[
							3068,
							1,
							"insert_completion",
							{
								"completion": "StringBuilder",
								"format": "text",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "StringBuilder"
							},
							"AgAAAIcNAAAAAAAAhw0AAAAAAAAGAAAAU3RyaW5nhw0AAAAAAACUDQAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0NAAAAAAAAjQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							3069,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAJQNAAAAAAAAlQ0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQNAAAAAAAAlA0AAAAAAAAAAAAAAADwvw"
						],
						[
							3070,
							1,
							"left_delete",
							null,
							"AQAAAJQNAAAAAAAAlA0AAAAAAAABAAAAOw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUNAAAAAAAAlQ0AAAAAAAAAAAAAAADwvw"
						],
						[
							3071,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAJQNAAAAAAAAlg0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQNAAAAAAAAlA0AAAAAAAAAAAAAAADwvw"
						],
						[
							3073,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAJYNAAAAAAAAlw0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYNAAAAAAAAlg0AAAAAAAAAAAAAAADwvw"
						],
						[
							3078,
							1,
							"swap_line_down",
							null,
							"AgAAAOwNAAAAAAAAGQ4AAAAAAAAAAAAAmA0AAAAAAACYDQAAAAAAAC0AAAAgICAgCVN0cmluZ0J1aWxkZXIgc2IgPSBuZXcgU3RyaW5nQnVpbGRlcigpOwo",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQNAAAAAAAAxA0AAAAAAAAAAAAAAADwvw"
						],
						[
							3081,
							1,
							"insert",
							{
								"characters": "\t"
							},
							"AQAAAMQNAAAAAAAAxQ0AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQNAAAAAAAAxA0AAAAAAAAAAAAAAADwvw"
						],
						[
							3087,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AgAAAKcPAAAAAAAAqA8AAAAAAAAAAAAAqA8AAAAAAACuDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcPAAAAAAAApw8AAAAAAAAAAAAAAADwvw"
						],
						[
							3090,
							1,
							"insert",
							{
								"characters": "\nsb"
							},
							"BQAAAKcPAAAAAAAAqA8AAAAAAAAAAAAAqA8AAAAAAACuDwAAAAAAAAAAAACvDwAAAAAAAK8PAAAAAAAABgAAACAgICAJCa4PAAAAAAAArw8AAAAAAAAAAAAArw8AAAAAAACwDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcPAAAAAAAApw8AAAAAAAAAAAAAAADwvw"
						],
						[
							3091,
							2,
							"left_delete",
							null,
							"AgAAAK8PAAAAAAAArw8AAAAAAAABAAAAYq4PAAAAAAAArg8AAAAAAAABAAAAcw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALAPAAAAAAAAsA8AAAAAAAAAAAAAAADwvw"
						],
						[
							3094,
							1,
							"insert",
							{
								"characters": "\nsb.dele"
							},
							"CgAAAKcPAAAAAAAAqA8AAAAAAAAAAAAAqA8AAAAAAACuDwAAAAAAAAAAAACvDwAAAAAAAK8PAAAAAAAABgAAACAgICAJCa4PAAAAAAAArw8AAAAAAAAAAAAArw8AAAAAAACwDwAAAAAAAAAAAACwDwAAAAAAALEPAAAAAAAAAAAAALEPAAAAAAAAsg8AAAAAAAAAAAAAsg8AAAAAAACzDwAAAAAAAAAAAACzDwAAAAAAALQPAAAAAAAAAAAAALQPAAAAAAAAtQ8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcPAAAAAAAApw8AAAAAAAAAAAAAAADwvw"
						],
						[
							3095,
							1,
							"insert",
							{
								"characters": "teCharAt"
							},
							"CAAAALUPAAAAAAAAtg8AAAAAAAAAAAAAtg8AAAAAAAC3DwAAAAAAAAAAAAC3DwAAAAAAALgPAAAAAAAAAAAAALgPAAAAAAAAuQ8AAAAAAAAAAAAAuQ8AAAAAAAC6DwAAAAAAAAAAAAC6DwAAAAAAALsPAAAAAAAAAAAAALsPAAAAAAAAvA8AAAAAAAAAAAAAvA8AAAAAAAC9DwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUPAAAAAAAAtQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							3096,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAL0PAAAAAAAAvw8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0PAAAAAAAAvQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							3097,
							1,
							"insert",
							{
								"characters": "sv"
							},
							"AgAAAL4PAAAAAAAAvw8AAAAAAAAAAAAAvw8AAAAAAADADwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4PAAAAAAAAvg8AAAAAAAAAAAAAAADwvw"
						],
						[
							3098,
							1,
							"left_delete",
							null,
							"AQAAAL8PAAAAAAAAvw8AAAAAAAABAAAAdg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAPAAAAAAAAwA8AAAAAAAAAAAAAAADwvw"
						],
						[
							3099,
							1,
							"insert",
							{
								"characters": "b.length"
							},
							"CAAAAL8PAAAAAAAAwA8AAAAAAAAAAAAAwA8AAAAAAADBDwAAAAAAAAAAAADBDwAAAAAAAMIPAAAAAAAAAAAAAMIPAAAAAAAAww8AAAAAAAAAAAAAww8AAAAAAADEDwAAAAAAAAAAAADEDwAAAAAAAMUPAAAAAAAAAAAAAMUPAAAAAAAAxg8AAAAAAAAAAAAAxg8AAAAAAADHDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8PAAAAAAAAvw8AAAAAAAAAAAAAAADwvw"
						],
						[
							3100,
							1,
							"insert",
							{
								"characters": "  "
							},
							"AgAAAMcPAAAAAAAAyA8AAAAAAAAAAAAAyA8AAAAAAADJDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcPAAAAAAAAxw8AAAAAAAAAAAAAAADwvw"
						],
						[
							3101,
							1,
							"left_delete",
							null,
							"AQAAAMgPAAAAAAAAyA8AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkPAAAAAAAAyQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							3102,
							1,
							"insert",
							{
								"characters": "-"
							},
							"AQAAAMgPAAAAAAAAyQ8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgPAAAAAAAAyA8AAAAAAAAAAAAAAADwvw"
						],
						[
							3103,
							1,
							"insert",
							{
								"characters": " 1"
							},
							"AgAAAMkPAAAAAAAAyg8AAAAAAAAAAAAAyg8AAAAAAADLDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkPAAAAAAAAyQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							3105,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAMwPAAAAAAAAzQ8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwPAAAAAAAAzA8AAAAAAAAAAAAAAADwvw"
						],
						[
							3108,
							1,
							"left_delete",
							null,
							"AQAAAM4PAAAAAAAAzg8AAAAAAAABAAAACg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8PAAAAAAAAzw8AAAAAAAAAAAAAAPCDQA"
						],
						[
							3109,
							1,
							"reindent",
							null,
							"AQAAAM4PAAAAAAAA1A8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4PAAAAAAAAzg8AAAAAAAAAAAAAAADwvw"
						],
						[
							3110,
							1,
							"insert",
							{
								"characters": "fb.a"
							},
							"BAAAANQPAAAAAAAA1Q8AAAAAAAAAAAAA1Q8AAAAAAADWDwAAAAAAAAAAAADWDwAAAAAAANcPAAAAAAAAAAAAANcPAAAAAAAA2A8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQPAAAAAAAA1A8AAAAAAAAAAAAAAADwvw"
						],
						[
							3112,
							1,
							"insert_completion",
							{
								"completion": "append",
								"format": "text",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "append"
							},
							"AgAAANcPAAAAAAAA1w8AAAAAAAABAAAAYdcPAAAAAAAA3Q8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgPAAAAAAAA2A8AAAAAAAAAAAAAAADwvw"
						],
						[
							3113,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAN0PAAAAAAAA3w8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0PAAAAAAAA3Q8AAAAAAAAAAAAAAADwvw"
						],
						[
							3114,
							1,
							"insert",
							{
								"characters": "sb"
							},
							"AgAAAN4PAAAAAAAA3w8AAAAAAAAAAAAA3w8AAAAAAADgDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN4PAAAAAAAA3g8AAAAAAAAAAAAAAADwvw"
						],
						[
							3116,
							1,
							"insert",
							{
								"characters": ";"
							},
							"AQAAAOEPAAAAAAAA4g8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEPAAAAAAAA4Q8AAAAAAAAAAAAAAADwvw"
						],
						[
							3126,
							1,
							"paste",
							null,
							"AgAAAPkPAAAAAAAA+w8AAAAAAAAAAAAA+w8AAAAAAAD7DwAAAAAAAAIAAABzYg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPkPAAAAAAAA+w8AAAAAAAAAAAAAAADwvw"
						],
						[
							3131,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAAMcPAAAAAAAAyQ8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcPAAAAAAAAxw8AAAAAAAAAAAAAAADwvw"
						],
						[
							3135,
							1,
							"insert",
							{
								"characters": " ="
							},
							"AgAAAOIPAAAAAAAA4w8AAAAAAAAAAAAA4w8AAAAAAADkDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIPAAAAAAAA4g8AAAAAAAAAAAAAAADwvw"
						],
						[
							3136,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAOQPAAAAAAAA5Q8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQPAAAAAAAA5A8AAAAAAAAAAAAAAADwvw"
						],
						[
							3137,
							2,
							"left_delete",
							null,
							"AgAAAOQPAAAAAAAA5A8AAAAAAAABAAAAIOMPAAAAAAAA4w8AAAAAAAABAAAAPQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOUPAAAAAAAA5Q8AAAAAAAAAAAAAAADwvw"
						],
						[
							3138,
							1,
							"insert",
							{
								"characters": "="
							},
							"AQAAAOMPAAAAAAAA5A8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMPAAAAAAAA4w8AAAAAAAAAAAAAAADwvw"
						],
						[
							3139,
							1,
							"left_delete",
							null,
							"AQAAAOMPAAAAAAAA4w8AAAAAAAABAAAAPQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQPAAAAAAAA5A8AAAAAAAAAAAAAAADwvw"
						],
						[
							3140,
							1,
							"insert",
							{
								"characters": "+"
							},
							"AQAAAOMPAAAAAAAA5A8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMPAAAAAAAA4w8AAAAAAAAAAAAAAADwvw"
						],
						[
							3141,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAOQPAAAAAAAA5Q8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQPAAAAAAAA5A8AAAAAAAAAAAAAAADwvw"
						],
						[
							3142,
							1,
							"insert_snippet",
							{
								"contents": "'$0'"
							},
							"AQAAAOUPAAAAAAAA5w8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOUPAAAAAAAA5Q8AAAAAAAAAAAAAAADwvw"
						],
						[
							3143,
							1,
							"insert",
							{
								"characters": "\\n"
							},
							"AgAAAOYPAAAAAAAA5w8AAAAAAAAAAAAA5w8AAAAAAADoDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYPAAAAAAAA5g8AAAAAAAAAAAAAAADwvw"
						],
						[
							3146,
							1,
							"right_delete",
							null,
							"AQAAAOMPAAAAAAAA4w8AAAAAAAACAAAAKyA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMPAAAAAAAA5Q8AAAAAAAAAAAAAAADwvw"
						],
						[
							3147,
							1,
							"left_delete",
							null,
							"AQAAAOIPAAAAAAAA4g8AAAAAAAABAAAAIA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMPAAAAAAAA4w8AAAAAAAAAAAAAAADwvw"
						],
						[
							3148,
							1,
							"insert",
							{
								"characters": ".ass"
							},
							"BAAAAOIPAAAAAAAA4w8AAAAAAAAAAAAA4w8AAAAAAADkDwAAAAAAAAAAAADkDwAAAAAAAOUPAAAAAAAAAAAAAOUPAAAAAAAA5g8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIPAAAAAAAA4g8AAAAAAAAAAAAAAADwvw"
						],
						[
							3149,
							2,
							"left_delete",
							null,
							"AgAAAOUPAAAAAAAA5Q8AAAAAAAABAAAAc+QPAAAAAAAA5A8AAAAAAAABAAAAcw",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYPAAAAAAAA5g8AAAAAAAAAAAAAAADwvw"
						],
						[
							3150,
							1,
							"insert",
							{
								"characters": "pp"
							},
							"AgAAAOQPAAAAAAAA5Q8AAAAAAAAAAAAA5Q8AAAAAAADmDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQPAAAAAAAA5A8AAAAAAAAAAAAAAADwvw"
						],
						[
							3151,
							1,
							"insert_completion",
							{
								"completion": "append",
								"format": "text",
								"keep_prefix": false,
								"must_insert": false,
								"trigger": "append"
							},
							"AgAAAOMPAAAAAAAA4w8AAAAAAAADAAAAYXBw4w8AAAAAAADpDwAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYPAAAAAAAA5g8AAAAAAAAAAAAAAADwvw"
						],
						[
							3152,
							1,
							"insert",
							{
								"characters": "("
							},
							"AQAAAOkPAAAAAAAA6g8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkPAAAAAAAA6Q8AAAAAAAAAAAAAAADwvw"
						],
						[
							3154,
							1,
							"insert",
							{
								"characters": ")"
							},
							"AQAAAO8PAAAAAAAA8A8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8PAAAAAAAA7w8AAAAAAAAAAAAAAADwvw"
						],
						[
							3159,
							1,
							"left_delete",
							null,
							"AQAAAAwQAAAAAAAADBAAAAAAAAABAAAACg",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0QAAAAAAAADRAAAAAAAAAAAAAAAADwvw"
						],
						[
							3163,
							1,
							"insert",
							{
								"characters": ".toString"
							},
							"CQAAAAoQAAAAAAAACxAAAAAAAAAAAAAACxAAAAAAAAAMEAAAAAAAAAAAAAAMEAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADhAAAAAAAAAAAAAADhAAAAAAAAAPEAAAAAAAAAAAAAAPEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAERAAAAAAAAAAAAAAERAAAAAAAAASEAAAAAAAAAAAAAASEAAAAAAAABMQAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoQAAAAAAAAChAAAAAAAAAAAAAAAADwvw"
						],
						[
							3164,
							1,
							"insert_snippet",
							{
								"contents": "($0)"
							},
							"AQAAABMQAAAAAAAAFRAAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMQAAAAAAAAExAAAAAAAAAAAAAAAADwvw"
						],
						[
							3168,
							1,
							"left_delete",
							null,
							"AQAAAMwPAAAAAAAAzA8AAAAAAAABAAAAMQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM0PAAAAAAAAzQ8AAAAAAAAAAAAAAADwvw"
						],
						[
							3169,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AQAAAMwPAAAAAAAAzQ8AAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwPAAAAAAAAzA8AAAAAAAAAAAAAAADwvw"
						],
						[
							3174,
							1,
							"right_delete",
							null,
							"AQAAAOIPAAAAAAAA4g8AAAAAAAANAAAALmFwcGVuZCgnXG4nKQ",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIPAAAAAAAA7w8AAAAAAAAAAAAAAADwvw"
						]
					]
				},
				{
					"contents": "1\n8",
					"file": "/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/input.txt",
					"file_size": 4,
					"file_write_time": 133177340203523844,
					"settings":
					{
						"buffer_size": 3,
						"line_ending": "Windows"
					}
				},
				{
					"contents": "import java.io.DataInputStream;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\n//Static imports for less code\nimport static java.math.BigInteger.valueOf;\nimport static java.lang.Math.max;\nimport static java.lang.Math.min;\nimport static java.lang.Math.abs;\nimport static java.lang.System.out;\n//Utilities\nimport java.util.Scanner;\nimport java.util.Collections;\nimport java.util.ArrayList;\nimport java.util.Random;\nimport java.util.HashMap;\nimport java.util.AbstractMap;\nimport java.util.Date;\nimport java.util.Comparator;\nimport java.util.Collections;\nimport java.util.Arrays;\nimport java.util.Queue;\nimport java.util.PriorityQueue;\nimport java.util.TreeMap;\nimport java.util.NavigableMap;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.HashSet;\nimport java.math.BigInteger;\nimport java.util.Random;\nimport java.util.StringTokenizer;\n\n\n\npublic class FindingSubsets {\n\n    /*                                                     \"Om\"\n                                                    \"\"thou art that\"\"\n    */\n    \n    /* COMMIT TO MEMORY WHILE USING JAVA IN COMPETETIVE PROGRAMMING */\n\n    //# Always use Collections.sort()// merge sort over any other sorting algorithm.\n    //# It will help avoid TLE.\n\n    //# Notes: to keep in mind while coding - the program must run in max 1 sec.\n    // and 1 sec is equivalent to 10^8 instruction at most.\n    //## make sure to utilize fastI/O - Readers implementation and PrintWriters implementation\n    // is already present;\n\n    //## Always try to use BigInteger class while writing contests.\n\n    //## While comparing wrapper class objects please use equals method \n    // or write your own implementation of the equals method.\n    \n    //## When writing comparator and using in sorting the values make sure you do not\n    // break the general contract of writing a comparator.\n    \n    //## while comparing characters make sure to enclose in single quotes.\n\n    public static void main(String[] args) throws IOException {\n        long test = fs.nextLong();\n        while(test > 0) {\n            //Write code here;\n            int n = fs.nextInt();\n            subsets(n);\n            test--;\n        }\n\n        out.flush(); // to flush the output\n    }\n    static void subsets(int n) {\n        // code goes here//\n        int[] set = new int[n];\n        for(int i = 0; i < n; i++) {\n        \tset[i] = i + 1;\n        }\n        ArrayList<ArrayList<Integer>> listFinal = new ArrayList<>();\n        for(int mask = 0; mask <= Math.pow(2 , n) - 1; mask++) {\n        \tArrayList<Integer> list = new ArrayList<>();\n        \tfor(int j = 0; j < set.length; j++) {\n        \t\t//process element\n        \t\tint ele = set[j];\n        \t\tif((mask & (1 << n - 1 - j)) > 0) {\n        \t\t\tlist.add(ele);\n        \t\t}\n        \t}\n        \tlistFinal.add(list);\n        }\n        Collections.sort(listFinal, new Comparator<ArrayList>(){\n        \t@Override\n        \tpublic int compare(ArrayList list1, ArrayList list2) {\n        \t\treturn list1.size() - list2.size();\n        \t}\n        });\n        for(int i = 0 ; i < listFinal.size(); i++) {\n        \tprint(listFinal.get(i));\n        }\n    }\n\tstatic void print(ArrayList list) {\n\t\tlist.toArray();\n\t\tout.print(list + \"\\n\");\n\t}\n\nstatic PrintWriter out = new PrintWriter(System.out);\nstatic Reader rd = new Reader();\nstatic FastScanner fs = new FastScanner();\nstatic final Random random=new Random();\nstatic final int mod=1_000_000_007;\nstatic long[][] vals;\n\n\nstatic void ruffleSort(int[] a) {\n    int n=a.length;//shuffle, then sort \n    for (int i=0; i<n; i++) {\n        int oi=random.nextInt(n), temp=a[oi];\n        a[oi]=a[i]; a[i]=temp;\n    }\n    Arrays.sort(a);\n}\n\nstatic long add(long a, long b) {\n    return (a+b)%mod;\n}\n\nstatic long sub(long a, long b) {\n    return ((a-b)%mod+mod)%mod;\n}\n\nstatic long mul(long a, long b) {\n    return (a*b)%mod;\n}\n\nstatic long exp(long base, long exp) {\n    if (exp==0) return 1;\n    long half=exp(base, exp/2);\n    if (exp%2==0) return mul(half, half);\n    return mul(half, mul(half, base));\n}\n\nstatic long[] factorials=new long[2_000_001];\n    static long[] invFactorials=new long[2_000_001];\n    static void precompFacts() {\n        factorials[0]=invFactorials[0]=1;\n        for (int i=1; i<factorials.length; i++) factorials[i]=mul(factorials[i-1], i);\n        invFactorials[factorials.length-1]=exp(factorials[factorials.length-1], mod-2);\n        for (int i=invFactorials.length-2; i>=0; i--)\n            invFactorials[i]=mul(invFactorials[i+1], i+1);\n    }\n    \nstatic long nCk(int n, int k) {\n    return mul(factorials[n], mul(invFactorials[k], invFactorials[n-k]));\n}\n\nstatic class Pair implements Comparable<Pair> {\n        int i, j;\n        long cost;\n        public Pair(int i, int j, long cost) {\n            this.i=i;\n            this.j=j;\n            this.cost=cost;\n        }\n        public int compareTo(Pair o) {\n            return -Long.compare(cost, o.cost);\n        }\n    }\nstatic void sort(int[] a) {\n        ArrayList<Integer> l=new ArrayList<>();\n        for (int i:a) l.add(i);\n        Collections.sort(l);\n        for (int i=0; i<a.length; i++) a[i]=l.get(i);\n}\nstatic class Node {\n        int index;\n        ArrayList<Node> adj=new ArrayList<>();\n        Node par;\n        long parEdgeVal;\n        int subtreeSize;\n \n        public Node(int i) {\n            this.index=i;\n        }\n        void dfs(Node par) {\n            this.par=par;\n            subtreeSize++;\n            for (Node nn:adj) {\n                if (nn==par) {\n                    continue;\n                }\n                nn.dfs(this);\n                subtreeSize+=nn.subtreeSize;\n            }\n            if (par!=null) {\n                long decreaseToMe=vals[0][par.index]-vals[0][index];\n                if (decreaseToMe%subtreeSize!=0) throw null;\n                parEdgeVal=decreaseToMe/subtreeSize;\n            }\n        }\n    }\n\nstatic class DisjointSet {\n        int[] s;\n        \n        public DisjointSet(int n) {\n            Arrays.fill(s = new int[n], -1);\n        }\n        \n        public int find(int i) {\n            return s[i] < 0 ? i : (s[i] = find(s[i]));\n        }\n        \n        public boolean union(int a, int b) {\n            if ((a = find(a)) == (b = find(b))) return false;\n            if(s[a] == s[b]) s[a]--;\n            if(s[a] <= s[b]) s[b] = a; \n            else s[a] = b;\n            return true;\n        }\n    }\nstatic long gcd(long u, long v) {\n    int shift;\n\n    if (u == 0) return v;\n    if (v == 0) return u;\n\n    for (shift = 0; ((u | v) & 1) == 0; ++shift) {\n        u >>= 1;\n        v >>= 1;\n    }\n\n    while ((u & 1) == 0) {\n        u >>= 1;\n    }\n\n    do {\n        while ((v & 1) == 0) {\n            v >>= 1;\n        }\n\n        if (u > v) {\n            long t = v;\n            v = u;\n            u = t;\n        }\n\n        v = v - u;\n    } while (v != 0);\n\n    return u << shift;\n}\nstatic class FastScanner {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st=new StringTokenizer(\"\");\n        String next() {\n            while (!st.hasMoreTokens())\n                try {\n                    st=new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            return st.nextToken();\n        }\n        \n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n        int[] readArray(int n) {\n            int[] a=new int[n];\n            for (int i=0; i<n; i++) a[i]=nextInt();\n            return a;\n        }\n        long[] readLongArray(int n) {\n            long[] a=new long[n];\n            for (int i=0; i<n; i++) a[i]=nextLong();\n            return a;\n        }\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n}\n\nstatic class IncComp implements Comparator<Integer> {\n    @Override\n    public int compare(Integer a , Integer b) {\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\nstatic class DescComp implements Comparator<Integer> {\n    @Override\n    public int compare(Integer a , Integer b) {\n        return a < b ? 1 : a > b ? -1 : 0;\n    }\n}\nstatic Queue<Integer> ascQ = new PriorityQueue<>(new Comparator<Integer>(){\n        @Override\n        public int compare(Integer a, Integer b) {\n            return a <= b ? -1 : 1;\n        }\n});\nstatic Queue<Integer> descQ = new PriorityQueue<>(new Comparator<Integer>(){\n        @Override\n        public int compare(Integer a, Integer b) {\n            return a >= b ? -1 : 1;\n        }\n});\n\nstatic class Reader {\n    final private int BUFFER_SIZE = 1 << 16;\n    private final DataInputStream din;\n    private final byte[] buffer;\n    private int bufferPointer, bytesRead;\n\n    public Reader() {\n        din = new DataInputStream(System.in);\n        buffer = new byte[BUFFER_SIZE];\n        bufferPointer = bytesRead = 0;\n    }\n\n    public Reader(String file_name) throws IOException {\n        din = new DataInputStream(\n                new FileInputStream(file_name));\n        buffer = new byte[BUFFER_SIZE];\n        bufferPointer = bytesRead = 0;\n    }\n\n    public String readLine() throws IOException {\n        byte[] buf = new byte[101]; // line length\n        int cnt = 0, c;\n        while ((c = read()) != -1) {\n            if (c == '\\n') {\n                if (cnt != 0) {\n                    break;\n                } else {\n                    continue;\n                }\n            }\n            buf[cnt++] = (byte) c;\n        }\n        return new String(buf, 0, cnt - 1);\n    }\n\n    public int nextInt() throws IOException {\n        int ret = 0;\n        byte c = read();\n        while (c <= ' ') {\n            c = read();\n        }\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n        do {\n            ret = ret * 10 + c - '0';\n        } while ((c = read()) >= '0' && c <= '9');\n\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public long nextLong() throws IOException {\n        long ret = 0;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n        do {\n            ret = ret * 10 + c - '0';\n        } while ((c = read()) >= '0' && c <= '9');\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public double nextDouble() throws IOException {\n        double ret = 0, div = 1;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n\n        do {\n            ret = ret * 10 + c - '0';\n        } while ((c = read()) >= '0' && c <= '9');\n\n        if (c == '.') {\n            while ((c = read()) >= '0' && c <= '9') {\n                ret += (c - '0') / (div *= 10);\n            }\n        }\n\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    private void fillBuffer() throws IOException {\n        bytesRead = din.read(buffer, bufferPointer = 0,\n                BUFFER_SIZE);\n        if (bytesRead == -1)\n            buffer[0] = -1;\n    }\n\n    private byte read() throws IOException {\n        if (bufferPointer == bytesRead)\n            fillBuffer();\n        return buffer[bufferPointer++];\n    }\n\n    public void close() throws IOException {\n        if (din == null)\n            return;\n        din.close();\n    }\n\n}\n}",
					"file": "/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/FindingSubsets.java",
					"file_size": 11885,
					"file_write_time": 133369296333039834,
					"settings":
					{
						"buffer_size": 11462,
						"line_ending": "Windows"
					}
				},
				{
					"contents": "import java.io.DataInputStream;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\n//Static imports for less code\nimport static java.math.BigInteger.valueOf;\nimport static java.lang.Math.max;\nimport static java.lang.Math.min;\nimport static java.lang.Math.abs;\nimport static java.lang.System.out;\n//Utilities\nimport java.util.Scanner;\nimport java.util.Collections;\nimport java.util.ArrayList;\nimport java.util.Random;\nimport java.util.HashMap;\nimport java.util.AbstractMap;\nimport java.util.Date;\nimport java.util.Comparator;\nimport java.util.Collections;\nimport java.util.Arrays;\nimport java.util.Queue;\nimport java.util.PriorityQueue;\nimport java.util.TreeMap;\nimport java.util.NavigableMap;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.HashSet;\nimport java.math.BigInteger;\nimport java.util.Random;\nimport java.util.StringTokenizer;\n\n\n\npublic class Exponentiation {\n\n    /*                                                     \"Om\"\n                                                    \"\"thou art that\"\"\n    */\n    \n    /* COMMIT TO MEMORY WHILE USING JAVA IN COMPETETIVE PROGRAMMING */\n\n    //# Always use Collections.sort()// merge sort over any other sorting algorithm.\n    //# It will help avoid TLE.\n\n    //# Notes: to keep in mind while coding - the program must run in max 1 sec.\n    // and 1 sec is equivalent to 10^8 instruction at most.\n    //## make sure to utilize fastI/O - Readers implementation and PrintWriters implementation\n    // is already present;\n\n    //## Always try to use BigInteger class while writing contests.\n\n    //## While comparing wrapper class objects please use equals method \n    // or write your own implementation of the equals method.\n    \n    //## When writing comparator and using in sorting the values make sure you do not\n    // break the general contract of writing a comparator.\n    \n    //## while comparing characters make sure to enclose in single quotes.\n\n    public static void main(String[] args) throws IOException {\n        long test = fs.nextLong();\n        while(test > 0) {\n            //Write code here;\n            solve();\n            \n        }\n\n        out.flush(); // to flush the output\n    }\n    public static void solve() {\n        // code goes here//\n        out.print( \"Infinite\" + \"\\n\");\n    }\n\n\nstatic PrintWriter out = new PrintWriter(System.out);\nstatic Reader rd = new Reader();\nstatic FastScanner fs = new FastScanner();\nstatic final Random random=new Random();\nstatic final int mod=1_000_000_007;\nstatic long[][] vals;\n\n//My helper methods :\n\n    static void print(ArrayList list) {\n        list.toArray();\n        out.print(list + \"\\n\");\n    }\n    static void subsets(int n) {\n        // code goes here//\n        int[] set = new int[n];\n        for(int i = 0; i < n; i++) {\n            set[i] = i + 1;\n        }\n        ArrayList<ArrayList<Integer>> listFinal = new ArrayList<>();\n        for(int mask = 0; mask <= Math.pow(2 , n) - 1; mask++) {\n            ArrayList<Integer> list = new ArrayList<>();\n            for(int j = 0; j < set.length; j++) {\n                //process element\n                int ele = set[j];\n                if((mask & (1 << n - 1 - j)) > 0) {\n                    list.add(ele);\n                }\n            }\n            listFinal.add(list);\n        }\n        Collections.sort(listFinal, new Comparator<ArrayList>(){\n            @Override\n            public int compare(ArrayList list1, ArrayList list2) {\n                return list1.size() - list2.size();\n            }\n        });\n        for(int i = 0 ; i < listFinal.size(); i++) {\n            print(listFinal.get(i));\n        }\n    }\n\nstatic void ruffleSort(int[] a) {\n    int n=a.length;//shuffle, then sort \n    for (int i=0; i<n; i++) {\n        int oi=random.nextInt(n), temp=a[oi];\n        a[oi]=a[i]; a[i]=temp;\n    }\n    Arrays.sort(a);\n}\n\nstatic long add(long a, long b) {\n    return (a+b)%mod;\n}\n\nstatic long sub(long a, long b) {\n    return ((a-b)%mod+mod)%mod;\n}\n\nstatic long mul(long a, long b) {\n    return (a*b)%mod;\n}\n\nstatic long exp(long base, long exp) {\n    if (exp==0) return 1;\n    long half=exp(base, exp/2);\n    if (exp%2==0) return mul(half, half);\n    return mul(half, mul(half, base));\n}\n\nstatic long[] factorials=new long[2_000_001];\n    static long[] invFactorials=new long[2_000_001];\n    static void precompFacts() {\n        factorials[0]=invFactorials[0]=1;\n        for (int i=1; i<factorials.length; i++) factorials[i]=mul(factorials[i-1], i);\n        invFactorials[factorials.length-1]=exp(factorials[factorials.length-1], mod-2);\n        for (int i=invFactorials.length-2; i>=0; i--)\n            invFactorials[i]=mul(invFactorials[i+1], i+1);\n    }\n    \nstatic long nCk(int n, int k) {\n    return mul(factorials[n], mul(invFactorials[k], invFactorials[n-k]));\n}\n\nstatic class Pair implements Comparable<Pair> {\n        int i, j;\n        long cost;\n        public Pair(int i, int j, long cost) {\n            this.i=i;\n            this.j=j;\n            this.cost=cost;\n        }\n        public int compareTo(Pair o) {\n            return -Long.compare(cost, o.cost);\n        }\n    }\nstatic void sort(int[] a) {\n        ArrayList<Integer> l=new ArrayList<>();\n        for (int i:a) l.add(i);\n        Collections.sort(l);\n        for (int i=0; i<a.length; i++) a[i]=l.get(i);\n}\nstatic class Node {\n        int index;\n        ArrayList<Node> adj=new ArrayList<>();\n        Node par;\n        long parEdgeVal;\n        int subtreeSize;\n \n        public Node(int i) {\n            this.index=i;\n        }\n        void dfs(Node par) {\n            this.par=par;\n            subtreeSize++;\n            for (Node nn:adj) {\n                if (nn==par) {\n                    continue;\n                }\n                nn.dfs(this);\n                subtreeSize+=nn.subtreeSize;\n            }\n            if (par!=null) {\n                long decreaseToMe=vals[0][par.index]-vals[0][index];\n                if (decreaseToMe%subtreeSize!=0) throw null;\n                parEdgeVal=decreaseToMe/subtreeSize;\n            }\n        }\n    }\n\nstatic class DisjointSet {\n        int[] s;\n        \n        public DisjointSet(int n) {\n            Arrays.fill(s = new int[n], -1);\n        }\n        \n        public int find(int i) {\n            return s[i] < 0 ? i : (s[i] = find(s[i]));\n        }\n        \n        public boolean union(int a, int b) {\n            if ((a = find(a)) == (b = find(b))) return false;\n            if(s[a] == s[b]) s[a]--;\n            if(s[a] <= s[b]) s[b] = a; \n            else s[a] = b;\n            return true;\n        }\n    }\nstatic long gcd(long u, long v) {\n    int shift;\n\n    if (u == 0) return v;\n    if (v == 0) return u;\n\n    for (shift = 0; ((u | v) & 1) == 0; ++shift) {\n        u >>= 1;\n        v >>= 1;\n    }\n\n    while ((u & 1) == 0) {\n        u >>= 1;\n    }\n\n    do {\n        while ((v & 1) == 0) {\n            v >>= 1;\n        }\n\n        if (u > v) {\n            long t = v;\n            v = u;\n            u = t;\n        }\n\n        v = v - u;\n    } while (v != 0);\n\n    return u << shift;\n}\nstatic class FastScanner {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st=new StringTokenizer(\"\");\n        String next() {\n            while (!st.hasMoreTokens())\n                try {\n                    st=new StringTokenizer(br.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            return st.nextToken();\n        }\n        \n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n        int[] readArray(int n) {\n            int[] a=new int[n];\n            for (int i=0; i<n; i++) a[i]=nextInt();\n            return a;\n        }\n        long[] readLongArray(int n) {\n            long[] a=new long[n];\n            for (int i=0; i<n; i++) a[i]=nextLong();\n            return a;\n        }\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n}\n\nstatic class IncComp implements Comparator<Integer> {\n    @Override\n    public int compare(Integer a , Integer b) {\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\nstatic class DescComp implements Comparator<Integer> {\n    @Override\n    public int compare(Integer a , Integer b) {\n        return a < b ? 1 : a > b ? -1 : 0;\n    }\n}\nstatic Queue<Integer> ascQ = new PriorityQueue<>(new Comparator<Integer>(){\n        @Override\n        public int compare(Integer a, Integer b) {\n            return a <= b ? -1 : 1;\n        }\n});\nstatic Queue<Integer> descQ = new PriorityQueue<>(new Comparator<Integer>(){\n        @Override\n        public int compare(Integer a, Integer b) {\n            return a >= b ? -1 : 1;\n        }\n});\n\nstatic class Reader {\n    final private int BUFFER_SIZE = 1 << 16;\n    private final DataInputStream din;\n    private final byte[] buffer;\n    private int bufferPointer, bytesRead;\n\n    public Reader() {\n        din = new DataInputStream(System.in);\n        buffer = new byte[BUFFER_SIZE];\n        bufferPointer = bytesRead = 0;\n    }\n\n    public Reader(String file_name) throws IOException {\n        din = new DataInputStream(\n                new FileInputStream(file_name));\n        buffer = new byte[BUFFER_SIZE];\n        bufferPointer = bytesRead = 0;\n    }\n\n    public String readLine() throws IOException {\n        byte[] buf = new byte[101]; // line length\n        int cnt = 0, c;\n        while ((c = read()) != -1) {\n            if (c == '\\n') {\n                if (cnt != 0) {\n                    break;\n                } else {\n                    continue;\n                }\n            }\n            buf[cnt++] = (byte) c;\n        }\n        return new String(buf, 0, cnt - 1);\n    }\n\n    public int nextInt() throws IOException {\n        int ret = 0;\n        byte c = read();\n        while (c <= ' ') {\n            c = read();\n        }\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n        do {\n            ret = ret * 10 + c - '0';\n        } while ((c = read()) >= '0' && c <= '9');\n\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public long nextLong() throws IOException {\n        long ret = 0;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n        do {\n            ret = ret * 10 + c - '0';\n        } while ((c = read()) >= '0' && c <= '9');\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public double nextDouble() throws IOException {\n        double ret = 0, div = 1;\n        byte c = read();\n        while (c <= ' ')\n            c = read();\n        boolean neg = (c == '-');\n        if (neg)\n            c = read();\n\n        do {\n            ret = ret * 10 + c - '0';\n        } while ((c = read()) >= '0' && c <= '9');\n\n        if (c == '.') {\n            while ((c = read()) >= '0' && c <= '9') {\n                ret += (c - '0') / (div *= 10);\n            }\n        }\n\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    private void fillBuffer() throws IOException {\n        bytesRead = din.read(buffer, bufferPointer = 0,\n                BUFFER_SIZE);\n        if (bytesRead == -1)\n            buffer[0] = -1;\n    }\n\n    private byte read() throws IOException {\n        if (bufferPointer == bytesRead)\n            fillBuffer();\n        return buffer[bufferPointer++];\n    }\n\n    public void close() throws IOException {\n        if (din == null)\n            return;\n        din.close();\n    }\n\n}\n}",
					"file": "/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/Exponentiation.java",
					"file_size": 12061,
					"file_write_time": 133369298048015132,
					"settings":
					{
						"buffer_size": 11632,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					}
				},
				{
					"file": "/D/_code-hanisntsolo/src/com/competetive/cp.sublime-snippet",
					"settings":
					{
						"buffer_size": 10669,
						"line_ending": "Windows"
					}
				}
			],
			"build_system": "Packages/User/sasa.sublime-build",
			"build_system_choices":
			[
				[
					[
						[
							"Packages/User/JavaC-finalgajeet.sublime-build",
							""
						],
						[
							"Packages/User/JavaC-finalgajeet.sublime-build",
							"CP"
						]
					],
					[
						"Packages/User/JavaC-finalgajeet.sublime-build",
						"CP"
					]
				],
				[
					[
						[
							"Packages/User/JavaScript.sublime-build",
							""
						],
						[
							"Packages/User/JavaScript.sublime-build",
							"CP"
						]
					],
					[
						"Packages/User/JavaScript.sublime-build",
						"CP"
					]
				],
				[
					[
						[
							"Packages/User/sasa.sublime-build",
							""
						],
						[
							"Packages/User/sasa.sublime-build",
							"CP"
						]
					],
					[
						"Packages/User/sasa.sublime-build",
						"CP"
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"terminus",
						"Terminus: Toggle Panel"
					],
					[
						"terninus",
						"Terminus: Open Default Shell in Panel"
					],
					[
						"terminal",
						"Preferences: Terminus Command Palette"
					],
					[
						"termin",
						"Terminus: List Shells"
					],
					[
						"Snippet: ",
						"Snippet: cp"
					],
					[
						"Snippet: cp",
						"Snippet: cp"
					],
					[
						"ter",
						"Terminus: List Shells"
					],
					[
						"terminu",
						"Terminus: List Shells"
					],
					[
						"tern",
						"Terminus: List Shells"
					],
					[
						"termi",
						"Terminus: List Shells"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"packa",
						"Install Package Control"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 0.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/D/_code-hanisntsolo",
				"/D/_code-hanisntsolo/hanisntsolo",
				"/D/_code-hanisntsolo/hanisntsolo/sublime-text",
				"/D/_code-hanisntsolo/hanisntsolo/sublime-text/Packages-windows",
				"/D/_code-hanisntsolo/hanisntsolo/sublime-text/Packages-windows/Theme - Default",
				"/D/_code-hanisntsolo/src",
				"/D/_code-hanisntsolo/src/com",
				"/D/_code-hanisntsolo/src/com/competetive",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice"
			],
			"file_history":
			[
				"/D/_code-hanisntsolo/.gitignore",
				"/D/_code-hanisntsolo/.idea/.gitignore",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/output.txt",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/primenumberandfactorisation/output.txt",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/input.txt",
				"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/output.txt",
				"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/input.txt",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/primenumberandfactorisation/input.txt",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LexicographicallySmallest.java",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/FindingSubsets.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BinaryExponentiation.java",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/primenumberandfactorisation/Test.java",
				"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/Factors.java",
				"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/PrimeQueries.java",
				"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/PrimeSieve.java",
				"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/PrimeChecker.java",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/Exponentiation.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Round843_A.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/RestoreThePermutation.java",
				"/D/_code-hanisntsolo/src/com/competetive/books/antti_laaksonen/input.txt",
				"/D/_code-hanisntsolo/src/com/competetive/books/antti_laaksonen/output.txt",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/output.txt",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/input.txt",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Humanoid.java",
				"/D/_code-hanisntsolo/src/com/competetive/books/antti_laaksonen/GeneratingSubsets.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/AllPossibleDigits.java",
				"/C/Users/hanisntsolo-boxx/AppData/Roaming/Sublime Text 3/Packages/User/cp.sublime-snippet",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Round141A.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Hello2023B.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Hello2023A.java",
				"/D/_code-hanisntsolo/src/com/competetive/leetcodeDaily/DetectCapitals.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LostPermutation834.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Thermostat.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/MakeItRound.java",
				"/D/_code-hanisntsolo/src/com/competetive/cp.sublime-snippet",
				"/D/_code-hanisntsolo/src/com/competetive/leetcodeDaily/output.txt",
				"/D/_code-hanisntsolo/src/com/competetive/leetcodeDaily/input.txt",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Div3_839_E.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Div3_839_D.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Div3839A.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/AttilasFavProb.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/MidiumNo.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Advantage.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LuckyChains.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/B.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/DivideAndConquer.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BlockTowers.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/CutTheTriangle.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Valleys.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/F.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HamiltonianWall2.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/MaxPermutation.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/AddPlus.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HossamAndCombinatorics.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/NotePad.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/ExRound.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/GCD.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HamiltonianWall.java",
				"/C/Users/hanisntsolo-boxx/AppData/Roaming/Sublime Text 3/Packages/User/op.sublime-snippet",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/\tat java.base/java.lang.StringBuffer.substring(StringBuffer.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Airport.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/YesYes.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HossamAndFriends.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Puzzles.java",
				"/D/_code-hanisntsolo/src/com/competetive/cd.sublime-snippet",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HossamAndRange.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/SubSets.java",
				"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/BitManipulation.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BitManipulation.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/ChatRoom.java",
				"/D/_code-hanisntsolo/src/com/competetive/TemplateFull.java",
				"/D/_code-hanisntsolo/src/com/competetive/sasa/bit-manipulation/SubSets.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/ILoveUserNames.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/StringTask.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/FootBall2.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LittleElephantAndFunction.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Dragons.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/NumberOfPositions.java",
				"/D/_code-hanisntsolo/sublime-text/Packages-windows/BitManipulation.java",
				"/D/_code-hanisntsolo/hanisntsolo/sublime-text/ColumnOrganising Steps",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BicycleChain.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BusinessTrip.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Sale.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/DubStep.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/XeniaAndRingRoad.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/FootBall.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Translation.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/SuperCentral.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/JeffAndDigits.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/MagicNumbers.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/SystemOfEquations.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/EvenOdds.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LittleElephantAndRozdil.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HexTheorem.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Cupboards.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/DimaAndFriends.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/JuhuChildren.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Reconaissance2.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Parellopiped.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/EffectiveApproach.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/PeterAndBook.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HQnine.java",
				"/D/_code-hanisntsolo/src/com/competetive/leetcodeDaily/MinAvgDiff.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/SoftDrinking.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/AmusingJoke.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/HorseShoeColor.java",
				"/C/Users/hanisntsolo-boxx/AppData/Roaming/Sublime Text 3/Packages/User/ins.sublime-snippet",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/PerfectPermutation.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/ArrivalOfGeneral.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Drinks.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/InsomniaCure.java",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/DynamicProgramming/output.txt",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/DynamicProgramming/input.txt",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/DynamicProgramming/IncDecNumber.java",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/DynamicProgramming/SortedArray.java",
				"/D/_code-hanisntsolo/src/com/competetive/leetcodeDaily/Solution.java",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/DynamicProgramming/Fibonacci.java",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/DynamicProgramming/PowerFunction.java",
				"/D/_code-hanisntsolo/src/com/competetive/prateek_narang/DynamicProgramming/Factorial.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/NextPrime.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Error",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/\tat java.base/java.lang.Integer.valueOf(Integer.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Caused by",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/UltraFastMathmatician.java",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/BeautifulYear.java",
				"/C/Users/hanisntsolo-boxx/AppData/Roaming/Sublime Text 3/Packages/User/import.sublime-snippet",
				"/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/LightsOut.java"
			],
			"find":
			{
				"height": 41.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"BigInteger",
					");\n",
					"Collectors",
					");\n",
					"System"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"long"
				],
				"reverse": false,
				"scrollbar_highlights": true,
				"show_context": true,
				"use_buffer2": true,
				"use_gitignore": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "D:\\_code-hanisntsolo"
				}
			],
			"groups":
			[
				{
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/C/Users/hanisntsolo-boxx/AppData/Roaming/Sublime Text 3/Packages/User/cp.sublime-snippet",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 12010,
								"regions":
								{
								},
								"selection":
								[
									[
										840,
										840
									]
								],
								"settings":
								{
									"syntax": "Packages/XML/XML.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 960.0,
								"zoom_level": 1.0
							},
							"stack_index": 4,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/D/_code-hanisntsolo/src/com/competetive/codeforcespractice/rating_less_than_1300/Leena.java",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 13322,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"auto_name": "",
									"syntax": "Packages/Java/Java.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 3911.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/input.txt",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 3,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/FindingSubsets.java",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 11462,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Java/Java.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "/D/_code-hanisntsolo/src/com/competetive/prateek_narang/competetive_programming_essentials/Exponentiation.java",
							"selected": true,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 11632,
								"regions":
								{
								},
								"selection":
								[
									[
										398,
										398
									]
								],
								"settings":
								{
									"syntax": "Packages/Java/Java.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 2240.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"stack_multiselect": false,
							"type": "text"
						}
					]
				},
				{
					"sheets":
					[
					]
				},
				{
					"sheets":
					[
						{
							"buffer": 5,
							"file": "/D/_code-hanisntsolo/src/com/competetive/cp.sublime-snippet",
							"selected": true,
							"semi_transient": true,
							"settings":
							{
								"buffer_size": 10669,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/XML/XML.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 3328.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"stack_multiselect": false,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 41.0
			},
			"input":
			{
				"height": 68.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						2
					],
					[
						1,
						0,
						2,
						1
					],
					[
						1,
						1,
						2,
						2
					]
				],
				"cols":
				[
					0.0,
					0.461139258336,
					1.0
				],
				"rows":
				[
					0.0,
					0.5,
					1.0
				]
			},
			"menu_visible": true,
			"output.Terminus":
			{
				"height": 45.0
			},
			"output.exec":
			{
				"height": 45.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "Packages/User/JavaC-finalgajeet.sublime-build",
			"position": "0,2,3,-1,-1,-1,-1,1097,26,10,1928,f906068c997978419b172aed9e7518c3",
			"project": "",
			"replace":
			{
				"height": 78.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 2,
			"settings":
			{
				"last_automatic_layout":
				[
					[
						0,
						0,
						1,
						2
					],
					[
						1,
						0,
						2,
						1
					],
					[
						1,
						1,
						2,
						2
					]
				]
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 271.0,
			"status_bar_visible": true,
			"template_settings":
			{
				"max_columns": 2
			},
			"window_id": 28,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
			"/C/Users/hanisntsolo-boxx/Desktop/Code Playground/Hanistsolo_bot/hanisntsolo.sublime-workspace"
		]
	}
}
